name: volcengine/volcengine
resources:
    volcengine_acl:
        subCategory: CLB
        description: Provides a resource to manage acl
        name: volcengine_acl
        title: volcengine_acl
        examples:
            - name: foo
              manifest: |-
                {
                  "acl_entries": [
                    {
                      "description": "e1",
                      "entry": "172.20.1.0/24"
                    },
                    {
                      "description": "e3",
                      "entry": "172.20.3.0/24"
                    }
                  ],
                  "acl_name": "tf-test-2",
                  "project_name": "default"
                }
        argumentDocs:
            acl_entries: '- (Optional) The acl entry set of the Acl.'
            acl_name: '- (Optional) The name of Acl.'
            create_time: '- Create time of Acl.'
            description: '- (Optional) The description of the Acl.'
            entry: '- (Required) The content of the AclEntry.'
            id: '- ID of the resource.'
            project_name: '- (Optional) The ProjectName of the Acl.'
        importStatements: []
    volcengine_acl_entry:
        subCategory: CLB
        description: Provides a resource to manage acl entry
        name: volcengine_acl_entry
        title: volcengine_acl_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "acl_id": "${volcengine_acl.foo.id}",
                  "description": "tf acl entry desc demo",
                  "entry": "192.2.2.1/32"
                }
              references:
                acl_id: volcengine_acl.foo.id
              dependencies:
                volcengine_acl.foo: |-
                    {
                      "acl_name": "tf-test-3",
                      "description": "tf-test"
                    }
        argumentDocs:
            acl_id: '- (Required, ForceNew) The ID of Acl.'
            description: '- (Optional, ForceNew) The description of the AclEntry.'
            entry: '- (Required, ForceNew) The content of the AclEntry.'
            id: '- ID of the resource.'
        importStatements: []
    volcengine_alb:
        subCategory: ALB
        description: Provides a resource to manage alb
        name: volcengine_alb
        title: volcengine_alb
        examples:
            - name: alb-private
              manifest: |-
                {
                  "address_ip_version": "IPv4",
                  "delete_protection": "off",
                  "description": "acc-test",
                  "load_balancer_name": "acc-test-alb-private",
                  "project_name": "default",
                  "subnet_ids": [
                    "${volcengine_subnet.subnet_ipv6_1.id}",
                    "${volcengine_subnet.subnet_ipv6_2.id}"
                  ],
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "type": "private"
                }
              dependencies:
                volcengine_subnet.subnet_ipv6_1: |-
                    {
                      "cidr_block": "172.16.1.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet-ipv6-1",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_alb_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.subnet_ipv6_2: |-
                    {
                      "cidr_block": "172.16.2.0/24",
                      "ipv6_cidr_block": 2,
                      "subnet_name": "acc-test-subnet-ipv6-2",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_alb_zones.foo.zones[1].id}"
                    }
                volcengine_vpc.vpc_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc-ipv6"
                    }
                volcengine_vpc_ipv6_gateway.ipv6_gateway: |-
                    {
                      "name": "acc-test-ipv6-gateway",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}"
                    }
            - name: alb-public
              manifest: |-
                {
                  "address_ip_version": "DualStack",
                  "delete_protection": "off",
                  "depends_on": [
                    "${volcengine_vpc_ipv6_gateway.ipv6_gateway}"
                  ],
                  "description": "acc-test",
                  "eip_billing_config": [
                    {
                      "bandwidth": 1,
                      "eip_billing_type": "PostPaidByBandwidth",
                      "isp": "BGP"
                    }
                  ],
                  "ipv6_eip_billing_config": [
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "isp": "BGP"
                    }
                  ],
                  "load_balancer_name": "acc-test-alb-public",
                  "project_name": "default",
                  "subnet_ids": [
                    "${volcengine_subnet.subnet_ipv6_1.id}",
                    "${volcengine_subnet.subnet_ipv6_2.id}"
                  ],
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "type": "public"
                }
              dependencies:
                volcengine_subnet.subnet_ipv6_1: |-
                    {
                      "cidr_block": "172.16.1.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet-ipv6-1",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_alb_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.subnet_ipv6_2: |-
                    {
                      "cidr_block": "172.16.2.0/24",
                      "ipv6_cidr_block": 2,
                      "subnet_name": "acc-test-subnet-ipv6-2",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_alb_zones.foo.zones[1].id}"
                    }
                volcengine_vpc.vpc_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc-ipv6"
                    }
                volcengine_vpc_ipv6_gateway.ipv6_gateway: |-
                    {
                      "name": "acc-test-ipv6-gateway",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}"
                    }
        argumentDocs:
            address_ip_version: '- (Optional, ForceNew) The address ip version of the Alb. Valid values: IPv4, DualStack. Default is ipv4.'
            bandwidth: '- (Required, ForceNew) The peek bandwidth of the EIP which automatically assigned to the Alb. Unit: Mbps.'
            billing_type: '- (Required, ForceNew) The billing type of the Tpv6 EIP which automatically assigned to the Alb. Valid values: PostPaidByBandwidth, PostPaidByTraffic.'
            delete_protection: '- (Optional) Whether to enable the delete protection function of the Alb. Valid values: on, off. Default is off.'
            description: '- (Optional) The description of the Alb.'
            dns_name: '- The DNS name.'
            eip_address: '- The Eip address of the Alb in this availability zone.'
            eip_billing_config: '- (Optional, ForceNew) The billing configuration of the EIP which automatically associated to the Alb. This field is valid when the type of the Alb is public.When the type of the Alb is private, suggest using a combination of resource volcengine_eip_address and volcengine_eip_associate to achieve public network access function.'
            eip_billing_type: '- (Required, ForceNew) The billing type of the EIP which automatically assigned to the Alb. Valid values: PostPaidByBandwidth, PostPaidByTraffic.'
            eip_id: '- The Eip id of alb instance in this availability zone.'
            eni_address: '- The Eni address of the Alb in this availability zone.'
            eni_id: '- The Eni id of the Alb in this availability zone.'
            eni_ipv6_address: '- The Eni Ipv6 address of the Alb in this availability zone.'
            id: '- ID of the resource.'
            ipv6_eip_billing_config: '- (Optional, ForceNew) The billing configuration of the Ipv6 EIP which automatically associated to the Alb. This field is required when the type of the Alb is public.When the type of the Alb is private, suggest using a combination of resource volcengine_vpc_ipv6_gateway and volcengine_vpc_ipv6_address_bandwidth to achieve ipv6 public network access function.'
            ipv6_eip_id: '- The Ipv6 Eip id of alb instance in this availability zone.'
            isp: '- (Required, ForceNew) The ISP of the EIP which automatically associated to the Alb, the value can be BGP.'
            key: '- (Required) The Key of Tags.'
            load_balancer_addresses: '- The IP address information of the Alb in this availability zone.'
            load_balancer_name: '- (Optional) The name of the Alb.'
            local_addresses: '- The local addresses of the Alb.'
            project_name: '- (Optional) The ProjectName of the Alb.'
            status: '- The status of the Alb.'
            subnet_id: '- The subnet id of the Alb in this availability zone.'
            subnet_ids: '- (Required, ForceNew) The id of the Subnet.'
            tags: '- (Optional) Tags.'
            type: '- (Required, ForceNew) The type of the Alb. Valid values: public, private.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- The vpc id of the Alb.'
            zone_id: '- The availability zone id of the Alb.'
            zone_mappings: '- Configuration information of the Alb instance in different Availability Zones.'
        importStatements: []
    volcengine_alb_acl:
        subCategory: ALB
        description: Provides a resource to manage alb acl
        name: volcengine_alb_acl
        title: volcengine_alb_acl
        examples:
            - name: foo
              manifest: |-
                {
                  "acl_entries": [
                    {
                      "description": "e1",
                      "entry": "172.20.1.0/24"
                    },
                    {
                      "description": "e2",
                      "entry": "172.20.3.0/24"
                    }
                  ],
                  "acl_name": "tf-test-1",
                  "description": "tftest"
                }
        argumentDocs:
            acl_entries: '- (Optional) The acl entry set of the Acl.'
            acl_name: '- (Optional) The name of Acl.'
            create_time: '- Create time of Acl.'
            description: '- (Optional) The description of the Acl.'
            entry: '- (Required) The content of the AclEntry.'
            id: '- ID of the resource.'
            project_name: '- (Optional, ForceNew) The project name of the Acl.'
        importStatements: []
    volcengine_alb_ca_certificate:
        subCategory: ALB
        description: Provides a resource to manage alb ca certificate
        name: volcengine_alb_ca_certificate
        title: volcengine_alb_ca_certificate
        examples:
            - name: foo
              manifest: |-
                {
                  "ca_certificate": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "ca_certificate_name": "acc-test-1",
                  "description": "acc-test-1",
                  "project_name": "default"
                }
        argumentDocs:
            ca_certificate: '- (Required, ForceNew) The content of the CA certificate.'
            ca_certificate_name: '- (Optional) The name of the CA certificate.'
            certificate_type: '- The type of the CA Certificate.'
            create_time: '- The create time of the CA Certificate.'
            description: '- (Optional) The description of the CA certificate.'
            domain_name: '- The domain name of the CA Certificate.'
            expired_at: '- The expire time of the CA Certificate.'
            id: '- ID of the resource.'
            listeners: '- The ID list of the Listener.'
            project_name: '- (Optional) The project name of the CA certificate.'
            status: '- The status of the CA Certificate.'
        importStatements: []
    volcengine_alb_certificate:
        subCategory: ALB
        description: Provides a resource to manage alb certificate
        name: volcengine_alb_certificate
        title: volcengine_alb_certificate
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "test123",
                  "private_key": "private key",
                  "public_key": "public key"
                }
        argumentDocs:
            certificate_name: '- (Optional) The name of the Certificate.'
            certificate_type: '- The type of the Certificate.'
            create_time: '- The create time of the Certificate.'
            description: '- (Optional) The description of the Certificate.'
            domain_name: '- The domain name of the Certificate.'
            expired_at: '- The expire time of the Certificate.'
            id: '- ID of the resource.'
            listeners: '- The ID list of the Listener.'
            private_key: '- (Required, ForceNew) The private key of the Certificate.'
            project_name: '- (Optional) The project name of the Certificate.'
            public_key: '- (Required, ForceNew) The public key of the Certificate.'
            status: '- The status of the Certificate.'
        importStatements: []
    volcengine_alb_customized_cfg:
        subCategory: ALB
        description: Provides a resource to manage alb customized cfg
        name: volcengine_alb_customized_cfg
        title: volcengine_alb_customized_cfg
        examples:
            - name: foo
              manifest: |-
                {
                  "customized_cfg_content": "proxy_connect_timeout 4s;proxy_request_buffering on;",
                  "customized_cfg_name": "acc-test-cfg1",
                  "description": "This is a test modify",
                  "project_name": "default"
                }
        argumentDocs:
            customized_cfg_content: '- (Required) The content of CustomizedCfg. The length cannot exceed 4096 characters. Spaces and semicolons need to be escaped. Currently supported configuration items are ssl_protocols, ssl_ciphers, client_max_body_size, keepalive_timeout, proxy_request_buffering and proxy_connect_timeout.'
            customized_cfg_name: '- (Required) The name of CustomizedCfg.'
            description: '- (Optional) The description of CustomizedCfg.'
            id: '- ID of the resource.'
            project_name: '- (Optional) The project name of the CustomizedCfg.'
        importStatements: []
    volcengine_alb_health_check_template:
        subCategory: ALB
        description: Provides a resource to manage alb health check template
        name: volcengine_alb_health_check_template
        title: volcengine_alb_health_check_template
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test3",
                  "health_check_domain": "test.com",
                  "health_check_http_code": "http_2xx",
                  "health_check_http_version": "HTTP1.1",
                  "health_check_interval": 8,
                  "health_check_method": "HEAD",
                  "health_check_protocol": "HTTP",
                  "health_check_template_name": "acc-test-template-1",
                  "health_check_timeout": 11,
                  "health_check_uri": "/",
                  "healthy_threshold": 2,
                  "unhealthy_threshold": 3
                }
        argumentDocs:
            description: '- (Optional) The description of health check template.'
            health_check_domain: '- (Optional) The domain name to health check.'
            health_check_http_code: '- (Optional) The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.'
            health_check_http_version: '- (Optional) The HTTP version of health check.'
            health_check_interval: '- (Optional) The interval for performing health checks, the default value is 2, and the value is 1-300.'
            health_check_method: '- (Optional) The health check method,default is GET, support GET and HEAD.'
            health_check_protocol: '- (Optional) THe protocol of health check,only support HTTP.'
            health_check_template_name: '- (Required) The health check template name.'
            health_check_timeout: '- (Optional) The timeout of health check response,the default value is 2, and the value is 1-60.'
            health_check_uri: '- (Optional) The uri to health check,default is /.'
            healthy_threshold: '- (Optional) The healthy threshold of the health check, the default is 3, the value is 2-10.'
            id: '- ID of the resource.'
            unhealthy_threshold: '- (Optional) The unhealthy threshold of the health check, the default is 3, the value is 2-10.'
        importStatements: []
    volcengine_alb_listener:
        subCategory: ALB
        description: Provides a resource to manage alb listener
        name: volcengine_alb_listener
        title: volcengine_alb_listener
        examples:
            - name: foo
              manifest: |-
                {
                  "acl_ids": [
                    "acl-1g72w6z11ighs2zbhq4v3rvh4",
                    "acl-1g72xvtt7kg002zbhq5diim3s"
                  ],
                  "acl_status": "on",
                  "acl_type": "white",
                  "ca_certificate_id": "cert-1iidd2r9ii0hs74adhfeodxo1",
                  "certificate_id": "cert-1iidd2pahdyio74adhfr9ajwg",
                  "customized_cfg_id": "${volcengine_alb_customized_cfg.foo.id}",
                  "description": "acc test listener",
                  "enable_http2": "on",
                  "enable_quic": "off",
                  "enabled": "on",
                  "listener_name": "acc-test-listener-1",
                  "load_balancer_id": "alb-1iidd17v3klj474adhfrunyz9",
                  "port": 6666,
                  "protocol": "HTTPS",
                  "server_group_id": "rsp-1g72w74y4umf42zbhq4k4hnln"
                }
              references:
                customized_cfg_id: volcengine_alb_customized_cfg.foo.id
              dependencies:
                volcengine_alb_customized_cfg.foo: |-
                    {
                      "customized_cfg_content": "proxy_connect_timeout 4s;proxy_request_buffering on;",
                      "customized_cfg_name": "acc-test-cfg1",
                      "description": "This is a test modify",
                      "project_name": "default"
                    }
        argumentDocs:
            acl_ids: '- (Optional) The id list of the Acl. When the AclStatus parameter is configured as on, AclType and AclIds.N are required.'
            acl_status: '- (Optional) The enable status of Acl. Optional choice contains on, off. Default is off.'
            acl_type: '- (Optional) The type of the Acl. Optional choice contains white, black. When the AclStatus parameter is configured as on, AclType and AclIds.N are required.'
            ca_certificate_id: '- (Optional) The CA certificate id associated with the listener.'
            certificate_id: '- (Optional) The certificate id associated with the listener.'
            customized_cfg_id: '- (Optional) Personalized configuration ID, with a value of " " when not bound.'
            description: '- (Optional) The description of the Listener.'
            enable_http2: '- (Optional) The HTTP2 feature switch,valid value is on or off. Default is off.'
            enable_quic: '- (Optional) The QUIC feature switch,valid value is on or off. Default is off.'
            enabled: '- (Optional) The enable status of the Listener. Optional choice contains on, off. Default is on.'
            id: '- ID of the resource.'
            listener_id: '- The ID of the Listener.'
            listener_name: '- (Optional) The name of the Listener.'
            load_balancer_id: '- (Required, ForceNew) The Id of the load balancer.'
            port: '- (Required, ForceNew) The port receiving request of the Listener, the value range in 1~65535.'
            protocol: '- (Required, ForceNew) The protocol of the Listener. Optional choice contains HTTP, HTTPS.'
            server_group_id: '- (Required) The server group id associated with the listener.'
        importStatements: []
    volcengine_alb_listener_domain_extension:
        subCategory: ALB
        description: Provides a resource to manage alb listener domain extension
        name: volcengine_alb_listener_domain_extension
        title: volcengine_alb_listener_domain_extension
        examples:
            - name: foo
              manifest: |-
                {
                  "certificate_id": "cert-1iidd2pahdyio74adhfr9ajwg",
                  "domain": "test-modify.com",
                  "listener_id": "${volcengine_alb_listener.foo.id}"
                }
              references:
                listener_id: volcengine_alb_listener.foo.id
              dependencies:
                volcengine_alb_listener.foo: |-
                    {
                      "acl_ids": [
                        "acl-1g72w6z11ighs2zbhq4v3rvh4"
                      ],
                      "acl_status": "on",
                      "acl_type": "white",
                      "ca_certificate_id": "cert-1iidd2r9ii0hs74adhfeodxo1",
                      "certificate_id": "cert-1iidd2pahdyio74adhfr9ajwg",
                      "description": "acc test listener",
                      "enable_http2": "on",
                      "enable_quic": "off",
                      "enabled": "on",
                      "listener_name": "acc-test-listener-1",
                      "load_balancer_id": "alb-1iidd17v3klj474adhfrunyz9",
                      "port": 6666,
                      "protocol": "HTTPS",
                      "server_group_id": "rsp-1g72w74y4umf42zbhq4k4hnln"
                    }
        argumentDocs:
            certificate_id: '- (Required) Server certificate used for the domain name.'
            domain: '- (Required) The domain name. The maximum number of associated domain names for an HTTPS listener is 20, with a value range of 1 to 20.'
            domain_extension_id: '- The id of the domain extension.'
            id: '- ID of the resource.'
            listener_id: '- (Required, ForceNew) The listener id. Only HTTPS listener is effective.'
        importStatements: []
    volcengine_alb_rule:
        subCategory: ALB
        description: Provides a resource to manage alb rule
        name: volcengine_alb_rule
        title: volcengine_alb_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "test",
                  "domain": "www.test.com",
                  "listener_id": "lsn-1iidd19u4oni874adhezjkyj3",
                  "redirect_config": [
                    {
                      "redirect_domain": "www.testtest.com",
                      "redirect_http_code": "302",
                      "redirect_port": "555",
                      "redirect_uri": "/testtest"
                    }
                  ],
                  "rewrite_config": [
                    {
                      "rewrite_path": "/test"
                    }
                  ],
                  "rewrite_enabled": "off",
                  "rule_action": "Redirect",
                  "server_group_id": "rsp-1g72w74y4umf42zbhq4k4hnln",
                  "traffic_limit_enabled": "off",
                  "traffic_limit_qps": 100,
                  "url": "/test"
                }
        argumentDocs:
            description: '- (Optional) The description of the Rule.'
            domain: '- (Optional, ForceNew) The domain of Rule.'
            id: '- ID of the resource.'
            listener_id: '- (Required, ForceNew) The ID of listener.'
            redirect_config: '- (Optional) The redirect related configuration.'
            redirect_domain: '- (Optional) The redirect domain, only support exact domain name.'
            redirect_http_code: '- (Optional) The redirect http code, support 301(default), 302, 307, 308.'
            redirect_port: '- (Optional) The redirect port.'
            redirect_protocol: '- (Optional) The redirect protocol, support HTTP, HTTPS(default).'
            redirect_uri: '- (Optional) The redirect URI.'
            rewrite_config: '- (Optional) The list of rewrite configurations.'
            rewrite_enabled: |-
                - (Optional) Rewrite configuration switch for forwarding rules, only allows configuration and takes effect when RuleAction is empty (i.e., forwarding to server group). Only available for whitelist users, please submit an application to experience. Supported values are as follows:
                on: enable.
                off: disable.
            rewrite_path: '- (Required) Rewrite path.'
            rule_action: '- (Required) The forwarding rule action, if this parameter is empty(""), forward to server group, if value is Redirect, will redirect.'
            rule_id: '- The ID of rule.'
            server_group_id: '- (Optional) Server group ID, this parameter is required if rule_action is empty.'
            traffic_limit_enabled: |-
                - (Optional) Forwarding rule QPS rate limiting switch:
                on: enable.
                off: disable (default).
            traffic_limit_qps: '- (Optional) When Rules.N.TrafficLimitEnabled is turned on, this field is required. Requests per second. Valid values are between 100 and 100000.'
            url: '- (Optional, ForceNew) The Url of Rule.'
        importStatements: []
    volcengine_alb_server_group:
        subCategory: ALB
        description: Provides a resource to manage alb server group
        name: volcengine_alb_server_group
        title: volcengine_alb_server_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "health_check": [
                    {
                      "enabled": "on",
                      "interval": 3,
                      "method": "GET",
                      "timeout": 3
                    }
                  ],
                  "project_name": "default",
                  "scheduler": "wlc",
                  "server_group_name": "acc-test-server-group",
                  "server_group_type": "instance",
                  "sticky_session_config": [
                    {
                      "cookie_timeout": "1100",
                      "sticky_session_enabled": "on",
                      "sticky_session_type": "insert"
                    }
                  ],
                  "vpc_id": "${volcengine_vpc.foo.id}"
                }
              references:
                vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            cookie: '- (Optional) The cookie name of the sticky session. This field is required when the value of the sticky_session_type is server.'
            cookie_timeout: '- (Optional) The cookie timeout of the sticky session. Unit: second. Valid value range in 1~86400. Default is 1000. This field is required when the value of the sticky_session_type is insert.'
            create_time: '- The create time of the Alb server group.'
            description: '- (Optional) The description of the Alb server group.'
            domain: '- (Optional) The domain of health check.'
            enabled: '- (Optional) The enable status of health check function. Valid values: on, off. Default is on.'
            health_check: '- (Optional) The health check config of the Alb server group. The enable status of health check function defaults to on.'
            healthy_threshold: '- (Optional) The healthy threshold of health check. Valid value range in 2~10. Default is 3.'
            http_code: '- (Optional) The normal http status code of health check, the value can be http_2xx or http_3xx or http_4xx or http_5xx.'
            http_version: '- (Optional) The http version of health check. Valid values: HTTP1.0, HTTP1.1. Default is HTTP1.0.'
            id: '- ID of the resource.'
            interval: '- (Optional) The interval executing health check. Unit: second. Valid value range in 1~300. Default is 2.'
            listeners: '- The listener information of the Alb server group.'
            method: '- (Optional) The method of health check. Valid values: GET or HEAD. Default is HEAD.'
            project_name: '- (Optional) The project name of the Alb server group.'
            scheduler: '- (Optional) The scheduling algorithm of the Alb server group. Valid values: wrr, wlc, sh.'
            server_count: '- The server count of the Alb server group.'
            server_group_name: '- (Optional) The name of the Alb server group.'
            server_group_type: '- (Optional, ForceNew) The type of the Alb server group. Valid values: instance, ip. Default is instance.'
            status: '- The status of the Alb server group.'
            sticky_session_config: '- (Optional) The sticky session config of the Alb server group. The enable status of sticky session function defaults to off.'
            sticky_session_enabled: '- (Optional) The enable status of sticky session. Valid values: on, off. Default is off.'
            sticky_session_type: '- (Optional) The cookie handle type of the sticky session. Valid values: insert, server. Default is insert. This field is required when the value of the sticky_session_enabled is on.'
            timeout: '- (Optional) The response timeout of health check. Unit: second. Valid value range in 1~60. Default is 2.'
            unhealthy_threshold: '- (Optional) The unhealthy threshold of health check. Valid value range in 2~10. Default is 3.'
            update_time: '- The update time of the Alb server group.'
            uri: '- (Optional) The uri of health check.'
            vpc_id: '- (Required, ForceNew) The vpc id of the Alb server group.'
        importStatements: []
    volcengine_alb_server_group_server:
        subCategory: ALB
        description: Provides a resource to manage alb server group server
        name: volcengine_alb_server_group_server
        title: volcengine_alb_server_group_server
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "test add server group server ecs1",
                  "instance_id": "i-ycony2kef4ygp2f8cgmk",
                  "ip": "172.16.0.3",
                  "port": 5679,
                  "server_group_id": "rsp-1g7317vrcx3pc2zbhq4c3i6a2",
                  "type": "ecs",
                  "weight": 30
                }
        argumentDocs:
            description: '- (Optional) The description of the instance.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of ecs instance or the network card bound to ecs instance.'
            ip: '- (Required, ForceNew) The private ip of the instance.'
            port: '- (Required) The port receiving request.'
            server_group_id: '- (Required, ForceNew) The ID of the ServerGroup.'
            server_id: '- The server id of instance in ServerGroup.'
            type: '- (Required, ForceNew) The type of instance. Optional choice contains ecs, eni.'
            weight: '- (Optional) The weight of the instance, range in 0~100.'
        importStatements: []
    volcengine_bandwidth_package:
        subCategory: BANDWIDTH_PACKAGE
        description: Provides a resource to manage bandwidth package
        name: volcengine_bandwidth_package
        title: volcengine_bandwidth_package
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 10,
                  "bandwidth_package_name": "acc-test-bp",
                  "billing_type": "PostPaidByBandwidth",
                  "description": "acc-test",
                  "isp": "BGP",
                  "protocol": "IPv4",
                  "security_protection_types": [
                    "AntiDDoS_Enhanced"
                  ],
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            bandwidth: '- (Required) Bandwidth upper limit of shared bandwidth package, unit: Mbps. When BillingType is set to PrePaid: the value range is 5 to 5000. When BillingType is set to PostPaidByBandwidth: the value range is 2 to 5000. When BillingType is set to PostPaidByTraffic: the value range is 2 to 2000. When BillingType is set to PayBy95Peak: the value range is 2 to 5000.'
            bandwidth_package_name: '- (Optional) The name of the bandwidth package.'
            billing_type: '- (Optional, ForceNew) BillingType of the bandwidth package. Valid values: PrePaid, PostPaidByBandwidth(Default), PostPaidByTraffic, PayBy95Peak. The billing method of IPv6 does not include PrePaid, and the billing method is only based on the PostPaidByBandwidth.'
            description: '- (Optional) The description of the bandwidth package.'
            id: '- ID of the resource.'
            isp: '- (Optional, ForceNew) Route type, default to BGP.'
            key: '- (Required) The Key of Tags.'
            period: '- (Optional, ForceNew) Duration of purchasing shared bandwidth package on an annual or monthly basis. The valid value range in 1~9 or 12, 24 or 36. Default value is 1. The period unit defaults to Month.'
            project_name: '- (Optional) The project name of the bandwidth package.'
            protocol: '- (Optional, ForceNew) The IP protocol values for shared bandwidth packages are as follows: IPv4: IPv4 protocol. IPv6: IPv6 protocol.'
            security_protection_types: '- (Optional, ForceNew) Security protection types for shared bandwidth packages. Parameter - N: Indicates the number of security protection types, currently only supports taking 1. Value: AntiDDoS_Enhanced or left blank.If the value is AntiDDoS_Enhanced, then will create a shared bandwidth package with enhanced protection, which supports adding basic protection type public IP addresses.If left blank, it indicates a shared bandwidth package with basic protection, which supports the addition of public IP addresses with enhanced protection.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_bandwidth_package_attachment:
        subCategory: BANDWIDTH_PACKAGE
        description: Provides a resource to manage bandwidth package attachment
        name: volcengine_bandwidth_package_attachment
        title: volcengine_bandwidth_package_attachment
        examples:
            - name: ipv4
              manifest: |-
                {
                  "allocation_id": "${volcengine_eip_address.foo.id}",
                  "bandwidth_package_id": "${volcengine_bandwidth_package.ipv4.id}"
                }
              references:
                allocation_id: volcengine_eip_address.foo.id
                bandwidth_package_id: volcengine_bandwidth_package.ipv4.id
              dependencies:
                volcengine_bandwidth_package.ipv4: |-
                    {
                      "bandwidth": 2,
                      "bandwidth_package_name": "acc-test-bp",
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "protocol": "IPv4",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_bandwidth_package.ipv6: |-
                    {
                      "bandwidth": 2,
                      "bandwidth_package_name": "acc-test-bp",
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "protocol": "IPv6",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name",
                      "instance_type": "ecs.g1.large",
                      "ipv6_address_count": 1,
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip",
                      "project_name": "default"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpc_ipv6_address_bandwidth.foo: |-
                    {
                      "bandwidth": 5,
                      "billing_type": "PostPaidByBandwidth",
                      "ipv6_address": "${data.volcengine_vpc_ipv6_addresses.foo.ipv6_addresses.0.ipv6_address}"
                    }
                volcengine_vpc_ipv6_gateway.foo: |-
                    {
                      "description": "test",
                      "name": "acc-test-1",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
            - name: foo
              manifest: |-
                {
                  "allocation_id": "${volcengine_vpc_ipv6_address_bandwidth.foo.id}",
                  "bandwidth_package_id": "${volcengine_bandwidth_package.ipv6.id}"
                }
              references:
                allocation_id: volcengine_vpc_ipv6_address_bandwidth.foo.id
                bandwidth_package_id: volcengine_bandwidth_package.ipv6.id
              dependencies:
                volcengine_bandwidth_package.ipv4: |-
                    {
                      "bandwidth": 2,
                      "bandwidth_package_name": "acc-test-bp",
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "protocol": "IPv4",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_bandwidth_package.ipv6: |-
                    {
                      "bandwidth": 2,
                      "bandwidth_package_name": "acc-test-bp",
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "protocol": "IPv6",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name",
                      "instance_type": "ecs.g1.large",
                      "ipv6_address_count": 1,
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip",
                      "project_name": "default"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpc_ipv6_address_bandwidth.foo: |-
                    {
                      "bandwidth": 5,
                      "billing_type": "PostPaidByBandwidth",
                      "ipv6_address": "${data.volcengine_vpc_ipv6_addresses.foo.ipv6_addresses.0.ipv6_address}"
                    }
                volcengine_vpc_ipv6_gateway.foo: |-
                    {
                      "description": "test",
                      "name": "acc-test-1",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
        argumentDocs:
            allocation_id: '- (Required, ForceNew) The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.'
            bandwidth_package_id: '- (Required, ForceNew) The bandwidth package id.'
            id: '- ID of the resource.'
        importStatements: []
    volcengine_bioos_cluster:
        subCategory: BIOOS
        description: Provides a resource to manage bioos cluster
        name: volcengine_bioos_cluster
        title: volcengine_bioos_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "test-description",
                  "name": "test-cluster",
                  "shared_config": [
                    {
                      "enable": true
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, ForceNew) The id of the vke cluster.'
            description: '- (Optional, ForceNew) The description of the cluster.'
            enable: '- (Required, ForceNew) Whether to enable a shared cluster. This value must be true.'
            id: '- ID of the resource.'
            name: '- (Required, ForceNew) The name of the cluster.'
            shared_config: '- (Optional, ForceNew) The configuration of the shared cluster.'
            storage_class: '- (Required, ForceNew) The name of the StorageClass that the vke cluster has installed.'
            vke_config: '- (Optional, ForceNew) The configuration of the vke cluster. This cluster type is not recommended. It is recommended to use a shared cluster.'
        importStatements: []
    volcengine_bioos_cluster_bind:
        subCategory: BIOOS
        description: Provides a resource to manage bioos cluster bind
        name: volcengine_bioos_cluster_bind
        title: volcengine_bioos_cluster_bind
        examples:
            - name: example
              manifest: |-
                {
                  "cluster_id": "ucfhp1nteig48u8ufv8s0",
                  "type": "workflow",
                  "workspace_id": "wcfhp1vdeig48u8ufv8sg"
                }
        argumentDocs:
            cluster_id: '- (Required, ForceNew) The id of the cluster.'
            id: '- ID of the resource.'
            type: '- (Required, ForceNew) The type of the cluster bind.'
            workspace_id: '- (Required, ForceNew) The id of the workspace.'
        importStatements: []
    volcengine_bioos_workspace:
        subCategory: BIOOS
        description: Provides a resource to manage bioos workspace
        name: volcengine_bioos_workspace
        title: volcengine_bioos_workspace
        examples:
            - name: foo
              manifest: |-
                {
                  "cover_path": "template-cover/pic5.png",
                  "description": "test-description23",
                  "name": "test-workspace2"
                }
        argumentDocs:
            cover_path: '- (Optional) Cover path (relative path in tos bucket).'
            description: '- (Required) The description of the workspace.'
            id: '- ID of the resource.'
            name: '- (Required) The name of the workspace.'
            updated: '- Whether the update complete.'
            workspace_id: '- The id of the workspace.'
        importStatements: []
    volcengine_cdn_certificate:
        subCategory: CDN
        description: Provides a resource to manage cdn certificate
        name: volcengine_cdn_certificate
        title: volcengine_cdn_certificate
        examples:
            - name: foo
              manifest: |-
                {
                  "certificate": "",
                  "desc": "tftest",
                  "private_key": "",
                  "source": "cdn_cert_hosting"
                }
        argumentDocs:
            certificate: '- (Required, ForceNew) Content of the specified certificate public key file. Line breaks in the content should be replaced with \r\n. The file extension for the certificate public key is .crt or .pem. The public key must include the complete certificate chain. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            desc: '- (Required, ForceNew) Note on the certificate.'
            id: '- ID of the resource.'
            private_key: '- (Required, ForceNew) The content of the specified certificate private key file. Replace line breaks in the content with \r\n. The file extension for the certificate private key is .key or .pem. The private key must be unencrypted. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            source: '- (Required, ForceNew) Specify the location for storing the certificate. The parameter can take the following values: volc_cert_center: indicates that the certificate will be stored in the certificate center.cdn_cert_hosting: indicates that the certificate will be hosted on the content delivery network.'
        importStatements: []
    volcengine_cdn_domain:
        subCategory: CDN
        description: Provides a resource to manage cdn domain
        name: volcengine_cdn_domain
        title: volcengine_cdn_domain
        examples:
            - name: foo
              manifest: |-
                {
                  "domain": "tftest.byte-test.com",
                  "domain_config": "${jsonencode(\n    {\n      OriginProtocol = \"https\"\n      Origin = [\n        {\n          OriginAction = {\n            OriginLines = [\n              {\n                Address             = \"1.1.1.1\",\n                HttpPort            = \"80\",\n                HttpsPort           = \"443\",\n                InstanceType        = \"ip\",\n                OriginType          = \"primary\",\n                PrivateBucketAccess = false,\n                Weight              = \"2\"\n              }\n            ]\n          }\n        }\n      ]\n      HTTPS = {\n        CertInfo = {\n          CertId = volcengine_cdn_certificate.foo.id\n        }\n        DisableHttp = false,\n        HTTP2       = true,\n        Switch      = true,\n        Ocsp        = false,\n        TlsVersion = [\n          \"tlsv1.1\",\n          \"tlsv1.2\"\n        ],\n      }\n    }\n  )}",
                  "service_type": "web",
                  "tags": [
                    {
                      "key": "tfkey1",
                      "value": "tfvalue1"
                    },
                    {
                      "key": "tfkey2",
                      "value": "tfvalue2"
                    }
                  ]
                }
              dependencies:
                volcengine_cdn_certificate.foo: |-
                    {
                      "certificate": "",
                      "desc": "tftest",
                      "private_key": "",
                      "source": "cdn_cert_hosting"
                    }
        argumentDocs:
            cname: '- (Required, ForceNew) Assign a CNAME to the accelerated domain.'
            domain: '- (Required, ForceNew) You need to add a domain. The main account can add up to 200 accelerated domains.'
            domain_config: '- (Required) Accelerate domain configuration. Please convert the configuration module structure into json and pass it into a string. You must specify the Origin module. The OriginProtocol parameter, OriginHost parameter, and other domain configuration modules are optional.'
            id: '- ID of the resource.'
            key: '- (Required) The key of the tag.'
            project: '- (Optional, ForceNew) The project to which this domain name belongs. Default is default.'
            service_region: '- (Optional, ForceNew) Indicates the acceleration area. The parameter can take the following values: chinese_mainland: Indicates mainland China. global: Indicates global. outside_chinese_mainland: Indicates global (excluding mainland China).'
            service_type: '- (Required, ForceNew) The business type of the domain name is indicated by this parameter. The possible values are: download: for file downloads. web: for web pages. video: for audio and video on demand.'
            shared_cname: '- (Optional, ForceNew) Configuration for sharing CNAME.'
            status: '- The status of the domain.'
            switch: '- (Required, ForceNew) Specify whether to enable shared CNAME.'
            tags: '- (Optional) Indicate the tags you have set for this domain name. You can set up to 10 tags.'
            value: '- (Required) The value of the tag.'
        importStatements: []
    volcengine_cdn_shared_config:
        subCategory: CDN
        description: Provides a resource to manage cdn shared config
        name: volcengine_cdn_shared_config
        title: volcengine_cdn_shared_config
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_ip_access_rule": [
                    {
                      "rules": [
                        "1.1.1.1",
                        "2.2.2.0/24",
                        "3.3.3.3"
                      ]
                    }
                  ],
                  "allow_referer_access_rule": [
                    {
                      "common_type": [
                        {
                          "rules": [
                            "1.1.1.1",
                            "2.2.2.0/24",
                            "3.3.4.4"
                          ]
                        }
                      ]
                    }
                  ],
                  "common_match_list": [
                    {
                      "common_type": [
                        {
                          "rules": [
                            "1.1.1.1",
                            "2.2.2.0/24"
                          ]
                        }
                      ]
                    }
                  ],
                  "config_name": "tftest",
                  "config_type": "allow_referer_access_rule",
                  "deny_ip_access_rule": [
                    {
                      "rules": [
                        "1.1.1.1",
                        "2.2.2.0/24"
                      ]
                    }
                  ],
                  "deny_referer_access_rule": [
                    {
                      "common_type": [
                        {
                          "rules": [
                            "1.1.1.1",
                            "2.2.2.0/24"
                          ]
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            allow_empty: '- (Optional) Indicates whether an empty Referer header, or a request without a Referer header, is not allowed. Default is false.'
            allow_ip_access_rule: '- (Optional) The configuration for IP whitelist corresponds to ConfigType allow_ip_access_rule.'
            allow_referer_access_rule: '- (Optional) The configuration for the Referer whitelist corresponds to ConfigType allow_referer_access_rule.'
            common_match_list: '- (Optional) The configuration for a common list is represented by ConfigType common_match_list.'
            common_type: '- (Required) The content indicating the Referer whitelist.'
            config_name: '- (Required, ForceNew) The name of the shared config. The name cannot be the same as the name of an existing global configuration under the main account.'
            config_type: '- (Required, ForceNew) The type of the shared config. The type of global configuration. The parameter can have the following values: deny_ip_access_rule: represents IP blacklist. allow_ip_access_rule: represents IP whitelist. deny_referer_access_rule: represents Referer blacklist. allow_referer_access_rule: represents Referer whitelist. common_match_list: represents common list.'
            deny_ip_access_rule: '- (Optional) The configuration for IP blacklist is denoted by ConfigType deny_ip_access_rule.'
            deny_referer_access_rule: '- (Optional) The configuration for the Referer blacklist corresponds to ConfigType deny_referer_access_rule.'
            id: '- ID of the resource.'
            ignore_case: '- (Optional) This list is case-sensitive when matching requests. Default is true.'
            project_name: '- (Optional, ForceNew) The ProjectName of the cdn shared config.'
            rules: '- (Required) The entries in this list are an array of IP addresses and CIDR network segments. The total number of entries cannot exceed 3,000. The IP addresses and segments can be in IPv4 and IPv6 format. Duplicate entries in the list will be removed and will not count towards the limit.'
        importStatements: []
    volcengine_cen:
        subCategory: CEN
        description: Provides a resource to manage cen
        name: volcengine_cen
        title: volcengine_cen
        examples:
            - name: foo
              manifest: |-
                {
                  "cen_name": "acc-test-cen",
                  "description": "acc-test",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            account_id: '- The account ID of the cen.'
            cen_bandwidth_package_ids: '- A list of bandwidth package IDs of the cen.'
            cen_id: '- The ID of the cen.'
            cen_name: '- (Optional) The name of the cen.'
            creation_time: '- The create time of the cen.'
            description: '- (Optional) The description of the cen.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Optional) The ProjectName of the cen instance.'
            status: '- The status of the cen.'
            tags: '- (Optional) Tags.'
            update_time: '- The update time of the cen.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_cen_attach_instance:
        subCategory: CEN
        description: Provides a resource to manage cen attach instance
        name: volcengine_cen_attach_instance
        title: volcengine_cen_attach_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "cen_id": "${volcengine_cen.foo.id}",
                  "instance_id": "${volcengine_vpc.foo.id}",
                  "instance_region_id": "cn-beijing",
                  "instance_type": "VPC"
                }
              references:
                cen_id: volcengine_cen.foo.id
                instance_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_cen.foo: |-
                    {
                      "cen_name": "acc-test-cen",
                      "description": "acc-test",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            cen_id: '- (Required, ForceNew) The ID of the cen.'
            creation_time: '- The create time of the cen attaching instance.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the instance.'
            instance_owner_id: '- (Optional, ForceNew) The owner ID of the instance.'
            instance_region_id: '- (Required, ForceNew) The region ID of the instance.'
            instance_type: '- (Required, ForceNew) The type of the instance. Valid values: VPC, DCGW.'
            status: '- The status of the cen attaching instance.'
        importStatements: []
    volcengine_cen_bandwidth_package:
        subCategory: CEN
        description: Provides a resource to manage cen bandwidth package
        name: volcengine_cen_bandwidth_package
        title: volcengine_cen_bandwidth_package
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 2,
                  "billing_type": "PrePaid",
                  "cen_bandwidth_package_name": "acc-test-cen-bp",
                  "description": "acc-test",
                  "local_geographic_region_set_id": "China",
                  "peer_geographic_region_set_id": "China",
                  "period": 1,
                  "period_unit": "Month",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            account_id: '- The account ID of the cen bandwidth package.'
            bandwidth: '- (Optional) The bandwidth of the cen bandwidth package. Value: 2~10000.'
            billing_type: '- (Optional, ForceNew) The billing type of the cen bandwidth package. Only support PrePaid and default value is PrePaid.'
            business_status: '- The business status of the cen bandwidth package.'
            cen_bandwidth_package_id: '- The ID of the cen bandwidth package.'
            cen_bandwidth_package_name: '- (Optional) The name of the cen bandwidth package.'
            cen_ids: '- The cen IDs of the bandwidth package.'
            creation_time: '- The create time of the cen bandwidth package.'
            deleted_time: '- The deleted time of the cen bandwidth package.'
            description: '- (Optional) The description of the cen bandwidth package.'
            expired_time: '- The expired time of the cen bandwidth package.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            local_geographic_region_set_id: '- (Optional, ForceNew) The local geographic region set id of the cen bandwidth package. Valid value: China, Asia.'
            peer_geographic_region_set_id: '- (Optional, ForceNew) The peer geographic region set id of the cen bandwidth package. Valid value: China, Asia.'
            period: '- (Optional) The period of the cen bandwidth package. Default value is 1.'
            period_unit: '- (Optional) The period unit of the cen bandwidth package. Value: Month, Year. Default value is Month.'
            project_name: '- (Optional) The ProjectName of the cen bandwidth package.'
            remaining_bandwidth: '- The remain bandwidth of the cen bandwidth package.'
            status: '- The status of the cen bandwidth package.'
            tags: '- (Optional) Tags.'
            update_time: '- The update time of the cen bandwidth package.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_cen_bandwidth_package_associate:
        subCategory: CEN
        description: Provides a resource to manage cen bandwidth package associate
        name: volcengine_cen_bandwidth_package_associate
        title: volcengine_cen_bandwidth_package_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "cen_bandwidth_package_id": "${volcengine_cen_bandwidth_package.foo.id}",
                  "cen_id": "${volcengine_cen.foo.id}"
                }
              references:
                cen_bandwidth_package_id: volcengine_cen_bandwidth_package.foo.id
                cen_id: volcengine_cen.foo.id
              dependencies:
                volcengine_cen.foo: |-
                    {
                      "cen_name": "acc-test-cen",
                      "description": "acc-test",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_cen_bandwidth_package.foo: |-
                    {
                      "bandwidth": 2,
                      "billing_type": "PrePaid",
                      "cen_bandwidth_package_name": "acc-test-cen-bp",
                      "description": "acc-test",
                      "local_geographic_region_set_id": "China",
                      "peer_geographic_region_set_id": "China",
                      "period": 1,
                      "period_unit": "Month",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
        argumentDocs:
            cen_bandwidth_package_id: '- (Required, ForceNew) The ID of the cen bandwidth package.'
            cen_id: '- (Required, ForceNew) The ID of the cen.'
            id: '- ID of the resource.'
        importStatements: []
    volcengine_cen_grant_instance:
        subCategory: CEN
        description: Provides a resource to manage cen grant instance
        name: volcengine_cen_grant_instance
        title: volcengine_cen_grant_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "cen_id": "cen-2d6zdn0c1z5s058ozfcyf4lee",
                  "cen_owner_id": "210000****",
                  "instance_id": "vpc-2bysvq1xx543k2dx0eeulpeiv",
                  "instance_region_id": "cn-beijing",
                  "instance_type": "VPC"
                }
        argumentDocs:
            cen_id: '- (Required, ForceNew) The ID of the cen.'
            cen_owner_id: '- (Required, ForceNew) The owner ID of the cen.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the instance.'
            instance_region_id: '- (Required, ForceNew) The region ID of the instance.'
            instance_type: '- (Required, ForceNew) The type of the instance.'
        importStatements: []
    volcengine_cen_inter_region_bandwidth:
        subCategory: CEN
        description: Provides a resource to manage cen inter region bandwidth
        name: volcengine_cen_inter_region_bandwidth
        title: volcengine_cen_inter_region_bandwidth
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 2,
                  "cen_id": "${volcengine_cen.foo.id}",
                  "depends_on": [
                    "${volcengine_cen_bandwidth_package_associate.foo}"
                  ],
                  "local_region_id": "cn-beijing",
                  "peer_region_id": "cn-shanghai"
                }
              references:
                cen_id: volcengine_cen.foo.id
              dependencies:
                volcengine_cen.foo: |-
                    {
                      "cen_name": "acc-test-cen",
                      "description": "acc-test",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_cen_bandwidth_package.foo: |-
                    {
                      "bandwidth": 5,
                      "billing_type": "PrePaid",
                      "cen_bandwidth_package_name": "acc-test-cen-bp",
                      "description": "acc-test",
                      "local_geographic_region_set_id": "China",
                      "peer_geographic_region_set_id": "China",
                      "period": 1,
                      "period_unit": "Month",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_cen_bandwidth_package_associate.foo: |-
                    {
                      "cen_bandwidth_package_id": "${volcengine_cen_bandwidth_package.foo.id}",
                      "cen_id": "${volcengine_cen.foo.id}"
                    }
        argumentDocs:
            bandwidth: '- (Required) The bandwidth of the cen inter region bandwidth.'
            cen_id: '- (Required, ForceNew) The cen ID of the cen inter region bandwidth.'
            creation_time: '- The create time of the cen inter region bandwidth.'
            id: '- ID of the resource.'
            inter_region_bandwidth_id: '- The ID of the cen inter region bandwidth.'
            local_region_id: '- (Required, ForceNew) The local region id of the cen inter region bandwidth.'
            peer_region_id: '- (Required, ForceNew) The peer region id of the cen inter region bandwidth.'
            status: '- The status of the cen inter region bandwidth.'
            update_time: '- The update time of the cen inter region bandwidth.'
        importStatements: []
    volcengine_cen_route_entry:
        subCategory: CEN
        description: Provides a resource to manage cen route entry
        name: volcengine_cen_route_entry
        title: volcengine_cen_route_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "cen_id": "${volcengine_cen.foo.id}",
                  "destination_cidr_block": "${volcengine_route_entry.foo.destination_cidr_block}",
                  "instance_id": "${volcengine_cen_attach_instance.foo.instance_id}",
                  "instance_region_id": "cn-beijing",
                  "instance_type": "VPC"
                }
              references:
                cen_id: volcengine_cen.foo.id
                destination_cidr_block: volcengine_route_entry.foo.destination_cidr_block
                instance_id: volcengine_cen_attach_instance.foo.instance_id
              dependencies:
                volcengine_cen.foo: |-
                    {
                      "cen_name": "acc-test-cen",
                      "description": "acc-test",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_cen_attach_instance.foo: |-
                    {
                      "cen_id": "${volcengine_cen.foo.id}",
                      "instance_id": "${volcengine_vpc.foo.id}",
                      "instance_region_id": "cn-beijing",
                      "instance_type": "VPC"
                    }
                volcengine_nat_gateway.foo: |-
                    {
                      "nat_gateway_name": "acc-test-nat-rn",
                      "spec": "Small",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_route_entry.foo: |-
                    {
                      "destination_cidr_block": "172.16.1.0/24",
                      "next_hop_id": "${volcengine_nat_gateway.foo.id}",
                      "next_hop_type": "NatGW",
                      "route_entry_name": "acc-test-route-entry",
                      "route_table_id": "${tolist(volcengine_vpc.foo.route_table_ids)[0]}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet-rn",
                      "vpc_id": "${volcengine_cen_attach_instance.foo.instance_id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc-rn"
                    }
        argumentDocs:
            as_path: '- The AS path of the cen route entry.'
            cen_id: '- (Required, ForceNew) The cen ID of the cen route entry.'
            destination_cidr_block: '- (Required, ForceNew) The destination cidr block of the cen route entry.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance id of the next hop of the cen route entry.'
            instance_region_id: '- (Required, ForceNew) The instance region id of the next hop of the cen route entry.'
            instance_type: '- (Optional, ForceNew) The instance type of the next hop of the cen route entry.'
            publish_status: '- The publish status of the cen route entry.'
            status: '- The status of the cen route entry.'
        importStatements: []
    volcengine_cen_service_route_entry:
        subCategory: CEN
        description: Provides a resource to manage cen service route entry
        name: volcengine_cen_service_route_entry
        title: volcengine_cen_service_route_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "cen_id": "${volcengine_cen.foo.id}",
                  "description": "acc-test",
                  "destination_cidr_block": "100.64.0.0/11",
                  "publish_mode": "Custom",
                  "publish_to_instances": [
                    {
                      "instance_id": "${volcengine_cen_attach_instance.foo[1].instance_id}",
                      "instance_region_id": "cn-beijing",
                      "instance_type": "VPC"
                    },
                    {
                      "instance_id": "${volcengine_cen_attach_instance.foo[2].instance_id}",
                      "instance_region_id": "cn-beijing",
                      "instance_type": "VPC"
                    }
                  ],
                  "service_region_id": "cn-beijing",
                  "service_vpc_id": "${volcengine_cen_attach_instance.foo[0].instance_id}"
                }
              references:
                cen_id: volcengine_cen.foo.id
                publish_to_instances.instance_id: volcengine_cen_attach_instance.foo[2].instance_id
                service_vpc_id: volcengine_cen_attach_instance.foo[0].instance_id
              dependencies:
                volcengine_cen.foo: |-
                    {
                      "cen_name": "acc-test-cen",
                      "description": "acc-test",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_cen_attach_instance.foo: |-
                    {
                      "cen_id": "${volcengine_cen.foo.id}",
                      "count": 3,
                      "instance_id": "${volcengine_vpc.foo[count.index].id}",
                      "instance_region_id": "cn-beijing",
                      "instance_type": "VPC"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "count": 3,
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            cen_id: '- (Required, ForceNew) The cen ID of the cen service route entry.'
            creation_time: '- The create time of the cen service route entry.'
            description: '- (Optional) The description of the cen service route entry.'
            destination_cidr_block: '- (Required, ForceNew) The destination cidr block of the cen service route entry.'
            id: '- ID of the resource.'
            instance_id: '- (Optional) Cloud service access routes need to publish the network instance ID.'
            instance_region_id: '- (Optional) The region where the cloud service access route needs to be published.'
            instance_type: '- (Optional) The network instance type that needs to be published for cloud service access routes. The values are as follows: VPC, DCGW.'
            publish_mode: '- (Optional) Publishing scope of cloud service access routes. Valid values are LocalDCGW(default), Custom.'
            publish_to_instances: '- (Optional) The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the publish_mode is Custom.'
            service_region_id: '- (Required, ForceNew) The service region id of the cen service route entry.'
            service_vpc_id: '- (Required, ForceNew) The service VPC id of the cen service route entry.'
            status: '- The status of the cen service route entry.'
        importStatements: []
    volcengine_certificate:
        subCategory: CLB
        description: Provides a resource to manage certificate
        name: volcengine_certificate
        title: volcengine_certificate
        examples:
            - name: foo
              manifest: |-
                {
                  "certificate_name": "acc-test-certificate",
                  "description": "acc-test-demo",
                  "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDEdoyaJ0kdtjtbLRx5X9qwI7FblhJPRcScvhQSE8P5y/b/T8J9\nBVuFIBoU8nrPY9ABz4JFklZ6SznxLbFBqtXoJTmzV6ixyjjH+AGEw6hCiA8Pqy2C\nNIzxr9DjCzN5tWruiHqO60O3Bve6cHipH0VyLAhrB85mflvOZSH4xGsJkwIDAQAB\nAoGARe2oaCo5lTDK+c4Zx3392hoqQ94r0DmWHPBvNmwAooYd+YxLPrLMe5sMjY4t\ndmohnLNevCK1Uzw5eIX6BNSo5CORBcIDRmiAgwiYiS3WOv2+qi9g5uIdMiDr+EED\nK8wZJjB5E2WyfxL507vtW4T5L36yfr8SkmqH3GvzpI2jCqECQQDsy0AmBzyfK0tG\nNw1+iF9SReJWgb1f5iHvz+6Dt5ueVQngrl/5++Gp5bNoaQMkLEDsy0iHIj9j43ji\n0DON05uDAkEA1GXgGn8MXXKyuzYuoyYXCBH7aF579d7KEGET/jjnXx9DHcfRJZBY\nB9ghMnnonSOGboF04Zsdd3xwYF/3OHYssQJAekd/SeQEzyE5TvoQ8t2Tc9X4yrlW\nxNX/gmp6/fPr3biGUEtb7qi+4NBodCt+XsingmB7hKUP3RJTk7T2WnAC5wJAMqHi\njY5x3SkFkHl3Hq9q2CKpQxUbCd7FXqg1wum/xj5GmqfSpNjHE3+jUkwbdrJMTrWP\nrmRy3tQMWf0mixAo0QJBAN4IcZChanq8cZyNqqoNbxGm4hkxUmE0W4hxHmLC2CYZ\nV4JpNm8dpi4CiMWLasF6TYlVMgX+aPxYRUWc/qqf1/Q=\n-----END RSA PRIVATE KEY-----",
                  "project_name": "default",
                  "public_key": "-----BEGIN CERTIFICATE-----\nMIICWDCCAcGgAwIBAgIJAP7vOtjPtQIjMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkNOMRMwEQYDVQQIDApjbi1iZWlqaW5nMSEwHwYDVQQKDBhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMjAxMDIwMDYxOTUxWhcNMjAxMTE5MDYxOTUxWjBF\nMQswCQYDVQQGEwJDTjETMBEGA1UECAwKY24tYmVpamluZzEhMB8GA1UECgwYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKB\ngQDEdoyaJ0kdtjtbLRx5X9qwI7FblhJPRcScvhQSE8P5y/b/T8J9BVuFIBoU8nrP\nY9ABz4JFklZ6SznxLbFBqtXoJTmzV6ixyjjH+AGEw6hCiA8Pqy2CNIzxr9DjCzN5\ntWruiHqO60O3Bve6cHipH0VyLAhrB85mflvOZSH4xGsJkwIDAQABo1AwTjAdBgNV\nHQ4EFgQUYDwuuqC2a2UPrfm1v31vE7+GRM4wHwYDVR0jBBgwFoAUYDwuuqC2a2UP\nrfm1v31vE7+GRM4wDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOBgQAovSB0\n5JRKrg7lYR/KlTuKHmozfyL9UER0/dpTSoqsCyt8yc1BbtAKUJWh09BujBE1H22f\nlKvCAjhPmnNdfd/l9GrmAWNDWEDPLdUTkGSkKAScMpdS+mLmOBuYWgdnOtq3eQGf\nt07tlBL+dtzrrohHpfLeuNyYb40g8VQdp3RRRQ==\n-----END CERTIFICATE-----",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            certificate_name: '- (Optional) The name of the Certificate.'
            description: '- (Optional) The description of the Certificate.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            private_key: '- (Required, ForceNew) The private key of the Certificate. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            project_name: '- (Optional, ForceNew) The ProjectName of the Certificate.'
            public_key: '- (Required, ForceNew) The public key of the Certificate. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_cfw_address_book:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw address book
        name: volcengine_cfw_address_book
        title: volcengine_cfw_address_book
        examples:
            - name: foo
              manifest: |-
                {
                  "address_list": [
                    "192.168.1.1",
                    "192.168.2.2"
                  ],
                  "description": "acc-test",
                  "group_name": "acc-test-address-book",
                  "group_type": "ip"
                }
        argumentDocs:
            address_list: |-
                - (Required) The address list of the address book.
                When group_type is ip, fill in IPv4/CIDRV4 addresses in the address list.
                When group_type is port, fill in the port information in the address list, supporting two formats: 22 and 100/200.
                When group_type is domain, fill in the domain name information in the address list.
            description: '- (Optional) The description of the address book.'
            group_name: '- (Required) The name of the address book.'
            group_type: '- (Required, ForceNew) The type of the address book. Valid values: ip, port, domain.'
            id: '- ID of the resource.'
            ref_cnt: '- The reference count of the address book.'
        importStatements: []
    volcengine_cfw_control_policy:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw control policy
        name: volcengine_cfw_control_policy
        title: volcengine_cfw_control_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "accept",
                  "description": "acc-test-control-policy",
                  "dest_port": "300",
                  "dest_port_type": "port",
                  "destination": "${volcengine_cfw_address_book.foo.id}",
                  "destination_type": "group",
                  "direction": "in",
                  "end_time": 1738339140,
                  "priority": 1,
                  "proto": "TCP",
                  "repeat_days": [
                    2,
                    5
                  ],
                  "repeat_end_time": "11:00",
                  "repeat_start_time": "01:00",
                  "repeat_type": "Weekly",
                  "source": "0.0.0.0/0",
                  "source_type": "net",
                  "start_time": 1736092800,
                  "status": true
                }
              references:
                destination: volcengine_cfw_address_book.foo.id
              dependencies:
                volcengine_cfw_address_book.foo: |-
                    {
                      "address_list": [
                        "192.168.1.1",
                        "192.168.2.2"
                      ],
                      "description": "acc-test",
                      "group_name": "acc-test-address-book",
                      "group_type": "ip"
                    }
        argumentDocs:
            account_id: '- The account id of the control policy.'
            action: '- (Required) The action of the control policy. Valid values: accept, deny, monitor.'
            description: '- (Optional) The description of the control policy.'
            dest_port: '- (Optional) The dest port of the control policy.'
            dest_port_type: '- (Optional) The dest port type of the control policy. Valid values: port, group.'
            destination: '- (Required) The destination of the control policy.'
            destination_type: '- (Required) The destination type of the control policy. Valid values: net, group, location, domain.'
            direction: '- (Required, ForceNew) The direction of the control policy. Valid values: in, out.'
            effect_status: '- The effect status of the control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.'
            end_time: |-
                - (Optional) The end time of the control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
                When the value of repeat_type is one of Once, Daily, Weekly, Monthly, this field is required.
            hit_cnt: '- The hit count of the control policy.'
            id: '- ID of the resource.'
            is_effected: '- Whether the control policy is effected.'
            prio: '- The priority of the control policy.'
            priority: '- (Optional) The priority of the control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.'
            proto: '- (Required) The proto of the control policy. Valid values: TCP, ICMP, UDP, ANY. When the destination_type is domain, The proto must be TCP.'
            repeat_days: |-
                - (Optional) The repeat days of the control policy. When the value of repeat_type is one of Weekly, Monthly, this field is required.
                When the repeat_type is Weekly, the valid value range is 0~6.
                When the repeat_type is Monthly, the valid value range is 1~31.
            repeat_end_time: |-
                - (Optional) The repeat end time of the control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
                When the value of repeat_type is one of Daily, Weekly, Monthly, this field is required.
            repeat_start_time: |-
                - (Optional) The repeat start time of the control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
                When the value of repeat_type is one of Daily, Weekly, Monthly, this field is required.
            repeat_type: '- (Optional) The repeat type of the control policy. Valid values: Permanent, Once, Daily, Weekly, Monthly.'
            rule_id: '- The rule id of the control policy.'
            source: '- (Required) The source of the control policy.'
            source_type: '- (Required) The source type of the control policy. Valid values: net, group, location.'
            start_time: |-
                - (Optional) The start time of the control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
                When the value of repeat_type is one of Once, Daily, Weekly, Monthly, this field is required.
            status: '- (Optional) Whether to enable the control policy. Default is false.'
            update_time: '- The update time of the control policy.'
            use_count: '- The use count of the control policy.'
        importStatements: []
    volcengine_cfw_control_policy_priority:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw control policy priority
        name: volcengine_cfw_control_policy_priority
        title: volcengine_cfw_control_policy_priority
        examples:
            - name: foo
              manifest: |-
                {
                  "direction": "in",
                  "new_prio": 5,
                  "rule_id": "${volcengine_cfw_control_policy.foo.rule_id}"
                }
              references:
                rule_id: volcengine_cfw_control_policy.foo.rule_id
              dependencies:
                volcengine_cfw_address_book.foo: |-
                    {
                      "address_list": [
                        "192.168.1.1",
                        "192.168.2.2"
                      ],
                      "description": "acc-test",
                      "group_name": "acc-test-address-book",
                      "group_type": "ip"
                    }
                volcengine_cfw_control_policy.foo: |-
                    {
                      "action": "accept",
                      "description": "acc-test-control-policy",
                      "dest_port": "300",
                      "dest_port_type": "port",
                      "destination": "${volcengine_cfw_address_book.foo.id}",
                      "destination_type": "group",
                      "direction": "in",
                      "end_time": 1738339140,
                      "priority": 1,
                      "proto": "TCP",
                      "repeat_days": [
                        2,
                        5
                      ],
                      "repeat_end_time": "11:00",
                      "repeat_start_time": "01:00",
                      "repeat_type": "Weekly",
                      "source": "0.0.0.0/0",
                      "source_type": "net",
                      "start_time": 1736092800,
                      "status": true
                    }
        argumentDocs:
            direction: '- (Required, ForceNew) The direction of the control policy. Valid values: in, out.'
            id: '- ID of the resource.'
            new_prio: '- (Optional) The new priority of the control policy. The priority increases in order from 1, with lower priority indicating higher priority.'
            prio: '- The priority of the control policy.'
            rule_id: '- (Required, ForceNew) The rule id of the control policy.'
        importStatements: []
    volcengine_cfw_dns_control_policy:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw dns control policy
        name: volcengine_cfw_dns_control_policy
        title: volcengine_cfw_dns_control_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test-dns-control-policy",
                  "destination": "www.test.com",
                  "destination_type": "domain",
                  "source": [
                    {
                      "region": "cn-beijing",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                  ]
                }
              references:
                source.vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- The account id of the dns control policy.'
            description: '- (Optional) The description of the dns control policy.'
            destination: '- (Required) The destination of the dns control policy.'
            destination_type: '- (Required) The destination type of the dns control policy. Valid values: group, domain.'
            hit_cnt: '- The hit count of the dns control policy.'
            id: '- ID of the resource.'
            internet_firewall_id: '- (Optional) The internet firewall id of the control policy.'
            last_hit_time: '- The last hit time of the dns control policy. Unix timestamp.'
            region: '- (Required) The region of the source vpc.'
            source: '- (Required) The source vpc list of the dns control policy.'
            status: '- (Optional) Whether to enable the dns control policy.'
            use_count: '- The use count of the dns control policy.'
            vpc_id: '- (Required) The id of the source vpc.'
        importStatements: []
    volcengine_cfw_nat_firewall_control_policy:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw nat firewall control policy
        name: volcengine_cfw_nat_firewall_control_policy
        title: volcengine_cfw_nat_firewall_control_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "accept",
                  "description": "acc-test-control-policy",
                  "dest_port": "300",
                  "dest_port_type": "port",
                  "destination": "${volcengine_cfw_address_book.foo.id}",
                  "destination_type": "group",
                  "direction": "in",
                  "end_time": 1738339140,
                  "nat_firewall_id": "nfw-ydmkayvjsw2vsavx****",
                  "priority": 1,
                  "proto": "TCP",
                  "repeat_days": [
                    2,
                    5,
                    4
                  ],
                  "repeat_end_time": "11:00",
                  "repeat_start_time": "01:00",
                  "repeat_type": "Weekly",
                  "source": "0.0.0.0/0",
                  "source_type": "net",
                  "start_time": 1736092800,
                  "status": true
                }
              references:
                destination: volcengine_cfw_address_book.foo.id
              dependencies:
                volcengine_cfw_address_book.foo: |-
                    {
                      "address_list": [
                        "192.168.1.1",
                        "192.168.2.2"
                      ],
                      "description": "acc-test",
                      "group_name": "acc-test-address-book",
                      "group_type": "ip"
                    }
        argumentDocs:
            account_id: '- The account id of the nat firewall control policy.'
            action: '- (Required) The action of the nat firewall control policy. Valid values: accept, deny, monitor.'
            description: '- (Optional) The description of the nat firewall control policy.'
            dest_port: '- (Optional) The dest port of the nat firewall control policy.'
            dest_port_type: '- (Optional) The dest port type of the nat firewall control policy. Valid values: port, group.'
            destination: '- (Required) The destination of the nat firewall control policy.'
            destination_type: '- (Required) The destination type of the nat firewall control policy. Valid values: net, group, location, domain.'
            direction: '- (Required, ForceNew) The direction of the nat firewall control policy. Valid values: in, out.'
            effect_status: '- The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.'
            end_time: |-
                - (Optional) The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
                When the value of repeat_type is one of Once, Daily, Weekly, Monthly, this field is required.
            hit_cnt: '- The hit count of the nat firewall control policy.'
            id: '- ID of the resource.'
            is_effected: '- Whether the nat firewall control policy is effected.'
            nat_firewall_id: '- (Required, ForceNew) The id of the nat firewall.'
            nat_firewall_name: '- The name of the nat firewall.'
            prio: '- The priority of the nat firewall control policy.'
            priority: '- (Optional) The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.'
            proto: '- (Required) The proto of the nat firewall control policy. Valid values: TCP, ICMP, UDP, ANY. When the destination_type is domain, The proto must be TCP.'
            repeat_days: |-
                - (Optional) The repeat days of the nat firewall control policy. When the value of repeat_type is one of Weekly, Monthly, this field is required.
                When the repeat_type is Weekly, the valid value range is 0~6.
                When the repeat_type is Monthly, the valid value range is 1~31.
            repeat_end_time: |-
                - (Optional) The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
                When the value of repeat_type is one of Daily, Weekly, Monthly, this field is required.
            repeat_start_time: |-
                - (Optional) The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
                When the value of repeat_type is one of Daily, Weekly, Monthly, this field is required.
            repeat_type: '- (Optional) The repeat type of the nat firewall control policy. Valid values: Permanent, Once, Daily, Weekly, Monthly.'
            rule_id: '- The rule id of the nat firewall control policy.'
            source: '- (Required) The source of the nat firewall control policy.'
            source_type: '- (Required) The source type of the nat firewall control policy. Valid values: net, group.'
            start_time: |-
                - (Optional) The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
                When the value of repeat_type is one of Once, Daily, Weekly, Monthly, this field is required.
            status: '- (Optional) Whether to enable the nat firewall control policy. Default is false.'
            update_time: '- The update time of the nat firewall control policy.'
            use_count: '- The use count of the nat firewall control policy.'
        importStatements: []
    volcengine_cfw_nat_firewall_control_policy_priority:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw nat firewall control policy priority
        name: volcengine_cfw_nat_firewall_control_policy_priority
        title: volcengine_cfw_nat_firewall_control_policy_priority
        examples:
            - name: foo
              manifest: |-
                {
                  "direction": "in",
                  "nat_firewall_id": "nfw-ydmkayvjsw2vsavx****",
                  "new_prio": 2,
                  "rule_id": "${volcengine_cfw_nat_firewall_control_policy.foo.rule_id}"
                }
              references:
                rule_id: volcengine_cfw_nat_firewall_control_policy.foo.rule_id
              dependencies:
                volcengine_cfw_address_book.foo: |-
                    {
                      "address_list": [
                        "192.168.1.1",
                        "192.168.2.2"
                      ],
                      "description": "acc-test",
                      "group_name": "acc-test-address-book",
                      "group_type": "ip"
                    }
                volcengine_cfw_nat_firewall_control_policy.foo: |-
                    {
                      "action": "accept",
                      "description": "acc-test-control-policy",
                      "dest_port": "300",
                      "dest_port_type": "port",
                      "destination": "${volcengine_cfw_address_book.foo.id}",
                      "destination_type": "group",
                      "direction": "in",
                      "end_time": 1738339140,
                      "nat_firewall_id": "nfw-ydmkayvjsw2vsavx****",
                      "priority": 1,
                      "proto": "TCP",
                      "repeat_days": [
                        2,
                        5,
                        4
                      ],
                      "repeat_end_time": "11:00",
                      "repeat_start_time": "01:00",
                      "repeat_type": "Weekly",
                      "source": "0.0.0.0/0",
                      "source_type": "net",
                      "start_time": 1736092800,
                      "status": true
                    }
        argumentDocs:
            direction: '- (Required, ForceNew) The direction of the nat firewall control policy. Valid values: in, out.'
            id: '- ID of the resource.'
            nat_firewall_id: '- (Required, ForceNew) The id of the nat firewall.'
            new_prio: '- (Optional) The new priority of the nat firewall control policy. The priority increases in order from 1, with lower priority indicating higher priority.'
            prio: '- The priority of the nat firewall control policy.'
            rule_id: '- (Required, ForceNew) The rule id of the nat firewall control policy.'
        importStatements: []
    volcengine_cfw_vpc_firewall_acl_rule:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw vpc firewall acl rule
        name: volcengine_cfw_vpc_firewall_acl_rule
        title: volcengine_cfw_vpc_firewall_acl_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "accept",
                  "description": "acc-test-control-policy",
                  "dest_port": "300",
                  "dest_port_type": "port",
                  "destination": "${volcengine_cfw_address_book.foo.id}",
                  "destination_type": "group",
                  "end_time": 1738339140,
                  "priority": 1,
                  "proto": "TCP",
                  "repeat_days": [
                    2,
                    5
                  ],
                  "repeat_end_time": "11:00",
                  "repeat_start_time": "01:00",
                  "repeat_type": "Weekly",
                  "source": "0.0.0.0/0",
                  "source_type": "net",
                  "start_time": 1736092800,
                  "status": true,
                  "vpc_firewall_id": "vfw-ydmjakzksgf7u99j****"
                }
              references:
                destination: volcengine_cfw_address_book.foo.id
              dependencies:
                volcengine_cfw_address_book.foo: |-
                    {
                      "address_list": [
                        "192.168.1.1",
                        "192.168.2.2"
                      ],
                      "description": "acc-test",
                      "group_name": "acc-test-address-book",
                      "group_type": "ip"
                    }
        argumentDocs:
            account_id: '- The account id of the vpc firewall acl rule.'
            action: '- (Required) The action of the vpc firewall acl rule. Valid values: accept, deny, monitor.'
            description: '- (Optional) The description of the vpc firewall acl rule.'
            dest_port: '- (Optional) The dest port of the vpc firewall acl rule.'
            dest_port_type: '- (Optional) The dest port type of the vpc firewall acl rule. Valid values: port, group.'
            destination: '- (Required) The destination of the vpc firewall acl rule.'
            destination_type: '- (Required) The destination type of the vpc firewall acl rule. Valid values: net, group, location, domain.'
            effect_status: '- The effect status of the vpc firewall acl rule. 1: Not yet effective, 2: Issued in progress, 3: Effective.'
            end_time: |-
                - (Optional) The end time of the vpc firewall acl rule. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
                When the value of repeat_type is one of Once, Daily, Weekly, Monthly, this field is required.
            hit_cnt: '- The hit count of the vpc firewall acl rule.'
            id: '- ID of the resource.'
            is_effected: '- Whether the vpc firewall acl rule is effected.'
            prio: '- The priority of the vpc firewall acl rule.'
            priority: '- (Optional) The priority of the vpc firewall acl rule. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.'
            proto: '- (Required) The proto of the vpc firewall acl rule. Valid values: TCP, ICMP, UDP, ANY. When the destination_type is domain, The proto must be TCP.'
            repeat_days: |-
                - (Optional) The repeat days of the vpc firewall acl rule. When the value of repeat_type is one of Weekly, Monthly, this field is required.
                When the repeat_type is Weekly, the valid value range is 0~6.
                When the repeat_type is Monthly, the valid value range is 1~31.
            repeat_end_time: |-
                - (Optional) The repeat end time of the vpc firewall acl rule. Accurate to the minute, in the format of hh: mm. For example: 12:00.
                When the value of repeat_type is one of Daily, Weekly, Monthly, this field is required.
            repeat_start_time: |-
                - (Optional) The repeat start time of the vpc firewall acl rule. Accurate to the minute, in the format of hh: mm. For example: 12:00.
                When the value of repeat_type is one of Daily, Weekly, Monthly, this field is required.
            repeat_type: '- (Optional) The repeat type of the vpc firewall acl rule. Valid values: Permanent, Once, Daily, Weekly, Monthly.'
            rule_id: '- The rule id of the vpc firewall acl rule.'
            source: '- (Required) The source of the vpc firewall acl rule.'
            source_type: '- (Required) The source type of the vpc firewall acl rule. Valid values: net, group.'
            start_time: |-
                - (Optional) The start time of the vpc firewall acl rule. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
                When the value of repeat_type is one of Once, Daily, Weekly, Monthly, this field is required.
            status: '- (Optional) Whether to enable the vpc firewall acl rule. Default is false.'
            update_time: '- The update time of the vpc firewall acl rule.'
            use_count: '- The use count of the vpc firewall acl rule.'
            vpc_firewall_id: '- (Required, ForceNew) The id of the vpc firewall.'
            vpc_firewall_name: '- The name of the vpc firewall.'
        importStatements: []
    volcengine_cfw_vpc_firewall_acl_rule_priority:
        subCategory: CLOUD_FIREWALL
        description: Provides a resource to manage cfw vpc firewall acl rule priority
        name: volcengine_cfw_vpc_firewall_acl_rule_priority
        title: volcengine_cfw_vpc_firewall_acl_rule_priority
        examples:
            - name: foo
              manifest: |-
                {
                  "new_prio": 3,
                  "rule_id": "${volcengine_cfw_vpc_firewall_acl_rule.foo.rule_id}",
                  "vpc_firewall_id": "vfw-ydmjakzksgf7u99j****"
                }
              references:
                rule_id: volcengine_cfw_vpc_firewall_acl_rule.foo.rule_id
              dependencies:
                volcengine_cfw_address_book.foo: |-
                    {
                      "address_list": [
                        "192.168.1.1",
                        "192.168.2.2"
                      ],
                      "description": "acc-test",
                      "group_name": "acc-test-address-book",
                      "group_type": "ip"
                    }
                volcengine_cfw_vpc_firewall_acl_rule.foo: |-
                    {
                      "action": "accept",
                      "description": "acc-test-control-policy",
                      "dest_port": "300",
                      "dest_port_type": "port",
                      "destination": "${volcengine_cfw_address_book.foo.id}",
                      "destination_type": "group",
                      "end_time": 1738339140,
                      "priority": 1,
                      "proto": "TCP",
                      "repeat_days": [
                        2,
                        5
                      ],
                      "repeat_end_time": "11:00",
                      "repeat_start_time": "01:00",
                      "repeat_type": "Weekly",
                      "source": "0.0.0.0/0",
                      "source_type": "net",
                      "start_time": 1736092800,
                      "status": true,
                      "vpc_firewall_id": "vfw-ydmjakzksgf7u99j****"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            new_prio: '- (Optional) The new priority of the vpc firewall acl rule. The priority increases in order from 1, with lower priority indicating higher priority.'
            prio: '- The priority of the vpc firewall acl rule.'
            rule_id: '- (Required, ForceNew) The rule id of the vpc firewall acl rule.'
            vpc_firewall_id: '- (Required, ForceNew) The id of the vpc firewall.'
        importStatements: []
    volcengine_clb:
        subCategory: CLB
        description: Provides a resource to manage clb
        name: volcengine_clb
        title: volcengine_clb
        examples:
            - name: public_clb
              manifest: |-
                {
                  "description": "acc-test-demo",
                  "eip_billing_config": [
                    {
                      "bandwidth": 1,
                      "eip_billing_type": "PostPaidByBandwidth",
                      "isp": "BGP"
                    }
                  ],
                  "load_balancer_name": "acc-test-clb-public",
                  "load_balancer_spec": "small_1",
                  "project_name": "default",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "type": "public"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_eip_address.eip: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "tf-test",
                      "isp": "BGP",
                      "name": "tf-eip",
                      "project_name": "default"
                    }
                volcengine_eip_associate.associate: |-
                    {
                      "allocation_id": "${volcengine_eip_address.eip.id}",
                      "instance_id": "${volcengine_clb.private_clb.id}",
                      "instance_type": "ClbInstance"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.subnet_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet-ipv6",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[1].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpc.vpc_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc-ipv6"
                    }
                volcengine_vpc_ipv6_address_bandwidth.foo: |-
                    {
                      "bandwidth": 5,
                      "billing_type": "PostPaidByBandwidth",
                      "depends_on": [
                        "${volcengine_vpc_ipv6_gateway.ipv6_gateway}"
                      ],
                      "ipv6_address": "${volcengine_clb.private_clb_ipv6.eni_ipv6_address}"
                    }
                volcengine_vpc_ipv6_gateway.ipv6_gateway: |-
                    {
                      "name": "acc-test-ipv6-gateway",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}"
                    }
            - name: private_clb
              manifest: |-
                {
                  "description": "acc-test-demo",
                  "load_balancer_name": "acc-test-clb-private",
                  "load_balancer_spec": "small_1",
                  "project_name": "default",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "type": "private"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_eip_address.eip: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "tf-test",
                      "isp": "BGP",
                      "name": "tf-eip",
                      "project_name": "default"
                    }
                volcengine_eip_associate.associate: |-
                    {
                      "allocation_id": "${volcengine_eip_address.eip.id}",
                      "instance_id": "${volcengine_clb.private_clb.id}",
                      "instance_type": "ClbInstance"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.subnet_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet-ipv6",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[1].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpc.vpc_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc-ipv6"
                    }
                volcengine_vpc_ipv6_address_bandwidth.foo: |-
                    {
                      "bandwidth": 5,
                      "billing_type": "PostPaidByBandwidth",
                      "depends_on": [
                        "${volcengine_vpc_ipv6_gateway.ipv6_gateway}"
                      ],
                      "ipv6_address": "${volcengine_clb.private_clb_ipv6.eni_ipv6_address}"
                    }
                volcengine_vpc_ipv6_gateway.ipv6_gateway: |-
                    {
                      "name": "acc-test-ipv6-gateway",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}"
                    }
            - name: private_clb_ipv6
              manifest: |-
                {
                  "address_ip_version": "DualStack",
                  "description": "acc-test-demo",
                  "load_balancer_name": "acc-test-clb-ipv6",
                  "load_balancer_spec": "small_1",
                  "project_name": "default",
                  "subnet_id": "${volcengine_subnet.subnet_ipv6.id}",
                  "type": "private"
                }
              references:
                subnet_id: volcengine_subnet.subnet_ipv6.id
              dependencies:
                volcengine_eip_address.eip: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "tf-test",
                      "isp": "BGP",
                      "name": "tf-eip",
                      "project_name": "default"
                    }
                volcengine_eip_associate.associate: |-
                    {
                      "allocation_id": "${volcengine_eip_address.eip.id}",
                      "instance_id": "${volcengine_clb.private_clb.id}",
                      "instance_type": "ClbInstance"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.subnet_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "ipv6_cidr_block": 1,
                      "subnet_name": "acc-test-subnet-ipv6",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[1].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpc.vpc_ipv6: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "enable_ipv6": true,
                      "vpc_name": "acc-test-vpc-ipv6"
                    }
                volcengine_vpc_ipv6_address_bandwidth.foo: |-
                    {
                      "bandwidth": 5,
                      "billing_type": "PostPaidByBandwidth",
                      "depends_on": [
                        "${volcengine_vpc_ipv6_gateway.ipv6_gateway}"
                      ],
                      "ipv6_address": "${volcengine_clb.private_clb_ipv6.eni_ipv6_address}"
                    }
                volcengine_vpc_ipv6_gateway.ipv6_gateway: |-
                    {
                      "name": "acc-test-ipv6-gateway",
                      "vpc_id": "${volcengine_vpc.vpc_ipv6.id}"
                    }
        argumentDocs:
            address_ip_version: |-
                - (Optional, ForceNew) The address ip version of the Clb. Valid values: ipv4, DualStack. Default is ipv4.
                When the value of this field is DualStack, the type of the CLB must be private, and suggest using a combination of resource volcengine_vpc_ipv6_gateway and volcengine_vpc_ipv6_address_bandwidth to achieve ipv6 public network access function.
            bandwidth: '- (Optional) The peek bandwidth of the EIP which automatically assigned to CLB.'
            description: '- (Optional) The description of the CLB.'
            eip_address: '- The Eip address of the Clb.'
            eip_billing_config: '- (Optional, ForceNew) The billing configuration of the EIP which automatically associated to CLB. This field is valid when the type of CLB is public.When the type of the CLB is private, suggest using a combination of resource volcengine_eip_address and volcengine_eip_associate to achieve public network access function.'
            eip_billing_type: '- (Required, ForceNew) The billing type of the EIP which automatically assigned to CLB. And optional choice contains PostPaidByBandwidth or PostPaidByTraffic or PrePaid.When creating a PrePaid public CLB, this field must be specified as PrePaid simultaneously.When the LoadBalancerBillingType changes from PostPaid to PrePaid, please manually modify the value of this field to PrePaid simultaneously.'
            eip_id: '- The Eip ID of the Clb.'
            eni_address: '- (Optional, ForceNew) The eni address of the CLB.'
            eni_ipv6_address: '- (Optional, ForceNew) The eni ipv6 address of the Clb.'
            id: '- ID of the resource.'
            ipv6_eip_id: '- The Ipv6 Eip ID of the Clb.'
            isp: '- (Required, ForceNew) The ISP of the EIP which automatically associated to CLB, the value can be BGP or ChinaMobile or ChinaUnicom or ChinaTelecom or SingleLine_BGP or Static_BGP or Fusion_BGP.'
            key: '- (Required) The Key of Tags.'
            load_balancer_billing_type: '- (Optional) The billing type of the CLB, valid values: PostPaid, PrePaid, PostPaidByLCU. Default is PostPaid.'
            load_balancer_name: '- (Optional) The name of the CLB.'
            load_balancer_spec: '- (Optional) The specification of the CLB, the value can be small_1, small_2, medium_1, medium_2, large_1, large_2. When the value of the load_balancer_billing_type is PostPaidByLCU, this field does not need to be specified.'
            master_zone_id: '- (Optional) The master zone ID of the CLB.'
            modification_protection_reason: '- (Optional) The reason of the console modification protection.'
            modification_protection_status: '- (Optional) The status of the console modification protection, the value can be NonProtection or ConsoleProtection.'
            period: '- (Optional) The period of the NatGateway, the valid value range in 1~9 or 12 or 24 or 36. Default value is 12. The period unit defaults to Month.This field is only effective when creating a PrePaid NatGateway. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            project_name: '- (Optional) The ProjectName of the CLB.'
            region_id: '- (Optional, ForceNew) The region of the request.'
            renew_type: '- The renew type of the CLB. When the value of the load_balancer_billing_type is PrePaid, the query returns this field.'
            slave_zone_id: '- (Optional) The slave zone ID of the CLB.'
            subnet_id: '- (Required, ForceNew) The id of the Subnet.'
            tags: '- (Optional) Tags.'
            type: '- (Required, ForceNew) The type of the CLB. And optional choice contains public or private.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Optional, ForceNew) The id of the VPC.'
        importStatements: []
    volcengine_clb_rule:
        subCategory: CLB
        description: Provides a resource to manage clb rule
        name: volcengine_clb_rule
        title: volcengine_clb_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "domain": "test-volc123.com",
                  "listener_id": "${volcengine_listener.foo.id}",
                  "server_group_id": "${volcengine_server_group.foo.id}",
                  "url": "/tftest"
                }
              references:
                listener_id: volcengine_listener.foo.id
                server_group_id: volcengine_server_group.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc0Demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_name": "acc-test-create",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "type": "public"
                    }
                volcengine_listener.foo: |-
                    {
                      "enabled": "on",
                      "health_check": [
                        {
                          "domain": "volcengine.com",
                          "enabled": "on",
                          "healthy_threshold": 5,
                          "http_code": "http_2xx",
                          "interval": 10,
                          "method": "GET",
                          "timeout": 3,
                          "un_healthy_threshold": 2,
                          "uri": "/"
                        }
                      ],
                      "listener_name": "acc-test-listener",
                      "load_balancer_id": "${volcengine_clb.foo.id}",
                      "port": 90,
                      "protocol": "HTTP",
                      "server_group_id": "${volcengine_server_group.foo.id}"
                    }
                volcengine_server_group.foo: |-
                    {
                      "description": "hello demo11",
                      "load_balancer_id": "${volcengine_clb.foo.id}",
                      "server_group_name": "acc-test-create"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            description: '- (Optional) The description of the Rule.'
            domain: '- (Optional, ForceNew) The domain of Rule.'
            id: '- ID of the resource.'
            listener_id: '- (Required, ForceNew) The ID of listener.'
            server_group_id: '- (Required) Server Group Id.'
            url: '- (Optional, ForceNew) The Url of Rule.'
        importStatements: []
    volcengine_cloud_identity_group:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity group
        name: volcengine_cloud_identity_group
        title: volcengine_cloud_identity_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf",
                  "display_name": "tf-test-group",
                  "group_name": "acc-test-group",
                  "join_type": "Manual"
                }
        argumentDocs:
            description: '- (Optional) The description of the cloud identity group.'
            display_name: '- (Optional) The display name of the cloud identity group.'
            email: '- The email of the cloud identity user.'
            group_name: '- (Required, ForceNew) The name of the cloud identity group.'
            id: '- ID of the resource.'
            identity_type: '- The identity type of the cloud identity user.'
            join_time: '- The join time of the cloud identity user.'
            join_type: '- (Required, ForceNew) The user join type of the cloud identity group.'
            members: '- The member user info of the cloud identity group.'
            phone: '- The phone of the cloud identity user.'
            source: '- The source of the cloud identity user.'
            user_id: '- The id of the cloud identity user.'
            user_name: '- The name of the cloud identity user.'
        importStatements: []
    volcengine_cloud_identity_permission_set:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity permission set
        name: volcengine_cloud_identity_permission_set
        title: volcengine_cloud_identity_permission_set
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf",
                  "name": "acc-test-permission_set",
                  "permission_policies": [
                    {
                      "inline_policy_document": "",
                      "permission_policy_name": "AdministratorAccess",
                      "permission_policy_type": "System"
                    },
                    {
                      "inline_policy_document": "",
                      "permission_policy_name": "ReadOnlyAccess",
                      "permission_policy_type": "System"
                    },
                    {
                      "inline_policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                      "permission_policy_type": "Inline"
                    }
                  ],
                  "session_duration": 5000
                }
        argumentDocs:
            description: '- (Optional) The description of the cloud identity permission set.'
            id: '- ID of the resource.'
            inline_policy_document: '- (Optional) The document of the cloud identity permission set inline policy. When the permission_policy_type is Inline, this field must be specified.'
            name: '- (Required, ForceNew) The name of the cloud identity permission set.'
            permission_policies: '- (Optional) The policies of the cloud identity permission set.'
            permission_policy_name: '- (Optional) The name of the cloud identity permission set system policy. When the permission_policy_type is System, this field must be specified.'
            permission_policy_type: '- (Required) The type of the cloud identity permission set policy. Valid values: System, Inline.'
            relay_state: '- (Optional) The relay state of the cloud identity permission set.'
            session_duration: '- (Optional) The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.'
        importStatements: []
    volcengine_cloud_identity_permission_set_assignment:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity permission set assignment
        name: volcengine_cloud_identity_permission_set_assignment
        title: volcengine_cloud_identity_permission_set_assignment
        examples:
            - name: foo
              manifest: |-
                {
                  "permission_set_id": "${volcengine_cloud_identity_permission_set.foo.id}",
                  "principal_id": "${volcengine_cloud_identity_user.foo.id}",
                  "principal_type": "User",
                  "target_id": "210026****"
                }
              references:
                permission_set_id: volcengine_cloud_identity_permission_set.foo.id
                principal_id: volcengine_cloud_identity_user.foo.id
              dependencies:
                volcengine_cloud_identity_permission_set.foo: |-
                    {
                      "description": "tf",
                      "name": "acc-test-permission_set",
                      "permission_policies": [
                        {
                          "inline_policy_document": "",
                          "permission_policy_name": "AdministratorAccess",
                          "permission_policy_type": "System"
                        },
                        {
                          "inline_policy_document": "",
                          "permission_policy_name": "ReadOnlyAccess",
                          "permission_policy_type": "System"
                        },
                        {
                          "inline_policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                          "permission_policy_type": "Inline"
                        }
                      ],
                      "session_duration": 5000
                    }
                volcengine_cloud_identity_user.foo: |-
                    {
                      "description": "tf",
                      "display_name": "tf-test-user",
                      "email": "88@qq.com",
                      "phone": "181",
                      "user_name": "acc-test-user"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            permission_set_id: '- (Required, ForceNew) The id of the cloud identity permission set.'
            principal_id: '- (Required, ForceNew) The principal id of the cloud identity permission set. When the principal_type is User, this field is specified to UserId. When the principal_type is Group, this field is specified to GroupId.'
            principal_type: '- (Required, ForceNew) The principal type of the cloud identity permission set. Valid values: User, Group.'
            target_id: '- (Required, ForceNew) The target account id of the cloud identity permission set assignment.'
        importStatements: []
    volcengine_cloud_identity_permission_set_provisioning:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity permission set provisioning
        name: volcengine_cloud_identity_permission_set_provisioning
        title: volcengine_cloud_identity_permission_set_provisioning
        examples:
            - name: foo
              manifest: |-
                {
                  "permission_set_id": "${volcengine_cloud_identity_permission_set.foo.id}",
                  "provisioning_status": "Provisioned",
                  "target_id": "210026****"
                }
              references:
                permission_set_id: volcengine_cloud_identity_permission_set.foo.id
              dependencies:
                volcengine_cloud_identity_permission_set.foo: |-
                    {
                      "description": "tf",
                      "name": "acc-test-permission_set",
                      "permission_policies": [
                        {
                          "inline_policy_document": "",
                          "permission_policy_name": "AdministratorAccess",
                          "permission_policy_type": "System"
                        },
                        {
                          "inline_policy_document": "",
                          "permission_policy_name": "ReadOnlyAccess",
                          "permission_policy_type": "System"
                        },
                        {
                          "inline_policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                          "permission_policy_type": "Inline"
                        }
                      ],
                      "session_duration": 5000
                    }
                volcengine_cloud_identity_permission_set_assignment.foo: |-
                    {
                      "permission_set_id": "${volcengine_cloud_identity_permission_set.foo.id}",
                      "principal_id": "${volcengine_cloud_identity_user.foo.id}",
                      "principal_type": "User",
                      "target_id": "210026****"
                    }
                volcengine_cloud_identity_user.foo: |-
                    {
                      "description": "tf",
                      "display_name": "tf-test-user",
                      "email": "88@qq.com",
                      "phone": "181",
                      "user_name": "acc-test-user"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            permission_set_id: '- (Required, ForceNew) The id of the cloud identity permission set.'
            provisioning_status: |-
                - (Required) The target provisioning status of the cloud identity permission set. This field must be specified as Provisioned in order to provision the updated permission set.
                When deleting this resource, resource volcengine_cloud_identity_permission_set_assignment must be deleted first.
            target_id: '- (Required, ForceNew) The target account id of the cloud identity permission set provisioning.'
        importStatements: []
    volcengine_cloud_identity_user:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity user
        name: volcengine_cloud_identity_user
        title: volcengine_cloud_identity_user
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf",
                  "display_name": "tf-test-user",
                  "email": "88@qq.com",
                  "phone": "1810000****",
                  "user_name": "acc-test-user"
                }
        argumentDocs:
            description: '- (Optional) The description of the cloud identity user.'
            display_name: '- (Optional) The display name of the cloud identity user.'
            email: '- (Optional) The email of the cloud identity user.'
            id: '- ID of the resource.'
            identity_type: '- The identity type of the cloud identity user.'
            phone: '- (Optional) The phone of the cloud identity user. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            source: '- The source of the cloud identity user.'
            user_name: '- (Required) The name of the cloud identity user.'
        importStatements: []
    volcengine_cloud_identity_user_attachment:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity user attachment
        name: volcengine_cloud_identity_user_attachment
        title: volcengine_cloud_identity_user_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "group_id": "${volcengine_cloud_identity_group.foo.id}",
                  "user_id": "${volcengine_cloud_identity_user.foo.id}"
                }
              references:
                group_id: volcengine_cloud_identity_group.foo.id
                user_id: volcengine_cloud_identity_user.foo.id
              dependencies:
                volcengine_cloud_identity_group.foo: |-
                    {
                      "description": "tf",
                      "display_name": "tf-test-group",
                      "group_name": "acc-test-group",
                      "join_type": "Manual"
                    }
                volcengine_cloud_identity_user.foo: |-
                    {
                      "description": "tf",
                      "display_name": "tf-test-user",
                      "email": "88@qq.com",
                      "phone": "181",
                      "user_name": "acc-test-user"
                    }
        argumentDocs:
            group_id: '- (Required, ForceNew) The id of the cloud identity group.'
            id: '- ID of the resource.'
            user_id: '- (Required, ForceNew) The id of the cloud identity user.'
        importStatements: []
    volcengine_cloud_identity_user_provisioning:
        subCategory: CLOUD_IDENTITY
        description: Provides a resource to manage cloud identity user provisioning
        name: volcengine_cloud_identity_user_provisioning
        title: volcengine_cloud_identity_user_provisioning
        examples:
            - name: foo
              manifest: |-
                {
                  "deletion_strategy": "Delete",
                  "description": "tf",
                  "duplication_strategy": "KeepBoth",
                  "duplication_suffix": "-tf",
                  "identity_source_strategy": "Ignore",
                  "policy_name": [
                    "AdministratorAccess"
                  ],
                  "principal_id": "${volcengine_cloud_identity_user.foo.id}",
                  "principal_type": "User",
                  "target_id": "210026****"
                }
              references:
                principal_id: volcengine_cloud_identity_user.foo.id
              dependencies:
                volcengine_cloud_identity_user.foo: |-
                    {
                      "description": "tf",
                      "display_name": "tf-test-user",
                      "email": "88@qq.com",
                      "phone": "181",
                      "user_name": "acc-test-user"
                    }
        argumentDocs:
            deletion_strategy: '- (Required, ForceNew) The deletion strategy of the cloud identity user provisioning. Valid values: Keep, Delete.'
            description: '- (Optional, ForceNew) The description of the cloud identity user provisioning.'
            duplication_strategy: '- (Required, ForceNew) The duplication strategy of the cloud identity user provisioning. Valid values: KeepBoth, Takeover.'
            duplication_suffix: '- (Optional, ForceNew) The duplication suffix of the cloud identity user provisioning. When the duplication_strategy is KeepBoth, this field must be specified.'
            id: '- ID of the resource.'
            identity_source_strategy: '- (Required, ForceNew) The identity source strategy of the cloud identity user provisioning. Valid values: Create, Ignore.'
            policy_name: '- (Optional) A list of policy name. Valid values: AdministratorAccess. This field is valid when the principal_type is User.'
            principal_id: '- (Required, ForceNew) The principal id of the cloud identity user provisioning. When the principal_type is User, this field is specified to UserId. When the principal_type is Group, this field is specified to GroupId.'
            principal_name: '- The principal name of the cloud identity user provisioning. When the principal_type is User, this field is specified to UserName. When the principal_type is Group, this field is specified to GroupName.'
            principal_type: '- (Required, ForceNew) The principal type of the cloud identity user provisioning. Valid values: User, Group.'
            provision_status: '- The status of the cloud identity user provisioning.'
            target_id: '- (Required, ForceNew) The target account id of the cloud identity user provisioning.'
        importStatements: []
    volcengine_cloud_monitor_contact:
        subCategory: CLOUD_MONITOR
        description: Provides a resource to manage cloud monitor contact
        name: volcengine_cloud_monitor_contact
        title: volcengine_cloud_monitor_contact
        examples:
            - name: default
              manifest: |-
                {
                  "email": "192*****72@****.com",
                  "name": "tf-acc",
                  "phone": "180****27812"
                }
        argumentDocs:
            email: '- (Required) The email of contact.'
            id: '- ID of the resource.'
            name: '- (Required) The name of contact.'
            phone: '- (Optional) The phone of contact.'
        importStatements: []
    volcengine_cloud_monitor_contact_group:
        subCategory: CLOUD_MONITOR
        description: Provides a resource to manage cloud monitor contact group
        name: volcengine_cloud_monitor_contact_group
        title: volcengine_cloud_monitor_contact_group
        examples:
            - name: foo
              manifest: |-
                {
                  "contacts_id_list": [
                    "1737376113733353472",
                    "1737375997680111616"
                  ],
                  "description": "tftest",
                  "name": "tfgroup"
                }
        argumentDocs:
            contacts_id_list: '- (Optional) When creating a contact group, contacts should be added with their contact ID. The maximum number of IDs allowed is 10, meaning that the maximum number of members in a single contact group is 10.'
            description: '- (Optional) The description of the contact group.'
            id: '- ID of the resource.'
            name: '- (Required) The name of the contact group.'
        importStatements: []
    volcengine_cloud_monitor_event_rule:
        subCategory: CLOUD_MONITOR
        description: Provides a resource to manage cloud monitor event rule
        name: volcengine_cloud_monitor_event_rule
        title: volcengine_cloud_monitor_event_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "contact_group_ids": [
                    "1737941730782699520",
                    "1737940985502777344"
                  ],
                  "contact_methods": [
                    "Phone",
                    "TLS",
                    "MQ"
                  ],
                  "effective_time": [
                    {
                      "end_time": "22:00",
                      "start_time": "01:00"
                    }
                  ],
                  "event_source": "ecs",
                  "event_type": [
                    "ecs:Disk:DiskError.Redeploy.Canceled"
                  ],
                  "filter_pattern": [
                    {
                      "source": "ecs",
                      "type": [
                        "ecs:Disk:DiskError.Redeploy.Canceled"
                      ]
                    }
                  ],
                  "level": "notice",
                  "message_queue": [
                    {
                      "instance_id": "kafka-cnoe4rfrsqfb1d64",
                      "region": "*****",
                      "topic": "tftest",
                      "type": "kafka",
                      "vpc_id": "vpc-2d68hz41j7qio58ozfd6jxgtb"
                    }
                  ],
                  "rule_name": "tftest1",
                  "status": "enable",
                  "tls_target": [
                    {
                      "project_id": "17ba378d-de43-495e-8906-03ae6567b376",
                      "project_name": "tf-test",
                      "region_name_cn": "*****",
                      "region_name_en": "*****",
                      "topic_id": "7ce12237-6670-44a7-9d79-2e36961586e6"
                    }
                  ]
                }
        argumentDocs:
            contact_group_ids: '- (Optional) When the alarm notification method is phone, SMS, or email, the triggered alarm contact group ID.'
            contact_methods: '- (Required) Alarm notification methods. Valid value: Phone, Email, SMS, Webhook: Alarm callback, TLS: Log Service, MQ: Message Queue Kafka.'
            description: '- (Optional) The description of the rule.'
            effective_time: '- (Required) The rule takes effect at a certain time and will only be effective during this period.'
            end_time: '- (Required) End time for rule activation.'
            endpoint: '- (Optional) When the alarm notification method is alarm callback, it triggers the callback address.'
            event_source: '- (Required, ForceNew) Event source.'
            event_type: '- (Optional) Event type.'
            filter_pattern: '- (Required) Filter mode, also known as event matching rules. Custom matching rules are not currently supported.'
            id: '- ID of the resource.'
            instance_id: '- (Required) The kafka instance id.'
            level: '- (Required) Severity of alarm rules. Value can be notice, warning, critical.'
            message_queue: '- (Optional) The triggered message queue when the alarm notification method is Kafka message queue.'
            project_id: '- (Required) The project id.'
            project_name: '- (Required) The project name.'
            region: '- (Required) The region.'
            region_name_cn: '- (Required) The Chinese region name.'
            region_name_en: '- (Required) The English region name.'
            rule_name: '- (Required) The name of the rule.'
            source: '- (Required, ForceNew) Event source corresponding to pattern matching.'
            start_time: '- (Required) Start time for rule activation.'
            status: '- (Optional) Rule status. enable: enable rule(default), disable: disable rule.'
            tls_target: '- (Optional) The alarm method for log service triggers the configuration of the log service.'
            topic: '- (Required) The topic name.'
            topic_id: '- (Required) The topic id.'
            type: '- (Required) The list of corresponding event types in pattern matching, currently set to match any.'
            vpc_id: '- (Required) The vpc id.'
        importStatements: []
    volcengine_cloud_monitor_rule:
        subCategory: CLOUD_MONITOR
        description: Provides a resource to manage cloud monitor rule
        name: volcengine_cloud_monitor_rule
        title: volcengine_cloud_monitor_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "alert_methods": [
                    "Email",
                    "Webhook"
                  ],
                  "condition_operator": "||",
                  "conditions": [
                    {
                      "comparison_operator": "\u003e",
                      "metric_name": "DiskUsageAvail",
                      "metric_unit": "Megabytes",
                      "statistics": "avg",
                      "threshold": "100"
                    },
                    {
                      "comparison_operator": "\u003e",
                      "metric_name": "DiskUsageUtilization",
                      "metric_unit": "Percent",
                      "statistics": "avg",
                      "threshold": "90"
                    }
                  ],
                  "contact_group_ids": [
                    "174284616403161****"
                  ],
                  "description": "acc-test",
                  "effect_end_at": "22:55",
                  "effect_start_at": "00:15",
                  "enable_state": "disable",
                  "evaluation_count": 5,
                  "level": "warning",
                  "multiple_conditions": true,
                  "namespace": "VCM_ECS",
                  "original_dimensions": [
                    {
                      "key": "ResourceID",
                      "value": [
                        "*"
                      ]
                    },
                    {
                      "key": "DiskName",
                      "value": [
                        "vda",
                        "vda1"
                      ]
                    }
                  ],
                  "recovery_notify": [
                    {
                      "enable": true
                    }
                  ],
                  "regions": [
                    "cn-beijing",
                    "cn-shanghai"
                  ],
                  "rule_name": "acc-test-rule",
                  "silence_time": 5,
                  "sub_namespace": "Storage",
                  "webhook_ids": [
                    "187655704106731****",
                    "187655712542447****"
                  ]
                }
        argumentDocs:
            alert_methods: '- (Required) The alert methods of the cloud monitor rule. Valid values: Email, Phone, SMS, Webhook.'
            alert_state: '- The alert state of the cloud monitor rule.'
            comparison_operator: '- (Required) The comparison operation of the cloud monitor rule. Valid values: >, >=, <, <=, !=, =.'
            condition_operator: '- (Optional) The condition operator of the cloud monitor rule. Valid values: &&, ||.'
            conditions: '- (Required) The conditions of the cloud monitor rule.'
            contact_group_ids: '- (Optional) The contact group ids of the cloud monitor rule. When the alert method is Email, SMS, or Phone, This field must be specified.'
            created_at: '- The created time of the cloud monitor rule.'
            description: '- (Optional) The description of the cloud monitor rule.'
            effect_end_at: '- (Required) The effect end time of the cloud monitor rule. The expression is HH:MM.'
            effect_start_at: '- (Required) The effect start time of the cloud monitor rule. The expression is HH:MM.'
            enable: '- (Optional) Whether to enable the recovery notify function.'
            enable_state: '- (Required) The enable state of the cloud monitor rule. Valid values: enable, disable.'
            evaluation_count: '- (Required) The evaluation count of the cloud monitor rule.'
            id: '- ID of the resource.'
            key: '- (Required) The key of the dimension.'
            level: '- (Required) The level of the cloud monitor rule. Valid values: critical, warning, notice.'
            metric_name: '- (Required) The metric name of the cloud monitor rule.'
            metric_unit: '- (Required) The metric unit of the cloud monitor rule.'
            multiple_conditions: '- (Optional) Whether to enable the multiple conditions function of the cloud monitor rule.'
            namespace: '- (Required, ForceNew) The namespace of the cloud monitor rule.'
            original_dimensions: '- (Required) The original dimensions of the cloud monitor rule.'
            recovery_notify: '- (Optional) The recovery notify of the cloud monitor rule.'
            regions: '- (Required, ForceNew) The region ids of the cloud monitor rule.'
            rule_name: '- (Required) The name of the cloud monitor rule.'
            silence_time: '- (Required) The silence time of the cloud monitor rule. Unit in minutes. Valid values: 5, 30, 60, 180, 360, 720, 1440.'
            statistics: '- (Required) The statistics of the cloud monitor rule. Valid values: avg, max, min.'
            sub_namespace: '- (Required, ForceNew) The sub namespace of the cloud monitor rule.'
            threshold: '- (Required) The threshold of the cloud monitor rule.'
            updated_at: '- The updated time of the cloud monitor rule.'
            value: '- (Required) The value of the dimension.'
            web_hook: '- (Optional) The web hook of the cloud monitor rule. When the alert method is Webhook, one of web_hook and webhook_ids must be specified.'
            webhook_ids: '- (Optional) The web hook id list of the cloud monitor rule. When the alert method is Webhook, one of web_hook and webhook_ids must be specified.'
        importStatements: []
    volcengine_cloudfs_access:
        subCategory: CLOUDFS
        description: Provides a resource to manage cloudfs access
        name: volcengine_cloudfs_access
        title: volcengine_cloudfs_access
        examples:
            - name: foo1
              manifest: |-
                {
                  "fs_name": "tftest2",
                  "security_group_id": "sg-rrv1klfg5s00v0x578mx14m",
                  "subnet_id": "subnet-13fca1crr5d6o3n6nu46cyb5m",
                  "vpc_route_enabled": false
                }
        argumentDocs:
            access_account_id: '- (Optional, ForceNew) The account id of access.'
            access_iam_role: '- (Optional, ForceNew) The iam role of access. If the VPC of another account is attached, the other account needs to create a role with CFSCacheAccess permission, and enter the role name as a parameter.'
            access_id: '- The id of access.'
            access_service_name: '- The service name of access.'
            created_time: '- The creation time.'
            fs_name: '- (Required, ForceNew) The name of file system.'
            id: '- ID of the resource.'
            is_default: '- Whether is default access.'
            security_group_id: '- (Required, ForceNew) The id of security group.'
            status: '- Status of access.'
            subnet_id: '- (Required, ForceNew) The id of subnet.'
            vpc_id: '- The id of vpc.'
            vpc_route_enabled: '- (Optional) Whether enable all vpc route.'
        importStatements: []
    volcengine_cloudfs_file_system:
        subCategory: CLOUDFS
        description: Provides a resource to manage cloudfs file system
        name: volcengine_cloudfs_file_system
        title: volcengine_cloudfs_file_system
        examples:
            - name: foo
              manifest: |-
                {
                  "cache_capacity_tib": 10,
                  "cache_plan": "T2",
                  "fs_name": "tffile",
                  "mode": "HDFS_MODE",
                  "read_only": true,
                  "security_group_id": "sg-rrv1klfg5s00v0x578mx14m",
                  "subnet_id": "subnet-13fca1crr5d6o3n6nu46cyb5m",
                  "tos_bucket": "tfacc",
                  "tos_prefix": "pre/",
                  "vpc_route_enabled": true,
                  "zone_id": "cn-beijing-b"
                }
            - name: foo1
              manifest: |-
                {
                  "cache_capacity_tib": 15,
                  "cache_plan": "T2",
                  "fs_name": "tffileu",
                  "mode": "ACC_MODE",
                  "read_only": true,
                  "security_group_id": "sg-rrv1klfg5s00v0x578mx14m",
                  "subnet_id": "subnet-13fca1crr5d6o3n6nu46cyb5m",
                  "tos_bucket": "tfacc",
                  "vpc_route_enabled": false,
                  "zone_id": "cn-beijing-b"
                }
        argumentDocs:
            access_id: '- The default vpc access id.'
            cache_capacity_tib: '- (Optional) The capacity of cache. This parameter is required when cache acceleration is enabled.'
            cache_plan: '- (Required) The cache plan. The value can be DISABLED or T2 or T4. When expanding the cache size, the cache plan should remain the same. For data lakes, cache must be enabled.'
            created_time: '- The creation time.'
            fs_name: '- (Required, ForceNew) The name of file system.'
            id: '- ID of the resource.'
            mode: '- (Required, ForceNew) The mode of file system. The value can be HDFS_MODE or ACC_MODE.'
            mount_point: '- The point mount.'
            read_only: '- (Optional, ForceNew) Whether the Namespace created automatically when mounting the TOS Bucket is read-only. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            security_group_id: '- (Optional) The id of security group. This parameter is required when cache acceleration is enabled.'
            status: '- Status of file system.'
            subnet_id: '- (Optional) The id of subnet. This parameter is required when cache acceleration is enabled.'
            tos_account_id: '- (Optional, ForceNew) When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported.'
            tos_ak: '- (Optional, ForceNew) The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported.'
            tos_bucket: '- (Optional, ForceNew) The tos bucket. When importing ACC_MODE resources, this attribute will not be imported.'
            tos_prefix: '- (Optional, ForceNew) The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path. When importing ACC_MODE resources, this attribute will not be imported.'
            tos_sk: '- (Optional, ForceNew) The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported.'
            vpc_id: '- The id of vpc.'
            vpc_route_enabled: '- (Optional) Whether enable all vpc route.'
            zone_id: '- (Required, ForceNew) The id of zone.'
        importStatements: []
    volcengine_cloudfs_namespace:
        subCategory: CLOUDFS
        description: Provides a resource to manage cloudfs namespace
        name: volcengine_cloudfs_namespace
        title: volcengine_cloudfs_namespace
        examples:
            - name: foo
              manifest: |-
                {
                  "fs_name": "tf-test-fs",
                  "read_only": true,
                  "tos_bucket": "tf-test"
                }
        argumentDocs:
            created_time: '- The creation time of the namespace.'
            fs_name: '- (Required, ForceNew) The name of file system.'
            id: '- ID of the resource.'
            is_my_bucket: '- Whether the tos bucket is your own bucket.'
            ns_id: '- The id of namespace.'
            read_only: '- (Optional, ForceNew) Whether the namespace is read-only.'
            service_managed: '- Whether the namespace is the official service for volcengine.'
            status: '- The status of the namespace.'
            tos_account_id: '- (Optional, ForceNew) When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            tos_ak: '- (Optional, ForceNew) The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            tos_bucket: '- (Required, ForceNew) The name of tos bucket.'
            tos_prefix: '- (Optional, ForceNew) The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.'
            tos_sk: '- (Optional, ForceNew) The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
        importStatements: []
    volcengine_cr_endpoint:
        subCategory: CR
        description: Provides a resource to manage cr endpoint
        name: volcengine_cr_endpoint
        title: volcengine_cr_endpoint
        examples:
            - name: default
              manifest: |-
                {
                  "enabled": true,
                  "registry": "acc-test-cr"
                }
        argumentDocs:
            enabled: '- (Optional) Whether enable public endpoint.'
            id: '- ID of the resource.'
            registry: '- (Required, ForceNew) The CrRegistry name.'
            status: '- The status of public endpoint.'
        importStatements: []
    volcengine_cr_namespace:
        subCategory: CR
        description: Provides a resource to manage cr namespace
        name: volcengine_cr_namespace
        title: volcengine_cr_namespace
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "namespace-1",
                  "registry": "tf-2"
                }
            - name: foo1
              manifest: |-
                {
                  "name": "namespace-2",
                  "registry": "tf-1"
                }
        argumentDocs:
            create_time: '- The time when namespace created.'
            id: '- ID of the resource.'
            name: '- (Required, ForceNew) The name of CrNamespace.'
            registry: '- (Required, ForceNew) The registry name.'
        importStatements: []
    volcengine_cr_registry:
        subCategory: CR
        description: Provides a resource to manage cr registry
        name: volcengine_cr_registry
        title: volcengine_cr_registry
        examples:
            - name: foo
              manifest: |-
                {
                  "delete_immediately": false,
                  "name": "tf-1",
                  "password": "1qaz!QAZ"
                }
        argumentDocs:
            charge_type: '- The charge type of registry.'
            conditions: '- The condition of registry.'
            create_time: '- The creation time of registry.'
            delete_immediately: '- (Optional) Whether delete registry immediately. Only effected in delete action.'
            domain: '- The domain of registry.'
            domains: '- The domain of registry.'
            id: '- ID of the resource.'
            name: '- (Required, ForceNew) The name of registry.'
            password: '- (Optional) The password of registry user.'
            phase: '- The phase status of registry.'
            status: '- The status of registry.'
            type: '- The domain type of registry.'
            user_status: '- The status of user.'
            username: '- The username of cr instance.'
        importStatements: []
    volcengine_cr_registry_state:
        subCategory: CR
        description: Provides a resource to manage cr registry state
        name: volcengine_cr_registry_state
        title: volcengine_cr_registry_state
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "Start",
                  "name": "tf-2"
                }
        argumentDocs:
            action: '- (Required) Start cr instance action,the value must be Start.'
            conditions: '- The condition of instance.'
            id: '- ID of the resource.'
            name: '- (Required, ForceNew) The cr instance id.'
            phase: '- The phase status of instance.'
            status: '- The status of cr instance.'
        importStatements: []
    volcengine_cr_repository:
        subCategory: CR
        description: Provides a resource to manage cr repository
        name: volcengine_cr_repository
        title: volcengine_cr_repository
        examples:
            - name: foo
              manifest: |-
                {
                  "access_level": "Public",
                  "description": "A test repository created by terraform.",
                  "name": "repository-1",
                  "namespace": "namespace-1",
                  "registry": "tf-2"
                }
        argumentDocs:
            access_level: '- (Optional) The access level of CrRepository.'
            create_time: '- The creation time of repository.'
            description: '- (Optional) The description of CrRepository.'
            id: '- ID of the resource.'
            name: '- (Required, ForceNew) The name of CrRepository.'
            namespace: '- (Required, ForceNew) The target namespace name.'
            registry: '- (Required, ForceNew) The CrRegistry name.'
            update_time: '- The last update time of repository.'
        importStatements: []
    volcengine_cr_tag:
        subCategory: CR
        description: Provides a resource to manage cr tag
        name: volcengine_cr_tag
        title: volcengine_cr_tag
        examples:
            - name: default
              manifest: |-
                {
                  "name": "v2",
                  "namespace": "langyu",
                  "registry": "enterprise-1",
                  "repository": "repo"
                }
        argumentDocs:
            api_version: '- The Helm version.'
            architecture: '- The image architecture.'
            author: '- The image author.'
            chart_attribute: '- The chart attribute,valid when tag type is Chart.'
            digest: '- The digest of OCI product.'
            id: '- ID of the resource.'
            image_attributes: '- The list of image attributes,valid when tag type is Image.'
            name: '- (Required, ForceNew) The name of OCI product.'
            namespace: '- (Required, ForceNew) The target namespace name.'
            os: '- The iamge os.'
            push_time: '- The last push time of OCI product.'
            registry: '- (Required, ForceNew) The CrRegistry name.'
            repository: '- (Required, ForceNew) The name of repository.'
            size: '- The size of OCI product.'
            type: '- The type of OCI product tag.'
            version: '- The Helm Chart version.'
        importStatements: []
    volcengine_cr_vpc_endpoint:
        subCategory: CR
        description: Provides a resource to manage cr vpc endpoint
        name: volcengine_cr_vpc_endpoint
        title: volcengine_cr_vpc_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "registry": "enterprise-1",
                  "vpcs": [
                    {
                      "account_id": 0,
                      "vpc_id": "vpc-3resbfzl3xgjk5zsk2iuq3vhk"
                    },
                    {
                      "subnet_id": "subnet-2d62do4697i8058ozfdszxl30",
                      "vpc_id": "vpc-3red9li8dd8g05zsk2iadytvy"
                    }
                  ]
                }
        argumentDocs:
            account_id: '- (Optional) The id of the account. When you need to expose the Enterprise Edition instance to a VPC under another primary account, you need to specify the ID of the primary account to which the VPC belongs.'
            id: '- ID of the resource.'
            registry: '- (Required, ForceNew) The Cr Registry name.'
            subnet_id: '- (Optional) The id of the subnet. If not specified, the subnet with the most remaining IPs under the VPC will be automatically selected.'
            vpc_id: '- (Optional) The id of the vpc.'
            vpcs: '- (Required) List of vpc meta. When apply is executed for the first time, the vpcs in the tf file will be added to the existing vpcs, and subsequent apply will overwrite the existing vpcs with the vpcs in the tf file.'
        importStatements: []
    volcengine_customer_gateway:
        subCategory: VPN
        description: Provides a resource to manage customer gateway
        name: volcengine_customer_gateway
        title: volcengine_customer_gateway
        examples:
            - name: foo
              manifest: |-
                {
                  "customer_gateway_name": "acc-test",
                  "description": "acc-test",
                  "ip_address": "192.0.1.3",
                  "project_name": "default"
                }
        argumentDocs:
            account_id: '- The account ID of the customer gateway.'
            connection_count: '- The connection count of the customer gateway.'
            creation_time: '- The create time of customer gateway.'
            customer_gateway_id: '- The ID of the customer gateway.'
            customer_gateway_name: '- (Optional) The name of the customer gateway.'
            description: '- (Optional) The description of the customer gateway.'
            id: '- ID of the resource.'
            ip_address: '- (Required, ForceNew) The IP address of the customer gateway.'
            project_name: '- (Optional) The project name of the VPN customer gateway.'
            status: '- The status of the customer gateway.'
            update_time: '- The update time of customer gateway.'
        importStatements: []
    volcengine_direct_connect_bgp_peer:
        subCategory: DIRECT_CONNECT
        description: Provides a resource to manage direct connect bgp peer
        name: volcengine_direct_connect_bgp_peer
        title: volcengine_direct_connect_bgp_peer
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test",
                  "remote_asn": 2000,
                  "virtual_interface_id": "dcv-62vi13v131tsn3gd6il****"
                }
        argumentDocs:
            account_id: '- The id of account.'
            auth_key: '- (Optional, ForceNew) The auth key of bgp peer.'
            bgp_peer_id: '- The id of bgp peer.'
            bgp_peer_name: '- (Optional) The name of bgp peer.'
            creation_time: '- The create time of bgp peer.'
            description: '- (Optional) The description of bgp peer.'
            id: '- ID of the resource.'
            local_asn: '- The local asn of bgp peer.'
            remote_asn: '- (Required, ForceNew) The remote asn of bgp peer.'
            session_status: '- The session status of bgp peer.'
            status: '- The status of bgp peer.'
            update_time: '- The update time of bgp peer.'
            virtual_interface_id: '- (Required, ForceNew) The id of virtual interface.'
        importStatements: []
    volcengine_direct_connect_connection:
        subCategory: DIRECT_CONNECT
        description: Provides a resource to manage direct connect connection
        name: volcengine_direct_connect_connection
        title: volcengine_direct_connect_connection
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 1000,
                  "customer_contact_email": "email@aaa.com",
                  "customer_contact_phone": "12345678911",
                  "customer_name": "tf-a",
                  "description": "tf-test",
                  "direct_connect_access_point_id": "ap-cn-beijing-a",
                  "direct_connect_connection_name": "tf-test-connection",
                  "line_operator": "ChinaOther",
                  "peer_location": "XX路XX号XX楼XX机房",
                  "port_spec": "10G",
                  "port_type": "10GBase",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            bandwidth: '- (Required, ForceNew) The line band width,unit:Mbps.'
            customer_contact_email: '- (Required) The dedicated line contact email.'
            customer_contact_phone: '- (Required) The dedicated line contact phone.'
            customer_name: '- (Required) The dedicated line contact name.'
            description: '- (Optional) The description of direct connect.'
            direct_connect_access_point_id: '- (Required, ForceNew) The direct connect access point id.'
            direct_connect_connection_name: '- (Optional) The name of direct connect.'
            id: '- ID of the resource.'
            key: '- (Optional) The tag key.'
            line_operator: '- (Required, ForceNew) The physical leased line operator.valid value contains ChinaTelecom,ChinaMobile,ChinaUnicom,ChinaOther.'
            peer_location: '- (Required, ForceNew) The local IDC address.'
            port_spec: '- (Required, ForceNew) The physical leased line port spec.valid value contains 1G,10G.'
            port_type: '- (Required, ForceNew) The physical leased line port type and spec.valid value contains 1000Base-T,10GBase-T,1000Base,10GBase,40GBase,100GBase.'
            tags: '- (Optional) The physical leased line tags.'
            value: '- (Optional) The tag value.'
        importStatements: []
    volcengine_direct_connect_gateway:
        subCategory: DIRECT_CONNECT
        description: Provides a resource to manage direct connect gateway
        name: volcengine_direct_connect_gateway
        title: volcengine_direct_connect_gateway
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test",
                  "direct_connect_gateway_name": "tf-test-gateway",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            description: '- (Optional) The description of direct connect gateway.'
            direct_connect_gateway_name: '- (Optional) The name of direct connect gateway.'
            id: '- ID of the resource.'
            key: '- (Optional) The tag key.'
            tags: '- (Optional) The direct connect gateway tags.'
            value: '- (Optional) The tag value.'
        importStatements: []
    volcengine_direct_connect_gateway_route:
        subCategory: DIRECT_CONNECT
        description: Provides a resource to manage direct connect gateway route
        name: volcengine_direct_connect_gateway_route
        title: volcengine_direct_connect_gateway_route
        examples:
            - name: foo
              manifest: |-
                {
                  "destination_cidr_block": "192.168.40.0/24",
                  "direct_connect_gateway_id": "dcg-172frxs5utjb44d1w33op****",
                  "next_hop_id": "dcv-1729lrbfx7fuo4d1w34pk****"
                }
        argumentDocs:
            account_id: '- The id of account.'
            creation_time: '- The create time.'
            destination_cidr_block: '- (Required, ForceNew) The cidr block.'
            direct_connect_gateway_id: '- (Required, ForceNew) The id of direct connect gateway.'
            direct_connect_gateway_route_id: '- The id of direct connect gateway route.'
            id: '- ID of the resource.'
            next_hop_id: '- (Required, ForceNew) The id of next hop.'
            next_hop_type: '- The type of next hop.'
            route_type: '- The type of route.'
            status: '- The status info.'
        importStatements: []
    volcengine_direct_connect_virtual_interface:
        subCategory: DIRECT_CONNECT
        description: Provides a resource to manage direct connect virtual interface
        name: volcengine_direct_connect_virtual_interface
        title: volcengine_direct_connect_virtual_interface
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test",
                  "direct_connect_connection_id": "dcc-rtkzeotzst1cu3numzi****",
                  "direct_connect_gateway_id": "dcg-638x4bjvjawwn3gd5xw****",
                  "enable_bfd": false,
                  "local_ip": "**.**.**.**/**",
                  "peer_ip": "**.**.**.**/**",
                  "route_type": "Static",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "virtual_interface_name": "tf-test-vi",
                  "vlan_id": 2
                }
        argumentDocs:
            bandwidth: '- (Optional) The band width limit of virtual interface,in Mbps.'
            bfd_detect_interval: '- (Optional) The BFD detect interval.'
            bfd_detect_multiplier: '- (Optional) The BFD detect times.'
            description: '- (Optional) The description of virtual interface.'
            direct_connect_connection_id: '- (Required, ForceNew) The direct connect connection ID which associated with.'
            direct_connect_gateway_id: '- (Required, ForceNew) The direct connect gateway ID which associated with.'
            enable_bfd: '- (Optional) Whether enable BFD detect.'
            enable_nqa: '- (Optional) Whether enable NQA detect.'
            id: '- ID of the resource.'
            key: '- (Optional) The tag key.'
            local_ip: '- (Required, ForceNew) The local IP that associated with.'
            nqa_detect_interval: '- (Optional) The NQA detect interval.'
            nqa_detect_multiplier: '- (Optional) The NAQ detect times.'
            peer_ip: '- (Required, ForceNew) The peer IP that associated with.'
            route_type: '- (Optional, ForceNew) The route type of virtual interface,valid value contains Static,BGP.'
            tags: '- (Optional) The tags that direct connect gateway added.'
            value: '- (Optional) The tag value.'
            virtual_interface_name: '- (Optional) The name of virtual interface.'
            vlan_id: '- (Required, ForceNew) The VLAN ID used to connect to the local IDC, please ensure that this VLAN ID is not occupied, the value range: 0 ~ 2999.'
        importStatements: []
    volcengine_dnat_entry:
        subCategory: NAT
        description: Provides a resource to manage dnat entry
        name: volcengine_dnat_entry
        title: volcengine_dnat_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_eip_associate.foo}"
                  ],
                  "dnat_entry_name": "acc-test-dnat-entry",
                  "external_ip": "${volcengine_eip_address.foo.eip_address}",
                  "external_port": 80,
                  "internal_ip": "172.16.0.10",
                  "internal_port": 80,
                  "nat_gateway_id": "${volcengine_nat_gateway.foo.id}",
                  "protocol": "tcp"
                }
              references:
                external_ip: volcengine_eip_address.foo.eip_address
                nat_gateway_id: volcengine_nat_gateway.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip"
                    }
                volcengine_eip_associate.foo: |-
                    {
                      "allocation_id": "${volcengine_eip_address.foo.id}",
                      "instance_id": "${volcengine_nat_gateway.foo.id}",
                      "instance_type": "Nat"
                    }
                volcengine_nat_gateway.foo: |-
                    {
                      "billing_type": "PostPaid",
                      "description": "acc-test",
                      "nat_gateway_name": "acc-test-ng",
                      "project_name": "default",
                      "spec": "Small",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            dnat_entry_id: '- The id of the DNAT rule.'
            dnat_entry_name: '- (Optional) The name of the DNAT rule.'
            external_ip: '- (Required) Provides the public IP address for public network access.'
            external_port: '- (Required) The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.'
            id: '- ID of the resource.'
            internal_ip: '- (Required) Provides the internal IP address.'
            internal_port: '- (Required) The port or port segment on which the cloud server instance provides services to the public network.'
            nat_gateway_id: '- (Required, ForceNew) The id of the nat gateway to which the entry belongs.'
            protocol: '- (Required) The network protocol.'
        importStatements: []
    volcengine_dns_backup:
        subCategory: DNS
        description: Provides a resource to manage dns backup
        name: volcengine_dns_backup
        title: volcengine_dns_backup
        examples:
            - name: foo
              manifest: |-
                {
                  "zid": 58846
                }
        argumentDocs:
            backup_id: '- The ID of backup.'
            backup_time: '- Time when the backup was created. Timezone is UTC.'
            id: '- ID of the resource.'
            zid: '- (Required, ForceNew) The ID of the domain for which you want to get the backup schedule.'
        importStatements: []
    volcengine_dns_backup_schedule:
        subCategory: DNS
        description: Provides a resource to manage dns backup schedule
        name: volcengine_dns_backup_schedule
        title: volcengine_dns_backup_schedule
        examples:
            - name: foo
              manifest: |-
                {
                  "schedule": 1,
                  "zid": 58846
                }
        argumentDocs:
            count_limit: '- Maximum number of backups per domain.'
            id: '- ID of the resource.'
            schedule: '- (Required) The backup schedule. 0: Turn off automatic backup. 1: Automatic backup once per hour. 2: Automatic backup once per day. 3: Automatic backup once per month.'
            zid: '- (Required, ForceNew) The ID of the domain for which you want to update the backup schedule.'
        importStatements: []
    volcengine_dns_record:
        subCategory: DNS
        description: Provides a resource to manage dns record
        name: volcengine_dns_record
        title: volcengine_dns_record
        examples:
            - name: foo
              manifest: |-
                {
                  "host": "a.com",
                  "type": "A",
                  "value": "1.1.1.2",
                  "zid": 58846
                }
        argumentDocs:
            created_at: '- The creation time of the domain.'
            enable: '- Whether the DNS record is enabled.'
            host: '- (Required, ForceNew) The host record, which is the domain prefix of the subdomain.'
            id: '- ID of the resource.'
            line: '- (Optional, ForceNew) The value of the DNS record.'
            operators: '- The account ID that called this API.'
            pqdn: '- The account ID that called this API.'
            record_id: '- The ID of the DNS record.'
            record_set_id: '- The ID of the record set where the DNS record is located.'
            remark: '- (Optional) The remark for the DNS record.'
            tags: '- The tag information of the DNS record.'
            ttl: '- (Optional) The Time-To-Live (TTL) of the DNS record, in seconds.'
            type: '- (Required) The record type.'
            updated_at: '- The update time of the domain.'
            value: '- (Required) The value of the DNS record.'
            weight: '- (Optional) The weight of the DNS record.'
            zid: '- (Required, ForceNew) The ID of the domain to which you want to add a DNS record.'
        importStatements: []
    volcengine_dns_zone:
        subCategory: DNS
        description: Provides a resource to manage dns zone
        name: volcengine_dns_zone
        title: volcengine_dns_zone
        examples:
            - name: foo
              manifest: |-
                {
                  "project_name": "xxx",
                  "remark": "xxx",
                  "tags": [
                    {
                      "key": "xx",
                      "value": "xx"
                    }
                  ],
                  "zone_name": "xxxx.com"
                }
        argumentDocs:
            allocate_dns_server_list: '- The list of DNS servers allocated to the domain by BytePlus DNS.'
            auto_renew: '- Whether automatic domain renewal is enabled.'
            dns_security: '- The version of DNS DDoS protection service.'
            expired_time: '- The expiration time of the domain.'
            id: '- ID of the resource.'
            instance_no: '- The ID of the instance. For free edition, the value of this field is null.'
            is_ns_correct: '- Indicates whether the configuration of NS servers is correct. If the configuration is correct, the status of the domain in BytePlus DNS is Active.'
            is_sub_domain: '- Whether the domain is a subdomain.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Optional) The project to which the domain name belongs. The default value is default.'
            real_dns_server_list: '- The list of DNS servers actually used by the domain.'
            record_count: '- The total number of DNS records under the domain.'
            remark: '- (Optional) The remark for the domain.'
            stage: '- The status of the domain.'
            sub_domain_host: '- The domain prefix of the subdomain. If the domain is not a subdomain, this parameter is null.'
            tags: '- (Optional) Tags.'
            trade_code: '- The edition of the domain.'
            updated_at: '- The update time of the domain.'
            value: '- (Required) The Value of Tags.'
            zid: '- The ID of the domain.'
            zone_name: '- (Required, ForceNew) The domain to be created. The domain must be a second-level domain and cannot be a wildcard domain.'
        importStatements: []
    volcengine_ebs_auto_snapshot_policy:
        subCategory: EBS
        description: Provides a resource to manage ebs auto snapshot policy
        name: volcengine_ebs_auto_snapshot_policy
        title: volcengine_ebs_auto_snapshot_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_snapshot_policy_name": "acc-test-auto-snapshot-policy",
                  "project_name": "default",
                  "repeat_weekdays": [
                    2,
                    6
                  ],
                  "retention_days": -1,
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "time_points": [
                    1,
                    5,
                    9
                  ]
                }
        argumentDocs:
            auto_snapshot_policy_name: '- (Required) The name of the auto snapshot policy.'
            created_at: '- The creation time of the auto snapshot policy.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Optional) The project name of the auto snapshot policy.'
            repeat_days: '- (Optional) Create snapshots repeatedly on a daily basis, with intervals of a certain number of days between each snapshot. The value range is 1-30. Only one of repeat_weekdays, repeat_days can be specified.'
            repeat_weekdays: '- (Optional) The date of creating snapshot repeatedly by week. The value range is 1-7, for example, 1 represents Monday. Only one of repeat_weekdays, repeat_days can be specified.'
            retention_days: '- (Required) The retention days of the auto snapshot. Valid values: -1 and 1~65536. -1 means permanently preserving the snapshot.'
            status: '- The status of the auto snapshot policy.'
            tags: '- (Optional) Tags.'
            time_points: '- (Required) The creation time points of the auto snapshot policy. The value range is 0~23, representing a total of 24 time points from 00:00 to 23:00, for example, 1 represents 01:00.'
            updated_at: '- The updated time of the auto snapshot policy.'
            value: '- (Required) The Value of Tags.'
            volume_nums: '- The number of volumes associated with the auto snapshot policy.'
        importStatements: []
    volcengine_ebs_auto_snapshot_policy_attachment:
        subCategory: EBS
        description: Provides a resource to manage ebs auto snapshot policy attachment
        name: volcengine_ebs_auto_snapshot_policy_attachment
        title: volcengine_ebs_auto_snapshot_policy_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_snapshot_policy_id": "${volcengine_ebs_auto_snapshot_policy.foo.id}",
                  "volume_id": "${volcengine_volume.foo.id}"
                }
              references:
                auto_snapshot_policy_id: volcengine_ebs_auto_snapshot_policy.foo.id
                volume_id: volcengine_volume.foo.id
              dependencies:
                volcengine_ebs_auto_snapshot_policy.foo: |-
                    {
                      "auto_snapshot_policy_name": "acc-test-auto-snapshot-policy",
                      "project_name": "default",
                      "repeat_weekdays": [
                        2,
                        6
                      ],
                      "retention_days": -1,
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "time_points": [
                        1,
                        5,
                        9
                      ]
                    }
                volcengine_volume.foo: |-
                    {
                      "description": "acc-test",
                      "kind": "data",
                      "project_name": "default",
                      "size": 500,
                      "volume_charge_type": "PostPaid",
                      "volume_name": "acc-test-volume",
                      "volume_type": "ESSD_PL0",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
        argumentDocs:
            auto_snapshot_policy_id: '- (Required, ForceNew) The id of the auto snapshot policy.'
            id: '- ID of the resource.'
            volume_id: '- (Required, ForceNew) The id of the volume.'
        importStatements: []
    volcengine_ebs_snapshot:
        subCategory: EBS
        description: Provides a resource to manage ebs snapshot
        name: volcengine_ebs_snapshot
        title: volcengine_ebs_snapshot
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "project_name": "default",
                  "retention_days": 3,
                  "snapshot_name": "acc-test-snapshot",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "volume_id": "${volcengine_volume.foo.id}"
                }
              references:
                volume_id: volcengine_volume.foo.id
              dependencies:
                volcengine_volume.foo: |-
                    {
                      "description": "acc-test",
                      "kind": "data",
                      "project_name": "default",
                      "size": 500,
                      "volume_charge_type": "PostPaid",
                      "volume_name": "acc-test-volume",
                      "volume_type": "ESSD_PL0",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
        argumentDocs:
            creation_time: '- The creation time of the snapshot.'
            description: '- (Optional) The description of the snapshot.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Optional) The project name of the snapshot.'
            retention_days: '- (Optional) The retention days of the snapshot. Valid values: 1~65536. Not specifying this field means permanently preserving the snapshot.When modifying this field, the retention days only supports extension and not shortening. The value range is N+1~65536, where N is the retention days set during snapshot creation.'
            snapshot_name: '- (Required) The name of the snapshot.'
            snapshot_type: '- The type of the snapshot.'
            status: '- The status of the snapshot.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            volume_id: '- (Required, ForceNew) The volume id to create snapshot.'
            volume_kind: '- The volume kind of the snapshot.'
            volume_name: '- The volume name of the snapshot.'
            volume_size: '- The volume size of the snapshot.'
            volume_status: '- The volume status of the snapshot.'
            volume_type: '- The volume type of the snapshot.'
            zone_id: '- The zone id of the snapshot.'
        importStatements: []
    volcengine_ebs_snapshot_group:
        subCategory: EBS
        description: Provides a resource to manage ebs snapshot group
        name: volcengine_ebs_snapshot_group
        title: volcengine_ebs_snapshot_group
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_volume_attach.foo}"
                  ],
                  "description": "acc-test",
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "name": "acc-test-snapshot-group",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "volume_ids": [
                    "${volcengine_ecs_instance.foo.system_volume_id}",
                    "${volcengine_volume.foo.id}"
                  ]
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "description": "acc-test",
                      "host_name": "tf-acc-test",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g3il.large",
                      "password": "93f0cb0614Aab12",
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_volume.foo: |-
                    {
                      "description": "acc-test",
                      "kind": "data",
                      "project_name": "default",
                      "size": 500,
                      "volume_charge_type": "PostPaid",
                      "volume_name": "acc-test-volume",
                      "volume_type": "ESSD_PL0",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_volume_attach.foo: |-
                    {
                      "instance_id": "${volcengine_ecs_instance.foo.id}",
                      "volume_id": "${volcengine_volume.foo.id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            creation_time: '- The creation time of the snapshot group.'
            description: '- (Optional) The instance id of the snapshot group.'
            id: '- ID of the resource.'
            image_id: '- The image id of the snapshot group.'
            instance_id: '- (Optional, ForceNew) The instance id of the snapshot group.'
            key: '- (Required) The Key of Tags.'
            name: '- (Optional) The name of the snapshot group.'
            project_name: '- (Optional) The project name of the snapshot group.'
            status: '- The status of the snapshot group.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            volume_ids: '- (Required, ForceNew) The volume id of the snapshot group. The status of the volume must be attached.If multiple volumes are specified, they need to be attached to the same ECS instance.'
        importStatements: []
    volcengine_ecs_command:
        subCategory: ECS
        description: Provides a resource to manage ecs command
        name: volcengine_ecs_command
        title: volcengine_ecs_command
        examples:
            - name: foo
              manifest: |-
                {
                  "command_content": "IyEvYmluL2Jhc2gKCgplY2hvICJvcGVyYXRpb24gc3VjY2VzcyEi",
                  "description": "tf",
                  "name": "tf-test",
                  "timeout": 100,
                  "username": "root",
                  "working_dir": "/home"
                }
        argumentDocs:
            command_content: '- (Required) The base64 encoded content of the ecs command.'
            created_at: '- The create time of the ecs command.'
            description: '- (Optional) The description of the ecs command.'
            id: '- ID of the resource.'
            invocation_times: '- The invocation times of the ecs command. Public commands do not display the invocation times.'
            name: '- (Required) The name of the ecs command.'
            timeout: '- (Optional) The timeout of the ecs command. Valid value range: 10-600.'
            updated_at: '- The update time of the ecs command.'
            username: '- (Optional) The username of the ecs command.'
            working_dir: '- (Optional) The working directory of the ecs command.'
        importStatements: []
    volcengine_ecs_deployment_set:
        subCategory: ECS
        description: Provides a resource to manage ecs deployment set
        name: volcengine_ecs_deployment_set
        title: volcengine_ecs_deployment_set
        examples:
            - name: foo
              manifest: |-
                {
                  "deployment_set_name": "acc-test-ecs-ds",
                  "description": "acc-test",
                  "granularity": "switch",
                  "strategy": "Availability"
                }
        argumentDocs:
            deployment_set_id: '- The ID of ECS DeploymentSet.'
            deployment_set_name: '- (Required) The name of ECS DeploymentSet.'
            description: '- (Optional) The description of ECS DeploymentSet.'
            granularity: '- (Optional, ForceNew) The granularity of ECS DeploymentSet.Valid values: switch, host, rack,Default is host.'
            id: '- ID of the resource.'
            strategy: '- (Optional, ForceNew) The strategy of ECS DeploymentSet.Valid values: Availability.Default is Availability.'
        importStatements: []
    volcengine_ecs_deployment_set_associate:
        subCategory: ECS
        description: Provides a resource to manage ecs deployment set associate
        name: volcengine_ecs_deployment_set_associate
        title: volcengine_ecs_deployment_set_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_ecs_instance_state.foo}"
                  ],
                  "deployment_set_id": "${volcengine_ecs_deployment_set.foo.id}",
                  "instance_id": "${volcengine_ecs_instance.foo.id}"
                }
              references:
                deployment_set_id: volcengine_ecs_deployment_set.foo.id
                instance_id: volcengine_ecs_instance.foo.id
              dependencies:
                volcengine_ecs_deployment_set.foo: |-
                    {
                      "deployment_set_name": "acc-test-ecs-ds",
                      "description": "acc-test",
                      "granularity": "switch",
                      "strategy": "Availability"
                    }
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_ecs_instance_state.foo: |-
                    {
                      "action": "Stop",
                      "instance_id": "${volcengine_ecs_instance.foo.id}",
                      "stopped_mode": "KeepCharging"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            deployment_set_id: '- (Required, ForceNew) The ID of ECS DeploymentSet Associate.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of ECS Instance.'
        importStatements: []
    volcengine_ecs_hpc_cluster:
        subCategory: ECS
        description: Provides a resource to manage ecs hpc cluster
        name: volcengine_ecs_hpc_cluster
        title: volcengine_ecs_hpc_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "name": "acc-test-hpc-cluster",
                  "zone_id": "cn-beijing-b"
                }
        argumentDocs:
            description: '- (Optional) The description of the hpc cluster.'
            id: '- ID of the resource.'
            name: '- (Required) The name of the hpc cluster.'
            zone_id: '- (Required, ForceNew) The zone id of the hpc cluster.'
        importStatements: []
    volcengine_ecs_instance:
        subCategory: ECS
        description: Provides a resource to manage ecs instance
        name: volcengine_ecs_instance
        title: volcengine_ecs_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "data_volumes": [
                    {
                      "delete_with_instance": true,
                      "size": 50,
                      "volume_type": "ESSD_PL0"
                    }
                  ],
                  "description": "acc-test",
                  "host_name": "tf-acc-test",
                  "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                  "instance_charge_type": "PostPaid",
                  "instance_name": "acc-test-ecs",
                  "instance_type": "ecs.g1.large",
                  "password": "93f0cb0614Aab12",
                  "project_name": "default",
                  "security_group_ids": [
                    "${volcengine_security_group.foo.id}"
                  ],
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "system_volume_size": 40,
                  "system_volume_type": "ESSD_PL0",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
              references:
                image_id: data.volcengine_images.foo.images[0].image_id
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            auto_renew: '- (Optional) The auto renew flag of ECS instance.Only effective when instance_charge_type is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            auto_renew_period: '- (Optional) The auto renew period of ECS instance.Only effective when instance_charge_type is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            bandwidth_mbps: '- (Optional, ForceNew) The peek bandwidth of the EIP. The value range in 1~500 for PostPaidByBandwidth, and 1~200 for PostPaidByTraffic. Default is 1.'
            bandwidth_package_id: '- (Optional, ForceNew) The id of the bandwidth package, indicates that the public IP address will be added to the bandwidth package.'
            charge_type: '- (Optional, ForceNew) The billing type of the EIP Address. Valid values: PayByBandwidth, PayByTraffic, PrePaid. Default is PayByBandwidth.'
            count: '- The Count of GPU device.'
            cpu_options: '- (Optional) The option of cpu,only support for ebm.'
            cpus: '- The number of ECS instance CPU cores.'
            created_at: '- The create time of ECS instance.'
            data_volumes: '- (Optional) The data volumes collection of  ECS instance.'
            delete_with_instance: '- (Optional, ForceNew) The delete with instance flag of volume.'
            deployment_set_id: '- (Optional) The ID of Ecs Deployment Set.'
            description: '- (Optional) The description of ECS instance.'
            eip_address: '- (Optional, ForceNew) The config of the eip which will be automatically created and assigned to this instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            eip_id: |-
                - (Optional, ForceNew) The id of an existing Available EIP which will be automatically assigned to this instance.
                It is not recommended to use this field, it is recommended to use volcengine_eip_associate resource to bind EIP.
            encrypted_memory_size: '- The Encrypted Memory Size of GPU device.'
            gpu_devices: '- The GPU device info of Instance.'
            host_name: '- (Optional, ForceNew) The host name of ECS instance.'
            hpc_cluster_id: '- (Optional, ForceNew) The hpc cluster ID of ECS instance.'
            id: '- ID of the resource.'
            image_id: '- (Required) The Image ID of ECS instance.'
            include_data_volumes: '- (Optional) The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.'
            instance_charge_type: '- (Optional) The charge type of ECS instance, the value can be PrePaid or PostPaid.'
            instance_id: '- The ID of ECS instance.'
            instance_name: '- (Optional) The name of ECS instance.'
            instance_type: '- (Required) The instance type of ECS instance.'
            ipv6_address_count: '- (Optional, ForceNew) The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.'
            ipv6_addresses: |-
                - (Optional, ForceNew) One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
                You cannot specify both the ipv6_addresses and ipv6_address_count parameters.
            is_gpu: '- The Flag of GPU instance.If the instance is GPU,The flag is true.'
            isp: '- (Optional, ForceNew) The ISP of the EIP. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom, SingleLine_BGP, Static_BGP.'
            keep_image_credential: |-
                - (Optional) Whether to keep the mirror settings. Only custom images and shared images support this field.
                When the value of this field is true, the Password and KeyPairName cannot be specified.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            key: '- (Required) The Key of Tags.'
            key_pair_id: '- The ssh key ID of ECS instance.'
            key_pair_name: '- (Optional) The ssh key name of ECS instance. This field can be modified only when the image_id is modified.'
            memory_size: '- The Memory Size of GPU device.'
            network_interface_id: '- The ID of primary networkInterface.'
            numa_per_socket: '- (Optional, ForceNew) The number of subnuma in socket, only support for ebm. 1 indicates disabling SNC/NPS function. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            os_name: '- The os name of ECS instance.'
            os_type: '- The os type of ECS instance.'
            password: '- (Optional) The password of ECS instance.'
            period: '- (Optional) The period of ECS instance.Only effective when instance_charge_type is PrePaid. Default is 12. Unit is Month.'
            primary_ip_address: '- (Optional, ForceNew) The private ip address of primary networkInterface.'
            product_name: '- The Product Name of GPU device.'
            project_name: '- (Optional) The ProjectName of the ecs instance.'
            secondary_network_interfaces: '- (Optional, ForceNew) The secondary networkInterface detail collection of ECS instance.'
            security_enhancement_strategy: '- (Optional, ForceNew) The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            security_group_ids: '- (Required) The security group ID set of primary networkInterface.'
            size: '- (Required, ForceNew) The size of volume. The value range of the data volume size is ESSD_PL0: 10~32768, ESSD_FlexPL: 10~32768, PTSSD: 20~8192.'
            spot_price_limit: '- (Optional, ForceNew) The maximum hourly price for spot instances supports up to three decimal places. This parameter only takes effect when SpotStrategy=SpotWithPriceLimit.'
            spot_strategy: |-
                - (Optional, ForceNew) The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, values:
                NoSpot (default): indicates creating a normal pay-as-you-go instance.
                SpotAsPriceGo: spot instance with system automatically bidding and following the current market price.
                SpotWithPriceLimit: spot instance with a set upper limit for bidding price.
            status: '- The status of ECS instance.'
            stopped_mode: '- The stop mode of ECS instance.'
            subnet_id: '- (Required, ForceNew) The subnet ID of primary networkInterface.'
            system_volume_id: '- The ID of system volume.'
            system_volume_size: '- (Required) The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.'
            system_volume_type: '- (Required, ForceNew) The type of system volume, the value is PTSSD or ESSD_PL0 or ESSD_PL1 or ESSD_PL2 or ESSD_FlexPL.'
            tags: '- (Optional) Tags.'
            threads_per_core: '- (Optional, ForceNew) The per core of threads, only support for ebm. 1 indicates disabling hyper threading function.'
            updated_at: '- The update time of ECS instance.'
            user_data: '- (Optional) The user data of ECS instance, this field must be encrypted with base64.'
            value: '- (Required) The Value of Tags.'
            volume_type: '- (Required, ForceNew) The type of volume, the value is PTSSD or ESSD_PL0 or ESSD_PL1 or ESSD_PL2 or ESSD_FlexPL.'
            vpc_id: '- The VPC ID of ECS instance.'
            zone_id: '- (Optional, ForceNew) The available zone ID of ECS instance.'
        importStatements: []
    volcengine_ecs_instance_state:
        subCategory: ECS
        description: Provides a resource to manage ecs instance state
        name: volcengine_ecs_instance_state
        title: volcengine_ecs_instance_state
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "Stop",
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "stopped_mode": "KeepCharging"
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            action: |-
                - (Required) Start or Stop of Instance Action, the value can be Start, Stop or ForceStop.
                If the target status of the action is consistent with the current status of the instance, the action will not actually be executed.
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) Id of Instance.'
            status: '- Status of Instance.'
            stopped_mode: '- (Optional) Stop Mode of Instance, the value can be KeepCharging or StopCharging.'
        importStatements: []
    volcengine_ecs_invocation:
        subCategory: ECS
        description: Provides a resource to manage ecs invocation
        name: volcengine_ecs_invocation
        title: volcengine_ecs_invocation
        examples:
            - name: foo
              manifest: |-
                {
                  "command_id": "cmd-ychkepkhtim0tr3b****",
                  "frequency": "5m",
                  "instance_ids": [
                    "i-ychmz92487l8j00o****"
                  ],
                  "invocation_description": "tf",
                  "invocation_name": "tf-test",
                  "launch_time": "2023-06-20T09:48:00Z",
                  "recurrence_end_time": "2023-06-20T09:59:00Z",
                  "repeat_mode": "Rate",
                  "timeout": 90,
                  "username": "root",
                  "working_dir": "/home"
                }
        argumentDocs:
            command_id: '- (Required, ForceNew) The command id of the ecs invocation.'
            end_time: '- The end time of the ecs invocation.'
            frequency: '- (Optional, ForceNew) The frequency of the ecs invocation. This field is valid and required when the value of the repeat_mode field is Rate.'
            id: '- ID of the resource.'
            instance_ids: '- (Required, ForceNew) The list of ECS instance IDs.'
            invocation_description: '- (Optional, ForceNew) The description of the ecs invocation.'
            invocation_name: '- (Required, ForceNew) The name of the ecs invocation.'
            invocation_status: '- The status of the ecs invocation.'
            launch_time: '- (Optional, ForceNew) The launch time of the ecs invocation. RFC3339 format. This field is valid and required when the value of the repeat_mode field is Rate or Fixed.'
            recurrence_end_time: '- (Optional, ForceNew) The recurrence end time of the ecs invocation. RFC3339 format. This field is valid and required when the value of the repeat_mode field is Rate.'
            repeat_mode: '- (Optional, ForceNew) The repeat mode of the ecs invocation. Valid values: Once, Rate, Fixed.'
            start_time: '- The start time of the ecs invocation.'
            timeout: '- (Optional, ForceNew) The timeout of the ecs command. Valid value range: 10-600. When this field is not specified, use the value of the field with the same name in ecs command as the default value.'
            username: '- (Required, ForceNew) The username of the ecs command. When this field is not specified, use the value of the field with the same name in ecs command as the default value.'
            working_dir: '- (Optional, ForceNew) The working directory of the ecs invocation. When this field is not specified, use the value of the field with the same name in ecs command as the default value.'
        importStatements: []
    volcengine_ecs_key_pair:
        subCategory: ECS
        description: Provides a resource to manage ecs key pair
        name: volcengine_ecs_key_pair
        title: volcengine_ecs_key_pair
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "key_pair_name": "acc-test-key-name"
                }
        argumentDocs:
            description: '- (Optional) The description of key pair.'
            finger_print: '- The finger print info.'
            id: '- ID of the resource.'
            key_file: '- (Optional, ForceNew) Target file to save private key. It is recommended that the value not be empty. You only have one chance to download the private key, the volcengine will not save your private key, please keep it safe. In the TF import scenario, this field will not write the private key locally.'
            key_pair_id: '- The id of key pair.'
            key_pair_name: '- (Required, ForceNew) The name of key pair.'
            public_key: '- (Optional, ForceNew) Public key string.'
        importStatements: []
    volcengine_ecs_key_pair_associate:
        subCategory: ECS
        description: Provides a resource to manage ecs key pair associate
        name: volcengine_ecs_key_pair_associate
        title: volcengine_ecs_key_pair_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "key_pair_id": "${volcengine_ecs_key_pair.foo.id}"
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
                key_pair_id: volcengine_ecs_key_pair.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name",
                      "instance_type": "ecs.g1.large",
                      "password": "your password",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_ecs_key_pair.foo: |-
                    {
                      "description": "acc-test",
                      "key_pair_name": "acc-test-key-name"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of ECS Instance.'
            key_pair_id: '- (Required, ForceNew) The ID of ECS KeyPair Associate.'
        importStatements: []
    volcengine_ecs_launch_template:
        subCategory: ECS
        description: Provides a resource to manage ecs launch template
        name: volcengine_ecs_launch_template
        title: volcengine_ecs_launch_template
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test-desc",
                  "eip_bandwidth": 1,
                  "eip_billing_type": "PostPaidByBandwidth",
                  "eip_isp": "ChinaMobile",
                  "host_name": "tf-host-name",
                  "hpc_cluster_id": "hpcCluster-l8u24ovdmoab6opf",
                  "image_id": "image-ycjwwciuzy5pkh54xx8f",
                  "instance_charge_type": "PostPaid",
                  "instance_name": "tf-acc-name",
                  "instance_type_id": "ecs.g1.large",
                  "key_pair_name": "tf-key-pair",
                  "launch_template_name": "tf-acc-template"
                }
        argumentDocs:
            delete_with_instance: '- (Optional) The delete with instance flag of volume. Valid values: true, false. Default value: true.'
            description: '- (Optional) The description of the instance.'
            eip_bandwidth: '- (Optional) The EIP bandwidth which the scaling configuration set.'
            eip_billing_type: '- (Optional) The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.'
            eip_isp: '- (Optional) The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.'
            host_name: '- (Optional) The host name of the instance.'
            hpc_cluster_id: '- (Optional) The hpc cluster id.'
            id: '- ID of the resource.'
            image_id: '- (Optional) The image ID.'
            instance_charge_type: '- (Optional) The charge type of the instance and volume.'
            instance_name: '- (Optional) The name of the instance.'
            instance_type_id: '- (Optional) The compute type of the instance.'
            key_pair_name: '- (Optional) When you log in to the instance using the SSH key pair, enter the name of the key pair.'
            launch_template_id: '- The launch template id.'
            launch_template_name: '- (Required, ForceNew) The name of the launch template.'
            network_interfaces: '- (Optional) The list of network interfaces. When creating an instance, it is supported to bind auxiliary network cards at the same time. The first one is the primary network card, and the others are secondary network cards.'
            security_enhancement_strategy: '- (Optional) Whether to open the security reinforcement.'
            security_group_ids: '- (Optional) The security group ID associated with the NIC.'
            size: '- (Optional) The size of volume.'
            subnet_id: '- (Optional) The private network subnet ID of the instance, when creating the instance, supports binding the secondary NIC at the same time.'
            suffix_index: '- (Optional) The index of the ordered suffix.'
            unique_suffix: '- (Optional) Indicates whether the ordered suffix is automatically added to Hostname and InstanceName when multiple instances are created.'
            user_data: '- (Optional) Instance custom data. The set custom data must be Base64 encoded, and the size of the custom data before Base64 encoding cannot exceed 16KB.'
            version_description: '- (Optional) The latest version description of the launch template.'
            volume_type: '- (Optional) The type of volume.'
            volumes: '- (Optional) The list of volume of the scaling configuration.'
            vpc_id: '- (Optional) The vpc id.'
            zone_id: '- (Optional) The zone id.'
        importStatements: []
    volcengine_eip_address:
        subCategory: EIP
        description: Provides a resource to manage eip address
        name: volcengine_eip_address
        title: volcengine_eip_address
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 1,
                  "billing_type": "PostPaidByBandwidth",
                  "description": "acc-test",
                  "isp": "ChinaUnicom",
                  "name": "acc-eip",
                  "project_name": "default"
                }
        argumentDocs:
            bandwidth: '- (Optional) The peek bandwidth of the EIP.'
            billing_type: '- (Required) The billing type of the EIP Address. And optional choice contains PostPaidByBandwidth or PostPaidByTraffic or PrePaid.'
            deleted_time: '- The deleted time of the EIP.'
            description: '- (Optional) The description of the EIP.'
            eip_address: '- The ip address of the EIP.'
            expired_time: '- The expired time of the EIP.'
            id: '- ID of the resource.'
            isp: '- (Optional, ForceNew) The ISP of the EIP, the value can be BGP or ChinaMobile or ChinaUnicom or ChinaTelecom or SingleLine_BGP or Static_BGP or Fusion_BGP.'
            key: '- (Required) The Key of Tags.'
            name: '- (Optional) The name of the EIP Address.'
            overdue_time: '- The overdue time of the EIP.'
            period: '- (Optional) The period of the EIP Address, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to Month.This field is only effective when creating a PrePaid Eip or changing the billing_type from PostPaid to PrePaid.'
            project_name: '- (Optional) The ProjectName of the EIP.'
            security_protection_types: '- (Optional, ForceNew) Security protection types for public IP addresses. Parameter - N: Indicates the number of security protection types, currently only supports taking 1. Value: AntiDDoS_Enhanced or left blank.If the value is AntiDDoS_Enhanced, then will create an eip with enhanced protection,(can be added to DDoS native protection (enterprise version) instance). If left blank, it indicates an eip with basic protection.'
            status: '- The status of the EIP.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_eip_associate:
        subCategory: EIP
        description: Provides a resource to manage eip associate
        name: volcengine_eip_associate
        title: volcengine_eip_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allocation_id": "${volcengine_eip_address.foo.id}",
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "instance_type": "EcsInstance"
                }
              references:
                allocation_id: volcengine_eip_address.foo.id
                instance_id: volcengine_ecs_instance.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_eip_address.foo: |-
                    {
                      "billing_type": "PostPaidByTraffic"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allocation_id: '- (Required, ForceNew) The allocation id of the EIP.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance id which be associated to the EIP.'
            instance_type: '- (Required, ForceNew) The type of the associated instance,the value is Nat or NetworkInterface or ClbInstance or EcsInstance or HaVip.'
            private_ip_address: '- (Optional, ForceNew) The private IP address of the instance will be associated to the EIP.'
        importStatements: []
    volcengine_escloud_instance:
        subCategory: ESCLOUD
        description: Provides a resource to manage escloud instance
        name: volcengine_escloud_instance
        title: volcengine_escloud_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_configuration": [
                    {
                      "admin_password": "Password@@",
                      "admin_user_name": "admin",
                      "charge_type": "PostPaid",
                      "configuration_code": "es.standard",
                      "enable_https": true,
                      "enable_pure_master": true,
                      "force_restart_after_scale": false,
                      "instance_name": "acc-test-0",
                      "node_specs_assigns": [
                        {
                          "number": 3,
                          "resource_spec_name": "es.x4.medium",
                          "storage_size": 100,
                          "storage_spec_name": "es.volume.essd.pl0",
                          "type": "Master"
                        },
                        {
                          "number": 2,
                          "resource_spec_name": "es.x4.large",
                          "storage_size": 100,
                          "storage_spec_name": "es.volume.essd.pl0",
                          "type": "Hot"
                        },
                        {
                          "number": 1,
                          "resource_spec_name": "kibana.x2.small",
                          "type": "Kibana"
                        }
                      ],
                      "project_name": "default",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "version": "V6_7",
                      "zone_number": 1
                    }
                  ]
                }
              references:
                instance_configuration.subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "description": "tfdesc",
                      "subnet_name": "acc-test-subnet_new",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            admin_password: '- (Required) The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            admin_user_name: '- (Required, ForceNew) The name of administrator account(should be admin).'
            charge_type: '- (Required, ForceNew) The charge type of ESCloud instance, the value can be PostPaid or PrePaid.'
            configuration_code: '- (Required, ForceNew) Configuration code used for billing.'
            enable_https: '- (Required, ForceNew) Whether Https access is enabled.'
            enable_pure_master: '- (Required, ForceNew) Whether the Master node is independent.'
            force_restart_after_scale: '- (Optional) Whether to force restart when changes are made. If true, it means that the cluster will be forced to restart without paying attention to instance availability. Works only on modified the node_specs_assigns field.'
            id: '- ID of the resource.'
            instance_configuration: '- (Required) The configuration of ESCloud instance.'
            instance_name: '- (Optional) The name of ESCloud instance.'
            maintenance_day: '- (Optional) The maintainable date for the instance. Works only on modified scenes.'
            maintenance_time: '- (Optional) The maintainable time period for the instance. Works only on modified scenes.'
            node_specs_assigns: '- (Required) The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.'
            number: '- (Required) The number of node.'
            project_name: '- (Optional) The project name  to which the ESCloud instance belongs.'
            region_id: '- (Optional) The region ID of ESCloud instance.'
            resource_spec_name: '- (Required) The name of compute resource spec, the value is kibana.x2.small or es.x4.medium or es.x4.large or es.x4.xlarge or es.x2.2xlarge or es.x4.2xlarge or es.x2.3xlarge.'
            storage_size: '- (Optional) The size of storage. Kibana NodeSpecsAssign should not specify this field.'
            storage_spec_name: '- (Optional) The name of storage spec. Kibana NodeSpecsAssign should not specify this field.'
            subnet_id: '- (Required, ForceNew) The ID of subnet, the subnet must belong to the AZ selected.'
            type: '- (Required) The type of node, the value is Master or Hot or Kibana.'
            version: '- (Required, ForceNew) The version of ESCloud instance, the value is V6_7 or V7_10.'
            zone_id: '- (Optional) The available zone ID of ESCloud instance.'
            zone_number: '- (Required, ForceNew) The zone count of the ESCloud instance used.'
        importStatements: []
    volcengine_escloud_instance_v2:
        subCategory: ESCLOUD
        description: Provides a resource to manage escloud instance v2
        name: volcengine_escloud_instance_v2
        title: volcengine_escloud_instance_v2
        examples:
            - name: foo
              manifest: |-
                {
                  "admin_password": "Password@@123",
                  "auto_renew": false,
                  "charge_type": "PostPaid",
                  "configuration_code": "es.standard",
                  "deletion_protection": false,
                  "enable_https": false,
                  "enable_pure_master": true,
                  "instance_name": "acc-test-escloud-instance",
                  "network_specs": [
                    {
                      "bandwidth": 1,
                      "is_open": true,
                      "spec_name": "es.eip.bgp_fixed_bandwidth",
                      "type": "Elasticsearch"
                    },
                    {
                      "bandwidth": 1,
                      "is_open": true,
                      "spec_name": "es.eip.bgp_fixed_bandwidth",
                      "type": "Kibana"
                    }
                  ],
                  "node_specs_assigns": [
                    {
                      "number": 3,
                      "resource_spec_name": "es.x2.medium",
                      "storage_size": 20,
                      "storage_spec_name": "es.volume.essd.pl0",
                      "type": "Master"
                    },
                    {
                      "extra_performance": [
                        {
                          "throughput": 65
                        }
                      ],
                      "number": 6,
                      "resource_spec_name": "es.x2.medium",
                      "storage_size": 500,
                      "storage_spec_name": "es.volume.essd.flexpl-standard",
                      "type": "Hot"
                    },
                    {
                      "number": 1,
                      "resource_spec_name": "kibana.x2.small",
                      "storage_size": 0,
                      "storage_spec_name": "",
                      "type": "Kibana"
                    }
                  ],
                  "period": 1,
                  "project_name": "default",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "version": "V7_10",
                  "zone_ids": [
                    "${data.volcengine_zones.foo.zones[0].id}",
                    "${data.volcengine_zones.foo.zones[1].id}",
                    "${data.volcengine_zones.foo.zones[2].id}"
                  ]
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "description": "tfdesc",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            admin_password: '- (Required) The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            auto_renew: '- (Optional) Whether to automatically renew in prepaid scenarios. Default is false.'
            bandwidth: '- (Required, ForceNew) The bandwidth of the eip. Unit: Mbps.'
            cerebro_private_domain: '- The cerebro private domain of instance.'
            cerebro_public_domain: '- The cerebro public domain of instance.'
            charge_type: '- (Required) The charge type of ESCloud instance, valid values: PostPaid, PrePaid.'
            configuration_code: '- (Required, ForceNew) Configuration code used for billing.'
            deletion_protection: '- (Optional) Whether enable deletion protection for ESCloud instance. Default is false.'
            enable_https: '- (Required, ForceNew) Whether Https access is enabled.'
            enable_pure_master: '- (Optional, ForceNew) Whether the Master node is independent.'
            es_eip: '- The eip address of instance.'
            es_eip_id: '- The eip id associated with the instance.'
            es_private_domain: '- The es private domain of instance.'
            es_private_endpoint: '- The es private endpoint of instance.'
            es_private_ip_whitelist: '- The whitelist of es private ip.'
            es_public_domain: '- The es public domain of instance.'
            es_public_endpoint: '- The es public endpoint of instance.'
            es_public_ip_whitelist: '- The whitelist of es public ip.'
            extra_performance: '- (Optional) The extra performance of FlexPL storage spec.'
            id: '- ID of the resource.'
            instance_name: '- (Required) The name of ESCloud instance.'
            is_open: '- (Required, ForceNew) Whether the eip is opened.'
            key: '- (Required) The Key of Tags.'
            kibana_eip: '- The eip address of kibana.'
            kibana_eip_id: '- The eip id associated with kibana.'
            kibana_private_domain: '- The kibana private domain of instance.'
            kibana_private_ip_whitelist: '- The whitelist of kibana private ip.'
            kibana_public_domain: '- The kibana public domain of instance.'
            kibana_public_ip_whitelist: '- The whitelist of kibana public ip.'
            main_zone_id: '- The main zone id of instance.'
            maintenance_day: '- (Optional) The maintainable day for the instance. Valid values: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY. Works only on modified scenes.'
            maintenance_time: '- (Optional) The maintainable time period for the instance. Works only on modified scenes.'
            network_specs: '- (Optional, ForceNew) The public network config of the ESCloud instance.'
            node_specs_assigns: '- (Required) The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.'
            number: '- (Required) The number of node.'
            period: '- (Optional) Purchase duration in prepaid scenarios. Unit: Monthly.'
            project_name: '- (Optional) The project name to which the ESCloud instance belongs.'
            resource_spec_name: '- (Required) The name of compute resource spec.'
            spec_name: '- (Required, ForceNew) The spec name of public network.'
            status: '- The status of instance.'
            storage_size: '- (Required) The size of storage. Unit: GiB. the adjustment step size is 10GiB. Default is 100 GiB. Kibana NodeSpecsAssign should specify this field to 0.'
            storage_spec_name: '- (Required) The name of storage spec. Kibana NodeSpecsAssign should specify this field to ``.'
            subnet_id: '- (Required, ForceNew) The id of subnet, the subnet must belong to the AZ selected.'
            tags: '- (Optional) Tags.'
            throughput: |-
                - (Required) When your data node chooses to use FlexPL storage type and the storage specification configuration is 500GiB or above, it supports purchasing bandwidth packages to increase disk bandwidth.
                The unit is MiB, and the adjustment step size is 10MiB.
            type: '- (Required, ForceNew) The type of public network, valid values: Elasticsearch, Kibana.'
            value: '- (Required) The Value of Tags.'
            version: '- (Required, ForceNew) The version of instance. When creating ESCloud instance, the valid value is V6_7 or V7_10. When creating OpenSearch instance, the valid value is OPEN_SEARCH_2_9.'
            zone_ids: |-
                - (Required, ForceNew) The zone id of the ESCloud instance. Support specifying multiple availability zones.
                The first zone id is the primary availability zone, while the rest are backup availability zones.
        importStatements: []
    volcengine_escloud_ip_white_list:
        subCategory: ESCLOUD
        description: Provides a resource to manage escloud ip white list
        name: volcengine_escloud_ip_white_list
        title: volcengine_escloud_ip_white_list
        examples:
            - name: foo
              manifest: |-
                {
                  "component": "es",
                  "instance_id": "${volcengine_escloud_instance_v2.foo.id}",
                  "ip_list": [
                    "172.16.0.10",
                    "172.16.0.11",
                    "172.16.0.12"
                  ],
                  "type": "public"
                }
              references:
                instance_id: volcengine_escloud_instance_v2.foo.id
              dependencies:
                volcengine_escloud_instance_v2.foo: |-
                    {
                      "admin_password": "Password@@123",
                      "auto_renew": false,
                      "charge_type": "PostPaid",
                      "configuration_code": "es.standard",
                      "deletion_protection": false,
                      "enable_https": false,
                      "enable_pure_master": true,
                      "instance_name": "acc-test-escloud-instance",
                      "network_specs": [
                        {
                          "bandwidth": 1,
                          "is_open": true,
                          "spec_name": "es.eip.bgp_fixed_bandwidth",
                          "type": "Elasticsearch"
                        },
                        {
                          "bandwidth": 1,
                          "is_open": true,
                          "spec_name": "es.eip.bgp_fixed_bandwidth",
                          "type": "Kibana"
                        }
                      ],
                      "node_specs_assigns": [
                        {
                          "number": 3,
                          "resource_spec_name": "es.x2.medium",
                          "storage_size": 20,
                          "storage_spec_name": "es.volume.essd.pl0",
                          "type": "Master"
                        },
                        {
                          "extra_performance": [
                            {
                              "throughput": 65
                            }
                          ],
                          "number": 6,
                          "resource_spec_name": "es.x2.medium",
                          "storage_size": 500,
                          "storage_spec_name": "es.volume.essd.flexpl-standard",
                          "type": "Hot"
                        },
                        {
                          "number": 1,
                          "resource_spec_name": "kibana.x2.small",
                          "storage_size": 0,
                          "storage_spec_name": "",
                          "type": "Kibana"
                        }
                      ],
                      "period": 1,
                      "project_name": "default",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "version": "V7_10",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}",
                        "${data.volcengine_zones.foo.zones[1].id}",
                        "${data.volcengine_zones.foo.zones[2].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "description": "tfdesc",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            component: '- (Required, ForceNew) The component of the ip white list. Valid values: es, kibana.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the EsCloud instance.'
            ip_list: '- (Required) The ip list of the ip white list.'
            type: '- (Required, ForceNew) The type of the ip white list. Valid values: private, public.'
        importStatements: []
    volcengine_financial_relation:
        subCategory: FINANCIAL_RELATION
        description: Provides a resource to manage financial relation
        name: volcengine_financial_relation
        title: volcengine_financial_relation
        examples:
            - name: foo
              manifest: |-
                {
                  "account_alias": "acc-test-financial",
                  "auth_list": [
                    1,
                    2,
                    3
                  ],
                  "relation": 4,
                  "sub_account_id": 210026
                }
        argumentDocs:
            account_alias: '- (Optional, ForceNew) The display name of the sub account.'
            auth_list: '- (Optional) The authorization list of financial management. This field is valid and required when the relation is 4. Valid value range is 1-5.'
            id: '- ID of the resource.'
            relation: '- (Optional, ForceNew) The relation of the financial. Valid values: 1, 4. 1 means financial custody, 4 means financial management.'
            relation_id: '- The id of the financial relation.'
            status: '- The status of the financial relation.'
            sub_account_id: '- (Required, ForceNew) The sub account id.'
        importStatements: []
    volcengine_ha_vip:
        subCategory: VPC
        description: Provides a resource to manage ha vip
        name: volcengine_ha_vip
        title: volcengine_ha_vip
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "ha_vip_name": "acc-test-ha-vip",
                  "subnet_id": "${volcengine_subnet.foo.id}"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "billing_type": "PostPaidByTraffic"
                    }
                volcengine_eip_associate.foo: |-
                    {
                      "allocation_id": "${volcengine_eip_address.foo.id}",
                      "instance_id": "${volcengine_ha_vip.foo.id}",
                      "instance_type": "HaVip"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            associated_eip_address: '- The associated eip address of the Ha Vip.'
            associated_eip_id: '- The associated eip id of the Ha Vip.'
            associated_instance_ids: '- The associated instance ids of the Ha Vip.'
            associated_instance_type: '- The associated instance type of the Ha Vip.'
            created_at: '- The create time of the Ha Vip.'
            description: '- (Optional) The description of the Ha Vip.'
            ha_vip_name: '- (Optional) The name of the Ha Vip.'
            id: '- ID of the resource.'
            ip_address: '- (Optional, ForceNew) The ip address of the Ha Vip.'
            master_instance_id: '- The master instance id of the Ha Vip.'
            project_name: '- The project name of the Ha Vip.'
            status: '- The status of the Ha Vip.'
            subnet_id: '- (Required, ForceNew) The subnet id of the Ha Vip.'
            updated_at: '- The update time of the Ha Vip.'
            vpc_id: '- The vpc id of the Ha Vip.'
        importStatements: []
    volcengine_ha_vip_associate:
        subCategory: VPC
        description: Provides a resource to manage ha vip associate
        name: volcengine_ha_vip_associate
        title: volcengine_ha_vip_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "ha_vip_id": "${volcengine_ha_vip.foo.id}",
                  "instance_id": "${volcengine_network_interface.foo.id}",
                  "instance_type": "NetworkInterface"
                }
              references:
                ha_vip_id: volcengine_ha_vip.foo.id
                instance_id: volcengine_network_interface.foo.id
              dependencies:
                volcengine_ha_vip.foo: |-
                    {
                      "description": "acc-test",
                      "ha_vip_name": "acc-test-ha-vip",
                      "ip_address": "172.16.0.5",
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_network_interface.foo: |-
                    {
                      "description": "acc-test",
                      "network_interface_name": "acc-test-eni",
                      "port_security_enabled": false,
                      "primary_ip_address": "172.16.0.253",
                      "private_ip_address": [
                        "172.16.0.2"
                      ],
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-sg",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            ha_vip_id: '- (Required, ForceNew) The id of the Ha Vip.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the associated instance.'
            instance_type: '- (Optional, ForceNew) The type of the associated instance. Valid values: EcsInstance, NetworkInterface.'
        importStatements: []
    volcengine_iam_access_key:
        subCategory: IAM
        description: Provides a resource to manage iam access key
        name: volcengine_iam_access_key
        title: volcengine_iam_access_key
        examples:
            - name: foo
              manifest: |-
                {
                  "secret_file": "./sk",
                  "status": "active",
                  "user_name": "${volcengine_iam_user.foo.user_name}"
                }
              references:
                user_name: volcengine_iam_user.foo.user_name
              dependencies:
                volcengine_iam_user.foo: |-
                    {
                      "description": "acc-test",
                      "display_name": "name",
                      "user_name": "acc-test-user"
                    }
        argumentDocs:
            create_date: '- The create date of the access key.'
            encrypted_secret: '- The encrypted secret of the access key by pgp key, base64 encoded.'
            id: '- ID of the resource.'
            key_fingerprint: '- The key fingerprint of the encrypted secret.'
            pgp_key: '- (Optional, ForceNew) Either a base-64 encoded PGP public key, or a keybase username in the form keybase:some_person_that_exists.'
            secret: '- The secret of the access key.'
            secret_file: '- (Optional, ForceNew) The file to save the access id and secret. Strongly suggest you to specified it when you creating access key, otherwise, you wouldn''t get its secret ever.'
            status: '- (Optional) The status of the access key, Optional choice contains active or inactive.'
            user_name: '- (Optional, ForceNew) The user name.'
        importStatements: []
    volcengine_iam_login_profile:
        subCategory: IAM
        description: Provides a resource to manage iam login profile
        name: volcengine_iam_login_profile
        title: volcengine_iam_login_profile
        examples:
            - name: foo
              manifest: |-
                {
                  "login_allowed": true,
                  "password": "93f0cb0614Aab12",
                  "password_reset_required": false,
                  "user_name": "${volcengine_iam_user.foo.user_name}"
                }
              references:
                user_name: volcengine_iam_user.foo.user_name
              dependencies:
                volcengine_iam_user.foo: |-
                    {
                      "description": "acc-test",
                      "display_name": "name",
                      "user_name": "acc-test-user"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            login_allowed: '- (Optional) The flag of login allowed.'
            password: '- (Required) The password.'
            password_reset_required: '- (Optional) Is required reset password when next time login in.'
            user_name: '- (Required, ForceNew) The user name.'
        importStatements: []
    volcengine_iam_policy:
        subCategory: IAM
        description: Provides a resource to manage iam policy
        name: volcengine_iam_policy
        title: volcengine_iam_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                  "policy_name": "acc-test-policy"
                }
        argumentDocs:
            create_date: '- The create time of the Policy.'
            description: '- (Optional) The description of the Policy.'
            id: '- ID of the resource.'
            policy_document: '- (Required) The document of the Policy.'
            policy_name: '- (Required) The name of the Policy.'
            policy_trn: '- The resource name of the Policy.'
            policy_type: '- The type of the Policy.'
            update_date: '- The update time of the Policy.'
        importStatements: []
    volcengine_iam_role:
        subCategory: IAM
        description: Provides a resource to manage iam role
        name: volcengine_iam_role
        title: volcengine_iam_role
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "display_name": "acc-test",
                  "max_session_duration": 3600,
                  "role_name": "acc-test-role",
                  "trust_policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"auto_scaling\"]}}]}"
                }
        argumentDocs:
            description: '- (Optional) The description of the Role.'
            display_name: '- (Required) The display name of the Role.'
            id: '- ID of the resource.'
            max_session_duration: '- (Optional) The max session duration of the Role.'
            role_name: '- (Required, ForceNew) The name of the Role.'
            trn: '- The resource name of the Role.'
            trust_policy_document: '- (Required) The trust policy document of the Role.'
        importStatements: []
    volcengine_iam_role_attachment:
        subCategory: ECS
        description: Provides a resource to manage iam role attachment
        name: volcengine_iam_role_attachment
        title: volcengine_iam_role_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "iam_role_name": "${volcengine_iam_role.foo.id}",
                  "instance_id": "${volcengine_ecs_instance.foo.id}"
                }
              references:
                iam_role_name: volcengine_iam_role.foo.id
                instance_id: volcengine_ecs_instance.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "data_volumes": [
                        {
                          "delete_with_instance": true,
                          "size": 50,
                          "volume_type": "ESSD_PL0"
                        }
                      ],
                      "description": "acc-test",
                      "host_name": "tf-acc-test",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1ie.large",
                      "password": "93f0cb0614Aab12",
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_iam_role.foo: |-
                    {
                      "description": "acc-test",
                      "display_name": "acc-test",
                      "max_session_duration": 36000,
                      "role_name": "acc-test-role",
                      "trust_policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"ecs\"]}}]}"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            iam_role_name: '- (Required, ForceNew) The name of the iam role.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the ecs instance.'
        importStatements: []
    volcengine_iam_role_policy_attachment:
        subCategory: IAM
        description: Provides a resource to manage iam role policy attachment
        name: volcengine_iam_role_policy_attachment
        title: volcengine_iam_role_policy_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "policy_name": "${volcengine_iam_policy.policy.id}",
                  "policy_type": "${volcengine_iam_policy.policy.policy_type}",
                  "role_name": "${volcengine_iam_role.role.id}"
                }
              references:
                policy_name: volcengine_iam_policy.policy.id
                policy_type: volcengine_iam_policy.policy.policy_type
                role_name: volcengine_iam_role.role.id
              dependencies:
                volcengine_iam_policy.policy: |-
                    {
                      "description": "created by terraform 1",
                      "policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                      "policy_name": "TerraformResourceTest1"
                    }
                volcengine_iam_role.role: |-
                    {
                      "description": "created by terraform",
                      "display_name": "terraform role",
                      "max_session_duration": 43200,
                      "role_name": "TerraformTestRole",
                      "trust_policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"auto_scaling\"]}}]}"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            policy_name: '- (Required, ForceNew) The name of the Policy.'
            policy_type: '- (Required, ForceNew) The type of the Policy.'
            role_name: '- (Required, ForceNew) The name of the Role.'
        importStatements: []
    volcengine_iam_saml_provider:
        subCategory: IAM
        description: Provides a resource to manage iam saml provider
        name: volcengine_iam_saml_provider
        title: volcengine_iam_saml_provider
        examples:
            - name: foo
              manifest: |-
                {
                  "encoded_saml_metadata_document": "your document",
                  "saml_provider_name": "terraform",
                  "sso_type": 2,
                  "status": 1
                }
        argumentDocs:
            create_date: '- Identity provider creation time, such as 20150123T123318Z.'
            description: '- (Optional) The description of the SAML provider.'
            encoded_saml_metadata_document: '- (Required) Metadata document, encoded in Base64.'
            id: '- ID of the resource.'
            saml_provider_name: '- (Required, ForceNew) The name of the SAML provider.'
            sso_type: '- (Required) SSO types, 1. Role-based SSO, 2. User-based SSO.'
            status: '- (Optional) User SSO status, 1. Enabled, 2. Disable other console login methods after enabling, 3. Disabled, is a required field when creating user SSO.'
            trn: '- The format for the resource name of an identity provider is trn:iam::${accountID}:saml-provider/{$SAMLProviderName}.'
            update_date: '- Identity provider update time, such as: 20150123T123318Z.'
        importStatements: []
    volcengine_iam_user:
        subCategory: IAM
        description: Provides a resource to manage iam user
        name: volcengine_iam_user
        title: volcengine_iam_user
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "test",
                  "display_name": "name",
                  "user_name": "tf-test"
                }
        argumentDocs:
            account_id: '- Main account ID to which the sub-user belongs.'
            create_date: '- The create date of the user.'
            description: '- (Optional) The description of the user.'
            display_name: '- (Optional) The display name of the user.'
            email: '- (Optional) The email of the user.'
            email_is_verify: '- Whether the email has been verified.'
            id: '- ID of the resource.'
            mobile_phone: '- (Optional) The mobile phone of the user.'
            mobile_phone_is_verify: '- Whether the phone number has been verified.'
            trn: '- The trn of the user.'
            update_date: '- The update date of the user.'
            user_id: '- The id of the user.'
            user_name: '- (Required) The name of the user.'
        importStatements: []
    volcengine_iam_user_group:
        subCategory: IAM
        description: Provides a resource to manage iam user group
        name: volcengine_iam_user_group
        title: volcengine_iam_user_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "display_name": "acctest",
                  "user_group_name": "acc-test-group"
                }
        argumentDocs:
            description: '- (Optional) The description of the user group.'
            display_name: '- (Optional) The display name of the user group.'
            id: '- ID of the resource.'
            user_group_name: '- (Required, ForceNew) The name of the user group.'
        importStatements: []
    volcengine_iam_user_group_attachment:
        subCategory: IAM
        description: Provides a resource to manage iam user group attachment
        name: volcengine_iam_user_group_attachment
        title: volcengine_iam_user_group_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "user_group_name": "${volcengine_iam_user_group.foo.user_group_name}",
                  "user_name": "${volcengine_iam_user.foo.user_name}"
                }
              references:
                user_group_name: volcengine_iam_user_group.foo.user_group_name
                user_name: volcengine_iam_user.foo.user_name
              dependencies:
                volcengine_iam_user.foo: |-
                    {
                      "description": "acc test",
                      "display_name": "name",
                      "user_name": "acc-test-user"
                    }
                volcengine_iam_user_group.foo: |-
                    {
                      "description": "acc-test",
                      "display_name": "acctest",
                      "user_group_name": "acc-test-group"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            user_group_name: '- (Required, ForceNew) The name of the user group.'
            user_name: '- (Required, ForceNew) The name of the user.'
        importStatements: []
    volcengine_iam_user_group_policy_attachment:
        subCategory: IAM
        description: Provides a resource to manage iam user group policy attachment
        name: volcengine_iam_user_group_policy_attachment
        title: volcengine_iam_user_group_policy_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "policy_name": "${volcengine_iam_policy.foo.policy_name}",
                  "policy_type": "Custom",
                  "user_group_name": "${volcengine_iam_user_group.foo.user_group_name}"
                }
              references:
                policy_name: volcengine_iam_policy.foo.policy_name
                user_group_name: volcengine_iam_user_group.foo.user_group_name
              dependencies:
                volcengine_iam_policy.foo: |-
                    {
                      "description": "acc-test",
                      "policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                      "policy_name": "acc-test-policy"
                    }
                volcengine_iam_user_group.foo: |-
                    {
                      "description": "acc-test",
                      "display_name": "acc-test",
                      "user_group_name": "acc-test-group"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            policy_name: '- (Required, ForceNew) The policy name.'
            policy_type: '- (Required, ForceNew) Strategy types, System strategy, Custom strategy.'
            user_group_name: '- (Required, ForceNew) The user group name.'
        importStatements: []
    volcengine_iam_user_policy_attachment:
        subCategory: IAM
        description: Provides a resource to manage iam user policy attachment
        name: volcengine_iam_user_policy_attachment
        title: volcengine_iam_user_policy_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "policy_name": "${volcengine_iam_policy.policy.policy_name}",
                  "policy_type": "${volcengine_iam_policy.policy.policy_type}",
                  "user_name": "${volcengine_iam_user.user.user_name}"
                }
              references:
                policy_name: volcengine_iam_policy.policy.policy_name
                policy_type: volcengine_iam_policy.policy.policy_type
                user_name: volcengine_iam_user.user.user_name
              dependencies:
                volcengine_iam_policy.policy: |-
                    {
                      "description": "created by terraform 1",
                      "policy_document": "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
                      "policy_name": "TerraformResourceTest1"
                    }
                volcengine_iam_user.user: |-
                    {
                      "description": "test",
                      "user_name": "TfTest"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            policy_name: '- (Required, ForceNew) The name of the Policy.'
            policy_type: '- (Required, ForceNew) The type of the Policy.'
            user_name: '- (Required, ForceNew) The name of the user.'
        importStatements: []
    volcengine_image:
        subCategory: ECS
        description: Provides a resource to manage image
        name: volcengine_image
        title: volcengine_image
        examples:
            - name: foo
              manifest: |-
                {
                  "create_whole_image": false,
                  "description": "acc-test",
                  "image_name": "acc-test-image",
                  "instance_id": "i-ydi2q1s7wgqc6ild****",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            architecture: '- The architecture of Image.'
            boot_mode: '- (Optional) The boot mode of the custom image. Valid values: BIOS, UEFI. This field is only effective when modifying the image.'
            create_whole_image: '- (Optional) Whether to create whole image. Default is false. This field is only effective when creating a new custom image.'
            created_at: '- The create time of Image.'
            description: '- (Optional) The description of the custom image.'
            id: '- ID of the resource.'
            image_name: '- (Required) The name of the custom image.'
            instance_id: '- (Optional, ForceNew) The instance id of the custom image. Only one of instance_id, snapshot_id, snapshot_group_id can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            is_support_cloud_init: '- Whether the Image support cloud-init.'
            key: '- (Required) The Key of Tags.'
            os_name: '- The name of Image operating system.'
            os_type: '- The operating system type of Image.'
            platform: '- The platform of Image.'
            platform_version: '- The platform version of Image.'
            project_name: '- (Optional) The project name of the custom image.'
            share_status: '- The share mode of Image.'
            size: '- The size(GiB) of Image.'
            snapshot_group_id: '- (Optional, ForceNew) The snapshot group id of the custom image. Only one of instance_id, snapshot_id, snapshot_group_id can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            snapshot_id: '- (Optional, ForceNew) The snapshot id of the custom image. Only one of instance_id, snapshot_id, snapshot_group_id can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            status: '- The status of Image.'
            tags: '- (Optional) Tags.'
            updated_at: '- The update time of Image.'
            value: '- (Required) The Value of Tags.'
            visibility: '- The visibility of Image.'
        importStatements: []
    volcengine_image_import:
        subCategory: ECS
        description: Provides a resource to manage image import
        name: volcengine_image_import
        title: volcengine_image_import
        examples:
            - name: foo
              manifest: |-
                {
                  "boot_mode": "UEFI",
                  "description": "acc-test",
                  "image_name": "acc-test-image",
                  "platform": "CentOS",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "url": "https://*****_system.qcow2"
                }
        argumentDocs:
            architecture: '- (Optional, ForceNew) The architecture of the custom image. Valid values: amd64, arm64.'
            boot_mode: '- (Optional) The boot mode of the custom image. Valid values: BIOS, UEFI.'
            created_at: '- The create time of Image.'
            description: '- (Optional) The description of the custom image.'
            id: '- ID of the resource.'
            image_name: '- (Required) The name of the custom image.'
            is_support_cloud_init: '- Whether the Image support cloud-init.'
            key: '- (Required) The Key of Tags.'
            license_type: '- (Optional, ForceNew) The license type of the custom image. Valid values: VolcanoEngine.'
            os_name: '- The name of Image operating system.'
            os_type: '- (Optional, ForceNew) The os type of the custom image. Valid values: linux, Windows.'
            platform: '- (Required, ForceNew) The platform of the custom image. Valid values: CentOS, Debian, veLinux, Windows Server, Fedora, OpenSUSE, Ubuntu, Rocky Linux, AlmaLinux.'
            platform_version: '- (Optional, ForceNew) The platform version of the custom image.'
            project_name: '- (Optional) The project name of the custom image.'
            share_status: '- The share mode of Image.'
            size: '- The size(GiB) of Image.'
            status: '- The status of Image.'
            tags: '- (Optional) Tags.'
            updated_at: '- The update time of Image.'
            url: '- (Required, ForceNew) The url of the custom image in tos bucket.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            value: '- (Required) The Value of Tags.'
            visibility: '- The visibility of Image.'
        importStatements: []
    volcengine_image_share_permission:
        subCategory: ECS
        description: Provides a resource to manage image share permission
        name: volcengine_image_share_permission
        title: volcengine_image_share_permission
        examples:
            - name: foo
              manifest: |-
                {
                  "account_id": "21000*****",
                  "image_id": "${volcengine_image.foo.id}"
                }
              references:
                image_id: volcengine_image.foo.id
              dependencies:
                volcengine_image.foo: |-
                    {
                      "create_whole_image": false,
                      "description": "acc-test",
                      "image_name": "acc-test-image",
                      "instance_id": "i-ydi2q1s7wgqc6ild****",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
        argumentDocs:
            account_id: '- (Required, ForceNew) The share account id of the image.'
            id: '- ID of the resource.'
            image_id: '- (Required, ForceNew) The id of the image.'
        importStatements: []
    volcengine_kafka_group:
        subCategory: KAFKA
        description: Provides a resource to manage kafka group
        name: volcengine_kafka_group
        title: volcengine_kafka_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test",
                  "group_id": "acc-test-group",
                  "instance_id": "${volcengine_kafka_instance.foo.id}"
                }
              references:
                instance_id: volcengine_kafka_instance.foo.id
              dependencies:
                volcengine_kafka_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "compute_spec": "kafka.20xrate.hw",
                      "instance_description": "tf-test",
                      "instance_name": "acc-test-kafka",
                      "parameters": [
                        {
                          "parameter_name": "MessageMaxByte",
                          "parameter_value": "12"
                        },
                        {
                          "parameter_name": "LogRetentionHours",
                          "parameter_value": "70"
                        }
                      ],
                      "partition_number": 350,
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "user_name": "tf-user",
                      "user_password": "tf-pass!@q1",
                      "version": "2.2.2"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            description: '- (Optional) The description of kafka group.'
            group_id: '- (Required, ForceNew) The id of kafka group.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance id of kafka group.'
            state: '- The state of kafka group.'
        importStatements: []
    volcengine_kafka_instance:
        subCategory: KAFKA
        description: Provides a resource to manage kafka instance
        name: volcengine_kafka_instance
        title: volcengine_kafka_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_type": "PostPaid",
                  "compute_spec": "kafka.20xrate.hw",
                  "instance_description": "tf-test",
                  "instance_name": "acc-test-kafka",
                  "parameters": [
                    {
                      "parameter_name": "MessageMaxByte",
                      "parameter_value": "12"
                    },
                    {
                      "parameter_name": "LogRetentionHours",
                      "parameter_value": "70"
                    },
                    {
                      "parameter_name": "MessageTimestampType",
                      "parameter_value": "CreateTime"
                    },
                    {
                      "parameter_name": "OffsetRetentionMinutes",
                      "parameter_value": "10080"
                    },
                    {
                      "parameter_name": "AutoDeleteGroup",
                      "parameter_value": "false"
                    }
                  ],
                  "partition_number": 350,
                  "project_name": "default",
                  "storage_space": 300,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "user_name": "tf-user",
                  "user_password": "tf-pass!@q1",
                  "version": "2.2.2"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            auto_renew: '- (Optional) The auto renew flag of instance. Only effective when instance_charge_type is PrePaid. Default is false.'
            charge_type: '- (Required) The charge type of instance, the value can be PrePaid or PostPaid.'
            compute_spec: '- (Required) The compute spec of instance.'
            id: '- ID of the resource.'
            instance_description: '- (Optional) The description of instance.'
            instance_name: '- (Optional) The name of instance.'
            key: '- (Required) The Key of Tags.'
            need_rebalance: '- (Optional) Whether enable rebalance. Only effected in modify when compute_spec field is changed.'
            parameter_name: '- (Required) Parameter name.'
            parameter_value: '- (Required) Parameter value.'
            parameters: '- (Optional) Parameter of the instance.'
            partition_number: '- (Optional) The partition number of instance.'
            period: '- (Optional) The period of instance. Only effective when instance_charge_type is PrePaid. Unit is Month.'
            project_name: '- (Optional) The project name of instance.'
            rebalance_time: '- (Optional) The rebalance time.'
            storage_space: '- (Optional) The storage space of instance.'
            storage_type: '- (Optional, ForceNew) The storage type of instance. The value can be ESSD_FlexPL or ESSD_PL0.'
            subnet_id: '- (Required, ForceNew) The subnet id of instance.'
            tags: '- (Optional) The tags of instance.'
            user_name: '- (Required, ForceNew) The user name of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            user_password: '- (Required, ForceNew) The user password of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            value: '- (Required) The Value of Tags.'
            version: '- (Required, ForceNew) The version of instance, the value can be 2.2.2 or 2.8.2.'
        importStatements: []
    volcengine_kafka_public_address:
        subCategory: KAFKA
        description: Provides a resource to manage kafka public address
        name: volcengine_kafka_public_address
        title: volcengine_kafka_public_address
        examples:
            - name: foo
              manifest: |-
                {
                  "eip_id": "${volcengine_eip_address.foo.id}",
                  "instance_id": "${volcengine_kafka_instance.foo.id}"
                }
              references:
                eip_id: volcengine_eip_address.foo.id
                instance_id: volcengine_kafka_instance.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "tf-test",
                      "isp": "BGP",
                      "name": "acc-test-eip",
                      "project_name": "default"
                    }
                volcengine_kafka_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "compute_spec": "kafka.20xrate.hw",
                      "instance_description": "tf-test",
                      "instance_name": "acc-test-kafka",
                      "parameters": [
                        {
                          "parameter_name": "MessageMaxByte",
                          "parameter_value": "12"
                        },
                        {
                          "parameter_name": "LogRetentionHours",
                          "parameter_value": "70"
                        }
                      ],
                      "partition_number": 350,
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "user_name": "tf-user",
                      "user_password": "tf-pass!@q1",
                      "version": "2.2.2"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_id: '- (Required, ForceNew) The id of eip.'
            endpoint_type: '- The endpoint type of instance.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of kafka instance.'
            network_type: '- The network type of instance.'
            public_endpoint: '- The public endpoint of instance.'
        importStatements: []
    volcengine_kafka_sasl_user:
        subCategory: KAFKA
        description: Provides a resource to manage kafka sasl user
        name: volcengine_kafka_sasl_user
        title: volcengine_kafka_sasl_user
        examples:
            - name: foo
              manifest: |-
                {
                  "all_authority": true,
                  "description": "tf-test",
                  "instance_id": "${volcengine_kafka_instance.foo.id}",
                  "password_type": "Scram",
                  "user_name": "acc-test-user",
                  "user_password": "suqsnis123!"
                }
              references:
                instance_id: volcengine_kafka_instance.foo.id
              dependencies:
                volcengine_kafka_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "compute_spec": "kafka.20xrate.hw",
                      "instance_description": "tf-test",
                      "instance_name": "acc-test-kafka",
                      "parameters": [
                        {
                          "parameter_name": "MessageMaxByte",
                          "parameter_value": "12"
                        },
                        {
                          "parameter_name": "LogRetentionHours",
                          "parameter_value": "70"
                        }
                      ],
                      "partition_number": 350,
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "user_name": "tf-user",
                      "user_password": "tf-pass!@q1",
                      "version": "2.2.2"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            all_authority: '- (Optional) Whether this user has read and write permissions for all topics. Default is true.'
            description: '- (Optional, ForceNew) The description of user.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of instance.'
            password_type: '- (Optional, ForceNew) The type of password. Valid values are Scram and Plain. Default is Plain.'
            user_name: '- (Required, ForceNew) The name of user.'
            user_password: '- (Required, ForceNew) The password of user.'
        importStatements: []
    volcengine_kafka_topic:
        subCategory: KAFKA
        description: Provides a resource to manage kafka topic
        name: volcengine_kafka_topic
        title: volcengine_kafka_topic
        examples:
            - name: foo
              manifest: |-
                {
                  "access_policies": [
                    {
                      "access_policy": "Pub",
                      "user_name": "${volcengine_kafka_sasl_user.foo.user_name}"
                    }
                  ],
                  "all_authority": false,
                  "description": "tf-test",
                  "instance_id": "${volcengine_kafka_instance.foo.id}",
                  "parameters": [
                    {
                      "log_retention_hours": 96,
                      "message_max_byte": 10,
                      "min_insync_replica_number": 2
                    }
                  ],
                  "partition_number": 15,
                  "replica_number": 3,
                  "topic_name": "acc-test-topic"
                }
              references:
                access_policies.user_name: volcengine_kafka_sasl_user.foo.user_name
                instance_id: volcengine_kafka_instance.foo.id
              dependencies:
                volcengine_kafka_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "compute_spec": "kafka.20xrate.hw",
                      "instance_description": "tf-test",
                      "instance_name": "acc-test-kafka",
                      "parameters": [
                        {
                          "parameter_name": "MessageMaxByte",
                          "parameter_value": "12"
                        },
                        {
                          "parameter_name": "LogRetentionHours",
                          "parameter_value": "70"
                        }
                      ],
                      "partition_number": 350,
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "user_name": "tf-user",
                      "user_password": "tf-pass!@q1",
                      "version": "2.2.2"
                    }
                volcengine_kafka_sasl_user.foo: |-
                    {
                      "all_authority": true,
                      "description": "tf-test",
                      "instance_id": "${volcengine_kafka_instance.foo.id}",
                      "password_type": "Scram",
                      "user_name": "acc-test-user",
                      "user_password": "suqsnis123!"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            access_policies: '- (Optional) The access policies info of the kafka topic. This field only valid when the value of the AllAuthority is false.'
            access_policy: '- (Required) The access policy of SASL user. Valid values: PubSub, Pub, Sub.'
            all_authority: '- (Optional) Whether the kafka topic is configured to be accessible by all users. Default: true.'
            description: '- (Optional) The description of the kafka topic.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance id of the kafka topic.'
            log_retention_hours: '- (Optional) The retention hours of log. Unit: hour. Valid values: 0-2160. Default is 72.'
            message_max_byte: '- (Optional) The max byte of message. Unit: MB. Valid values: 1-12. Default is 10.'
            min_insync_replica_number: '- (Optional) The min number of sync replica. The default value is the replica number minus 1.'
            parameters: '- (Optional) The parameters of the kafka topic.'
            partition_number: '- (Required) The number of partition in kafka topic. The value range in 1-300. This field can only be adjusted up but not down.'
            replica_number: '- (Optional, ForceNew) The number of replica in kafka topic. The value can be 2 or 3. Default is 3.'
            topic_name: '- (Required, ForceNew) The name of the kafka topic.'
            user_name: '- (Required) The name of SASL user.'
        importStatements: []
    volcengine_listener:
        subCategory: CLB
        description: Provides a resource to manage listener
        name: volcengine_listener
        title: volcengine_listener
        examples:
            - name: foo
              manifest: |-
                {
                  "enabled": "on",
                  "health_check": [
                    {
                      "domain": "volcengine.com",
                      "enabled": "on",
                      "healthy_threshold": 5,
                      "http_code": "http_2xx",
                      "interval": 10,
                      "method": "GET",
                      "timeout": 3,
                      "un_healthy_threshold": 2,
                      "uri": "/"
                    }
                  ],
                  "listener_name": "acc-test-listener",
                  "load_balancer_id": "${volcengine_clb.foo.id}",
                  "port": 90,
                  "protocol": "HTTP",
                  "server_group_id": "${volcengine_server_group.foo.id}"
                }
              references:
                load_balancer_id: volcengine_clb.foo.id
                server_group_id: volcengine_server_group.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc0Demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_name": "acc-test-create",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "type": "public"
                    }
                volcengine_server_group.foo: |-
                    {
                      "description": "hello demo11",
                      "load_balancer_id": "${volcengine_clb.foo.id}",
                      "server_group_name": "acc-test-create"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
            - name: foo_tcp
              manifest: |-
                {
                  "bandwidth": 2,
                  "connection_drain_enabled": "on",
                  "connection_drain_timeout": 100,
                  "enabled": "on",
                  "listener_name": "acc-test-listener",
                  "load_balancer_id": "${volcengine_clb.foo.id}",
                  "persistence_timeout": 100,
                  "persistence_type": "source_ip",
                  "port": 90,
                  "protocol": "TCP",
                  "proxy_protocol_type": "standard",
                  "server_group_id": "${volcengine_server_group.foo.id}"
                }
              references:
                load_balancer_id: volcengine_clb.foo.id
                server_group_id: volcengine_server_group.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc0Demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_name": "acc-test-create",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "type": "public"
                    }
                volcengine_server_group.foo: |-
                    {
                      "description": "hello demo11",
                      "load_balancer_id": "${volcengine_clb.foo.id}",
                      "server_group_name": "acc-test-create"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            acl_ids: '- (Optional) The id list of the Acl.'
            acl_status: '- (Optional) The enable status of Acl. Optional choice contains on, off.'
            acl_type: '- (Optional) The type of the Acl. Optional choice contains white, black.'
            bandwidth: '- (Optional) The bandwidth of the Listener. Unit: Mbps. Default is -1, indicating that the Listener does not specify a speed limit.'
            certificate_id: '- (Optional) The certificate id associated with the listener.'
            connection_drain_enabled: |-
                - (Optional) Whether to enable connection drain of the Listener. Valid values: off, on. Default is off.
                This filed is valid only when the value of field protocol is TCP or UDP.
            connection_drain_timeout: |-
                - (Optional) The connection drain timeout of the Listener. Valid value range is 0-900.
                This filed is required when the value of field connection_drain_enabled is on.
            cookie: '- (Optional) The name of the cookie for session persistence configured on the backend server. When PersistenceType is configured as server, this parameter is required. When PersistenceType is configured as any other value, this parameter is not effective.'
            description: '- (Optional) The description of the Listener.'
            domain: '- (Optional) The domain of health check.'
            enabled: '- (Optional) The enable status of the Listener. Optional choice contains on, off.'
            established_timeout: '- (Optional) The connection timeout of the Listener.'
            health_check: '- (Optional) The config of health check.'
            healthy_threshold: '- (Optional) The healthy threshold of health check, default 3, range in 2~10.'
            http_code: '- (Optional) The normal http status code of health check, the value can be http_2xx or http_3xx or http_4xx or http_5xx.'
            id: '- ID of the resource.'
            interval: '- (Optional) The interval executing health check, default 2, range in 1~300.'
            listener_id: '- The ID of the Listener.'
            listener_name: '- (Optional) The name of the Listener.'
            load_balancer_id: '- (Required, ForceNew) The region of the request.'
            method: '- (Optional) The method of health check, the value can be GET or HEAD.'
            persistence_timeout: '- (Optional) The persistence timeout of the Listener. Unit: second. Default is 1000. When PersistenceType is configured as source_ip, the value range is 1-3600. When PersistenceType is configured as insert, the value range is 1-86400. This filed is valid only when the value of field persistence_type is source_ip or insert.'
            persistence_type: |-
                - (Optional) The persistence type of the Listener. Valid values: off, source_ip, insert, server. Default is off.
                source_ip: Represents the source IP address, only effective for TCP/UDP protocols. insert: means implanting a cookie, only effective for HTTP/HTTPS protocol and when the scheduler is wrr. server: Indicates rewriting cookies, only effective for HTTP/HTTPS protocols and when the scheduler is wrr.
            port: '- (Required, ForceNew) The port receiving request of the Listener, the value range in 1~65535.'
            protocol: '- (Required, ForceNew) The protocol of the Listener. Optional choice contains TCP, UDP, HTTP, HTTPS.'
            proxy_protocol_type: |-
                - (Optional) Whether to enable proxy protocol. Valid values: off, standard. Default is off.
                This filed is valid only when the value of field protocol is TCP or UDP.
            scheduler: '- (Optional) The scheduling algorithm of the Listener. Optional choice contains wrr, wlc, sh.'
            server_group_id: '- (Required) The server group id associated with the listener.'
            timeout: '- (Optional) The response timeout of health check, default 2, range in 1~60..'
            udp_expect: '- (Optional) The UDP expect of health check. This field must be specified simultaneously with field udp_request.'
            udp_request: '- (Optional) The UDP request of health check. This field must be specified simultaneously with field udp_expect.'
            un_healthy_threshold: '- (Optional) The unhealthy threshold of health check, default 3, range in 2~10.'
            uri: '- (Optional) The uri of health check.'
        importStatements: []
    volcengine_mongodb_account:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb account
        name: volcengine_mongodb_account
        title: volcengine_mongodb_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_desc": "acc-test",
                  "account_name": "acc-test-mongodb-account",
                  "account_password": "93f0cb0614Aab12",
                  "account_privileges": [
                    {
                      "db_name": "admin",
                      "role_names": [
                        "userAdmin",
                        "clusterMonitor"
                      ]
                    },
                    {
                      "db_name": "config",
                      "role_names": [
                        "read"
                      ]
                    },
                    {
                      "db_name": "local",
                      "role_names": [
                        "read"
                      ]
                    }
                  ],
                  "auth_db": "admin",
                  "instance_id": "${volcengine_mongodb_instance.foo.id}"
                }
              references:
                instance_id: volcengine_mongodb_instance.foo.id
              dependencies:
                volcengine_mongodb_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongodb-replica",
                      "instance_type": "ReplicaSet",
                      "node_spec": "mongo.2c4g",
                      "project_name": "default",
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "93f0cb0614Aab12",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_desc: '- (Optional) The description of the mongodb account.'
            account_name: '- (Required, ForceNew) The name of the mongodb account.'
            account_password: '- (Required) The password of the mongodb account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            account_privileges: '- (Optional) The privilege information of account.'
            account_type: '- The type of the account.'
            auth_db: '- (Optional, ForceNew) The database of the mongodb account.'
            db_name: '- (Required) The name of database.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the mongodb instance.'
            role_names: '- (Required) The role names of the account.'
        importStatements: []
    volcengine_mongodb_allow_list:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb allow list
        name: volcengine_mongodb_allow_list
        title: volcengine_mongodb_allow_list
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list": "10.1.1.3,10.2.3.0/24,10.1.1.1",
                  "allow_list_desc": "acc-test",
                  "allow_list_name": "acc-test-allow-list",
                  "allow_list_type": "IPv4",
                  "project_name": "default"
                }
        argumentDocs:
            allow_list: '- (Required) IP address or IP address segment in CIDR format. Duplicate addresses are not allowed, multiple addresses should be separated by commas (,) in English.'
            allow_list_desc: '- (Optional) The description of allow list.'
            allow_list_ip_num: '- The number of allow list IPs.'
            allow_list_name: '- (Required) The name of allow list.'
            allow_list_type: '- (Optional) The IP address type of allow list, valid value contains IPv4.'
            associated_instance_num: '- The total number of instances bound under the allow list.'
            associated_instances: '- The list of associated instances.'
            id: '- ID of the resource.'
            instance_id: '- The instance id that bound to the allow list.'
            instance_name: '- The instance name that bound to the allow list.'
            project_name: '- (Optional) The project name of the allow list.'
            vpc: '- The VPC ID.'
        importStatements: []
    volcengine_mongodb_allow_list_associate:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb allow list associate
        name: volcengine_mongodb_allow_list_associate
        title: volcengine_mongodb_allow_list_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_id": "${volcengine_mongodb_allow_list.foo.id}",
                  "instance_id": "${volcengine_mongodb_instance.foo.id}"
                }
              references:
                allow_list_id: volcengine_mongodb_allow_list.foo.id
                instance_id: volcengine_mongodb_instance.foo.id
              dependencies:
                volcengine_mongodb_allow_list.foo: |-
                    {
                      "allow_list": "10.1.1.3,10.2.3.0/24,10.1.1.1",
                      "allow_list_desc": "acc-test",
                      "allow_list_name": "acc-test",
                      "allow_list_type": "IPv4"
                    }
                volcengine_mongodb_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-replica",
                      "instance_type": "ReplicaSet",
                      "mongos_node_number": 32,
                      "mongos_node_spec": "mongo.mongos.2c4g",
                      "node_spec": "mongo.2c4g",
                      "project_name": "default",
                      "shard_number": 3,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allow_list_id: '- (Required, ForceNew) Id of allow list to associate.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) Id of instance to associate.'
        importStatements: []
    volcengine_mongodb_endpoint:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb endpoint
        name: volcengine_mongodb_endpoint
        title: volcengine_mongodb_endpoint
        examples:
            - name: replica-set-public-endpoint
              manifest: |-
                {
                  "eip_ids": "${volcengine_eip_address.foo[*].id}",
                  "instance_id": "${volcengine_mongodb_instance.replica-set.id}",
                  "network_type": "Public"
                }
              references:
                instance_id: volcengine_mongodb_instance.replica-set.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "count": 2,
                      "description": "acc-test",
                      "isp": "ChinaUnicom",
                      "name": "acc-eip-${count.index}",
                      "project_name": "default"
                    }
                volcengine_mongodb_instance.replica-set: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-replica",
                      "instance_type": "ReplicaSet",
                      "mongos_node_number": 2,
                      "mongos_node_spec": "mongo.mongos.2c4g",
                      "node_spec": "mongo.2c4g",
                      "project_name": "default",
                      "shard_number": 3,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_mongodb_instance.sharded-cluster: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-shard",
                      "instance_type": "ShardedCluster",
                      "mongos_node_number": 2,
                      "mongos_node_spec": "mongo.mongos.1c2g",
                      "node_spec": "mongo.shard.1c2g",
                      "project_name": "default",
                      "shard_number": 2,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
            - name: sharded-cluster-private-endpoint
              manifest: |-
                {
                  "instance_id": "${volcengine_mongodb_instance.sharded-cluster.id}",
                  "network_type": "Private",
                  "object_id": "${volcengine_mongodb_instance.sharded-cluster.shards[0].shard_id}"
                }
              references:
                instance_id: volcengine_mongodb_instance.sharded-cluster.id
                object_id: volcengine_mongodb_instance.sharded-cluster.shards[0].shard_id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "count": 2,
                      "description": "acc-test",
                      "isp": "ChinaUnicom",
                      "name": "acc-eip-${count.index}",
                      "project_name": "default"
                    }
                volcengine_mongodb_instance.replica-set: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-replica",
                      "instance_type": "ReplicaSet",
                      "mongos_node_number": 2,
                      "mongos_node_spec": "mongo.mongos.2c4g",
                      "node_spec": "mongo.2c4g",
                      "project_name": "default",
                      "shard_number": 3,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_mongodb_instance.sharded-cluster: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-shard",
                      "instance_type": "ShardedCluster",
                      "mongos_node_number": 2,
                      "mongos_node_spec": "mongo.mongos.1c2g",
                      "node_spec": "mongo.shard.1c2g",
                      "project_name": "default",
                      "shard_number": 2,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_ids: '- (Optional, ForceNew) A list of EIP IDs that need to be bound when applying for endpoint.'
            endpoint_id: '- The id of endpoint.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance where the endpoint resides.'
            mongos_node_ids: '- (Optional, ForceNew) A list of the Mongos node that needs to apply for the endpoint.'
            network_type: '- (Optional, ForceNew) The network type of endpoint. Valid values: Private, Public. Default is Private.'
            object_id: '- (Optional, ForceNew) The object ID corresponding to the endpoint.'
        importStatements: []
    volcengine_mongodb_instance:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb instance
        name: volcengine_mongodb_instance
        title: volcengine_mongodb_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_type": "PostPaid",
                  "db_engine_version": "MongoDB_4_0",
                  "instance_name": "acc-test-mongodb-replica",
                  "instance_type": "ReplicaSet",
                  "node_availability_zone": [
                    {
                      "node_number": 2,
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                  ],
                  "node_spec": "mongo.2c4g",
                  "project_name": "default",
                  "storage_space_gb": 20,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "super_account_password": "93f0cb0614Aab12",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "zone_ids": [
                    "${data.volcengine_zones.foo.zones[0].id}"
                  ]
                }
              references:
                node_availability_zone.zone_id: data.volcengine_zones.foo.zones[0].id
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            auto_renew: '- (Optional) Whether to enable automatic renewal. This parameter is required when the ChargeType is Prepaid.'
            charge_type: '- (Optional) The charge type of instance, valid value contains Prepaid or PostPaid. Default is PostPaid.'
            config_servers_id: '- The config servers id of the ShardedCluster instance.'
            db_engine_version: '- (Optional, ForceNew) The version of db engine, valid value contains MongoDB_4_0, MongoDB_4_2, MongoDB_4_4, MongoDB_5_0, MongoDB_6_0.'
            id: '- ID of the resource.'
            instance_name: '- (Optional) The instance name.'
            instance_type: '- (Optional, ForceNew) The type of instance, the valid value contains ReplicaSet or ShardedCluster. Default is ReplicaSet.'
            key: '- (Required) The Key of Tags.'
            mongos: '- The mongos information of the ShardedCluster instance.'
            mongos_id: '- The mongos id of the ShardedCluster instance.'
            mongos_node_id: '- The mongos node ID.'
            mongos_node_number: '- (Optional) The mongos node number of shard cluster, value range is 2~23, this parameter is required when the InstanceType is ShardedCluster.'
            mongos_node_spec: '- (Optional) The mongos node spec of shard cluster, this parameter is required when the InstanceType is ShardedCluster.'
            node_availability_zone: '- (Optional, ForceNew) The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            node_number: |-
                - (Required, ForceNew) The number of readonly nodes in current zone. Currently, only ReplicaSet instances and Shard in ShardedCluster instances support adding readonly nodes.
                When the instance_type is ReplicaSet, this value represents the total number of readonly nodes in a single replica set instance. Each instance of the replica set supports adding up to 5 readonly nodes.
                When the instance_type is ShardedCluster, this value represents the number of readonly nodes in each shard. Each shard can add up to 5 readonly nodes.
            node_spec: '- (Required) The spec of node. When the instance_type is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instance_type is ShardedCluster, this parameter represents the specification of the Shard node.'
            node_status: '- The node status.'
            period: '- (Optional) The instance purchase duration, the value range is 1~3 when PeriodUtil is Year, the value range is 1~9 when PeriodUtil is Month. This parameter is required when the ChargeType is Prepaid.'
            period_unit: '- (Optional) The period unit, valid value contains Year or Month. This parameter is required when the ChargeType is Prepaid.'
            private_endpoint: '- The private endpoint address of instance.'
            project_name: '- (Optional) The project name to which the instance belongs.'
            read_only_node_number: '- The number of readonly node in instance.'
            shard_id: '- The shard id.'
            shard_number: '- (Optional) The number of shards in shard cluster, value range is 2~32, this parameter is required when the InstanceType is ShardedCluster.'
            shards: '- The shards information of the ShardedCluster instance.'
            storage_space_gb: '- (Required) The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.'
            subnet_id: '- (Required, ForceNew) The subnet id of instance.'
            super_account_password: '- (Optional) The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Optional, ForceNew) The vpc ID.'
            zone_id: '- (Optional, ForceNew, Deprecated) This field has been deprecated after version-0.0.156. Please use zone_ids to deploy multiple availability zones. The zone ID of instance.'
            zone_ids: '- (Optional, ForceNew) The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.'
        importStatements: []
    volcengine_mongodb_instance_parameter:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb instance parameter
        name: volcengine_mongodb_instance_parameter
        title: volcengine_mongodb_instance_parameter
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_mongodb_instance.foo.id}",
                  "parameter_name": "cursorTimeoutMillis",
                  "parameter_role": "Node",
                  "parameter_value": "600111"
                }
              references:
                instance_id: volcengine_mongodb_instance.foo.id
              dependencies:
                volcengine_mongodb_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-replica",
                      "instance_type": "ReplicaSet",
                      "mongos_node_number": 32,
                      "mongos_node_spec": "mongo.mongos.2c4g",
                      "node_spec": "mongo.2c4g",
                      "project_name": "default",
                      "shard_number": 3,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance ID.'
            parameter_name: '- (Required, ForceNew) The name of parameter. The parameter resource can only be added or modified, deleting this resource will not actually execute any operation.'
            parameter_role: '- (Required, ForceNew) The node type to which the parameter belongs. The value range is as follows: Node, Shard, ConfigServer, Mongos.'
            parameter_value: '- (Required) The value of parameter.'
        importStatements: []
    volcengine_mongodb_ssl_state:
        subCategory: MONGODB
        description: Provides a resource to manage mongodb ssl state
        name: volcengine_mongodb_ssl_state
        title: volcengine_mongodb_ssl_state
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_mongodb_instance.foo.id}"
                }
              references:
                instance_id: volcengine_mongodb_instance.foo.id
              dependencies:
                volcengine_mongodb_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MongoDB_4_0",
                      "instance_name": "acc-test-mongo-replica",
                      "instance_type": "ReplicaSet",
                      "mongos_node_number": 2,
                      "mongos_node_spec": "mongo.mongos.2c4g",
                      "node_spec": "mongo.2c4g",
                      "project_name": "default",
                      "shard_number": 3,
                      "storage_space_gb": 20,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "super_account_password": "@acc-test-123",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of mongodb instance.'
            is_valid: '- Whetehr SSL is valid.'
            ssl_action: '- (Optional) The action of ssl, valid value contains Update. Set ssl_action to Update will will trigger an SSL update operation when executing terraform apply.When the current time is less than 30 days from the ssl_expired_time, executing terraform apply will automatically renew the SSL.'
            ssl_enable: '- Whether SSL is enabled.'
            ssl_expired_time: '- The expire time of SSL.'
        importStatements: []
    volcengine_nas_file_system:
        subCategory: NAS
        description: Provides a resource to manage nas file system
        name: volcengine_nas_file_system
        title: volcengine_nas_file_system
        examples:
            - name: foo
              manifest: |-
                {
                  "capacity": 103,
                  "description": "acc-test",
                  "file_system_name": "acc-test-fs",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "zone_id": "${data.volcengine_nas_zones.foo.zones[0].id}"
                }
              references:
                zone_id: data.volcengine_nas_zones.foo.zones[0].id
        argumentDocs:
            capacity: '- (Required) The capacity of the nas file system. Unit: GiB.'
            charge_type: '- The charge type of the nas file system.'
            create_time: '- The create time of the nas file system.'
            description: '- (Optional) The description of the nas file system.'
            file_system_name: '- (Required) The name of the nas file system.'
            file_system_type: '- The type of the nas file system.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Optional) The project name of the nas file system.'
            protocol_type: '- The protocol type of the nas file system.'
            region_id: '- The region id of the nas file system.'
            snapshot_count: '- The snapshot count of the nas file system.'
            snapshot_id: '- (Optional, ForceNew) The snapshot id when creating the nas file system. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            status: '- The status of the nas file system.'
            storage_type: '- The storage type of the nas file system.'
            tags: '- (Optional) Tags.'
            update_time: '- The update time of the nas file system.'
            value: '- (Required) The Value of Tags.'
            version: '- The version of the nas file system.'
            zone_id: '- (Required, ForceNew) The zone id of the nas file system.'
            zone_name: '- The zone name of the nas file system.'
        importStatements: []
    volcengine_nas_mount_point:
        subCategory: NAS
        description: Provides a resource to manage nas mount point
        name: volcengine_nas_mount_point
        title: volcengine_nas_mount_point
        examples:
            - name: foo
              manifest: |-
                {
                  "file_system_id": "${volcengine_nas_file_system.foo.id}",
                  "mount_point_name": "acc-test",
                  "permission_group_id": "${volcengine_nas_permission_group.foo.id}",
                  "subnet_id": "${volcengine_subnet.foo.id}"
                }
              references:
                file_system_id: volcengine_nas_file_system.foo.id
                permission_group_id: volcengine_nas_permission_group.foo.id
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_nas_file_system.foo: |-
                    {
                      "capacity": 103,
                      "description": "acc-test",
                      "file_system_name": "acc-test-fs",
                      "project_name": "default",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "zone_id": "${data.volcengine_nas_zones.foo.zones[0].id}"
                    }
                volcengine_nas_permission_group.foo: |-
                    {
                      "description": "acctest",
                      "permission_group_name": "acc-test",
                      "permission_rules": [
                        {
                          "cidr_ip": "*",
                          "rw_mode": "RW",
                          "use_mode": "All_squash"
                        },
                        {
                          "cidr_ip": "192.168.0.0",
                          "rw_mode": "RO",
                          "use_mode": "All_squash"
                        }
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            file_system_id: '- (Required, ForceNew) The file system id.'
            id: '- ID of the resource.'
            mount_point_id: '- The mount point id.'
            mount_point_name: '- (Required) The mount point name.'
            permission_group_id: '- (Required) The permission group id.'
            subnet_id: '- (Required, ForceNew) The subnet id.'
        importStatements: []
    volcengine_nas_permission_group:
        subCategory: NAS
        description: Provides a resource to manage nas permission group
        name: volcengine_nas_permission_group
        title: volcengine_nas_permission_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acctest1",
                  "permission_group_name": "acc-test1",
                  "permission_rules": [
                    {
                      "cidr_ip": "*",
                      "rw_mode": "RW",
                      "use_mode": "All_squash"
                    },
                    {
                      "cidr_ip": "192.168.0.0",
                      "rw_mode": "RO",
                      "use_mode": "No_all_squash"
                    }
                  ]
                }
        argumentDocs:
            cidr_ip: '- (Required) Client IP addresses that are allowed access.'
            description: '- (Optional) The description of the permission group.'
            id: '- ID of the resource.'
            permission_group_id: '- The id of the permission group.'
            permission_group_name: '- (Required) The name of the permission group.'
            permission_rules: '- (Optional) The list of permissions rules.'
            rw_mode: |-
                - (Required) Permission group read and write rules. The value description is as follows:
                RW: Allows reading and writing.
                RO: read-only mode.
            use_mode: |-
                - (Required) Permission group user permissions. The value description is as follows:
                All_squash: All access users are mapped to anonymous users or user groups.
                No_all_squash: The access user is first matched with the local user, and then mapped to an anonymous user or user group after the match fails.
                Root_squash: Map the Root user as an anonymous user or user group.
                No_root_squash: The Root user maintains the Root account authority.
        importStatements: []
    volcengine_nas_snapshot:
        subCategory: NAS
        description: Provides a resource to manage nas snapshot
        name: volcengine_nas_snapshot
        title: volcengine_nas_snapshot
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "desc2",
                  "file_system_id": "enas-cnbj5c18f02afe0e",
                  "snapshot_name": "tfsnap3"
                }
        argumentDocs:
            create_time: '- The create time of snapshot.'
            description: '- (Optional) The description of snapshot.'
            file_system_id: '- (Required, ForceNew) The ID of the file system.'
            file_system_name: '- The name of file system.'
            id: '- ID of the resource.'
            is_encrypt: '- Whether is encrypt.'
            progress: '- The progress of snapshot.'
            snapshot_name: '- (Required) The name of snapshot.'
            snapshot_type: '- The type of snapshot.'
            source_size: '- The size of source.'
            source_version: '- The source version info.'
            status: '- The status of snapshot.'
            zone_id: '- The ID of zone.'
        importStatements: []
    volcengine_nat_gateway:
        subCategory: NAT
        description: Provides a resource to manage nat gateway
        name: volcengine_nat_gateway
        title: volcengine_nat_gateway
        examples:
            - name: foo
              manifest: |-
                {
                  "billing_type": "PostPaid",
                  "description": "acc-test",
                  "nat_gateway_name": "acc-test-ng",
                  "project_name": "default",
                  "spec": "Small",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "vpc_id": "${volcengine_vpc.foo.id}"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
                vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            billing_type: '- (Optional, ForceNew) The billing type of the NatGateway, the value is PostPaid or PrePaid.'
            description: '- (Optional) The description of the NatGateway.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            nat_gateway_name: '- (Optional) The name of the NatGateway.'
            period: '- (Optional, ForceNew) The period of the NatGateway, the valid value range in 1~9 or 12 or 24 or 36. Default value is 12. The period unit defaults to Month.This field is only effective when creating a PrePaid NatGateway. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            project_name: '- (Optional) The ProjectName of the NatGateway.'
            spec: '- (Optional) The specification of the NatGateway. Optional choice contains Small(default), Medium, Large or leave blank.'
            subnet_id: '- (Required, ForceNew) The ID of the Subnet.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Required, ForceNew) The ID of the VPC.'
        importStatements: []
    volcengine_network_acl:
        subCategory: VPC
        description: Provides a resource to manage network acl
        name: volcengine_network_acl
        title: volcengine_network_acl
        examples:
            - name: foo
              manifest: |-
                {
                  "egress_acl_entries": [
                    {
                      "destination_cidr_ip": "192.168.0.0/16",
                      "network_acl_entry_name": "egress2",
                      "policy": "accept",
                      "protocol": "all"
                    }
                  ],
                  "ingress_acl_entries": [
                    {
                      "network_acl_entry_name": "ingress1",
                      "policy": "accept",
                      "protocol": "all",
                      "source_cidr_ip": "192.168.0.0/24"
                    },
                    {
                      "network_acl_entry_name": "ingress3",
                      "policy": "accept",
                      "port": "80/80",
                      "protocol": "tcp",
                      "source_cidr_ip": "192.168.0.0/24"
                    }
                  ],
                  "network_acl_name": "tf-test-acl",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "vpc_id": "${volcengine_vpc.foo.id}"
                }
              references:
                vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            description: '- (Optional) The description of the Network Acl.'
            destination_cidr_ip: '- (Optional) The DestinationCidrIp of entry.'
            egress_acl_entries: '- (Optional) The egress entries of Network Acl.'
            id: '- ID of the resource.'
            ingress_acl_entries: '- (Optional) The ingress entries of Network Acl.'
            key: '- (Required) The Key of Tags.'
            network_acl_entry_name: '- (Optional) The name of entry.'
            network_acl_name: '- (Optional) The name of Network Acl.'
            policy: '- (Optional) The policy of entry. Default is accept. The value can be accept or drop.'
            port: '- (Optional) The port of entry. Default is -1/-1. When Protocol is all, icmp or gre, the port range is -1/-1, which means no port restriction.When the Protocol is tcp or udp, the port range is 1~65535, and the format is 1/200, 80/80,which means port 1 to port 200, port 80.'
            project_name: '- (Optional) The project name of the network acl.'
            protocol: '- (Optional) The protocol of entry. The value can be icmp or gre or tcp or udp or all. Default is all.'
            source_cidr_ip: '- (Optional) The SourceCidrIp of entry.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Required, ForceNew) The vpc id of Network Acl.'
        importStatements: []
    volcengine_network_acl_associate:
        subCategory: VPC
        description: Provides a resource to manage network acl associate
        name: volcengine_network_acl_associate
        title: volcengine_network_acl_associate
        examples:
            - name: foo1
              manifest: |-
                {
                  "network_acl_id": "${volcengine_network_acl.foo.id}",
                  "resource_id": "subnet-637jxq81u5mon3gd6ivc7rj"
                }
              references:
                network_acl_id: volcengine_network_acl.foo.id
              dependencies:
                volcengine_network_acl.foo: |-
                    {
                      "network_acl_name": "tf-test-acl",
                      "vpc_id": "vpc-ru0wv9alfoxsu3nuld85rpp"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            network_acl_id: '- (Required, ForceNew) The id of Network Acl.'
            resource_id: '- (Required, ForceNew) The resource id of Network Acl.'
        importStatements: []
    volcengine_network_interface:
        subCategory: VPC
        description: Provides a resource to manage network interface
        name: volcengine_network_interface
        title: volcengine_network_interface
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test-up",
                  "network_interface_name": "tf-test-up",
                  "port_security_enabled": false,
                  "primary_ip_address": "192.168.5.253",
                  "private_ip_address": [
                    "192.168.5.2"
                  ],
                  "project_name": "default",
                  "security_group_ids": [
                    "sg-2fepz3c793g1s59gp67y21r34"
                  ],
                  "subnet_id": "subnet-2fe79j7c8o5c059gp68ksxr93"
                }
        argumentDocs:
            description: '- (Optional) The description of the ENI.'
            id: '- ID of the resource.'
            ipv6_address_count: |-
                - (Optional) The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 0 to 10.
                You cannot specify both the ipv6_addresses and ipv6_address_count parameters.
            ipv6_addresses: |-
                - (Optional) One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
                You cannot specify both the ipv6_addresses and ipv6_address_count parameters.
            key: '- (Required) The Key of Tags.'
            network_interface_name: '- (Optional) The name of the ENI.'
            port_security_enabled: '- (Optional) Set port security enable or disable.'
            primary_ip_address: '- (Optional, ForceNew) The primary IP address of the ENI.'
            private_ip_address: '- (Optional) The list of private ip address. This field conflicts with secondary_private_ip_address_count.'
            project_name: '- (Optional) The ProjectName of the ENI.'
            secondary_private_ip_address_count: '- (Optional) The count of secondary private ip address. This field conflicts with private_ip_address.'
            security_group_ids: '- (Required) The list of the security group id to which the secondary ENI belongs.'
            status: '- The status of the ENI.'
            subnet_id: '- (Required, ForceNew) The id of the subnet to which the ENI is connected.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_network_interface_attach:
        subCategory: VPC
        description: Provides a resource to manage network interface attach
        name: volcengine_network_interface_attach
        title: volcengine_network_interface_attach
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "i-72q20hi6s082wcafdem8",
                  "network_interface_id": "eni-274ecj646ylts7fap8t6xbba1"
                }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance to which the ENI is bound.'
            network_interface_id: '- (Required, ForceNew) The id of the ENI.'
        importStatements: []
    volcengine_organization:
        subCategory: ORGANIZATION
        description: Provides a resource to manage organization
        name: volcengine_organization
        title: volcengine_organization
        examples:
            - name: foo
              manifest: '{}'
        argumentDocs:
            account_id: '- The account id of the organization owner.'
            account_name: '- The account name of the organization owner.'
            created_time: '- The created time of the organization.'
            delete_uk: '- The delete uk of the organization.'
            deleted_time: '- The deleted time of the organization.'
            description: '- The description of the organization.'
            id: '- ID of the resource.'
            main_name: '- The main name of the organization owner.'
            name: '- The name of the organization.'
            owner: '- The owner id of the organization.'
            status: '- The status of the organization.'
            type: '- The type of the organization.'
            updated_time: '- The updated time of the organization.'
        importStatements: []
    volcengine_organization_account:
        subCategory: ORGANIZATION
        description: Provides a resource to manage organization account
        name: volcengine_organization_account
        title: volcengine_organization_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "acc-test-account",
                  "description": "acc-test",
                  "org_unit_id": "${volcengine_organization_unit.foo.id}",
                  "show_name": "acc-test-account",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "verification_relation_id": "210026****"
                }
              references:
                org_unit_id: volcengine_organization_unit.foo.id
              dependencies:
                volcengine_organization_unit.foo: |-
                    {
                      "description": "acc-test",
                      "name": "acc-test-org-unit",
                      "parent_id": "730671013833632****"
                    }
        argumentDocs:
            account_name: '- (Required) The name of the account.'
            description: '- (Optional) The description of the account.'
            iam_role: '- The name of the iam role.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            org_id: '- The id of the organization.'
            org_unit_id: '- (Optional) The id of the organization unit. Default is root organization.'
            org_unit_name: '- The name of the organization unit.'
            org_verification_id: '- The id of the organization verification.'
            owner: '- The owner id of the account.'
            show_name: '- (Required) The show name of the account.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            verification_relation_id: '- (Optional, ForceNew) The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
        importStatements: []
    volcengine_organization_service_control_policy:
        subCategory: ORGANIZATION
        description: Provides a resource to manage organization service control policy
        name: volcengine_organization_service_control_policy
        title: volcengine_organization_service_control_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tftest1",
                  "policy_name": "tfpolicy11",
                  "statement": "{\"Statement\":[{\"Effect\":\"Deny\",\"Action\":[\"ecs:RunInstances\"],\"Resource\":[\"*\"]}]}"
                }
            - name: foo2
              manifest: |-
                {
                  "policy_name": "tfpolicy21",
                  "statement": "{\"Statement\":[{\"Effect\":\"Deny\",\"Action\":[\"ecs:DeleteInstance\"],\"Resource\":[\"*\"]}]}"
                }
        argumentDocs:
            create_date: '- The create time of the Policy.'
            description: '- (Optional) The description of the Policy.'
            id: '- ID of the resource.'
            policy_name: '- (Required) The name of the Policy.'
            policy_type: '- The type of the Policy.'
            statement: '- (Required) The statement of the Policy.'
            update_date: '- The update time of the Policy.'
        importStatements: []
    volcengine_organization_service_control_policy_attachment:
        subCategory: ORGANIZATION
        description: Provides a resource to manage organization service control policy attachment
        name: volcengine_organization_service_control_policy_attachment
        title: volcengine_organization_service_control_policy_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "policy_id": "${volcengine_organization_service_control_policy.foo.id}",
                  "target_id": "21*********94",
                  "target_type": "Account"
                }
              references:
                policy_id: volcengine_organization_service_control_policy.foo.id
              dependencies:
                volcengine_organization_service_control_policy.foo: |-
                    {
                      "description": "tftest1",
                      "policy_name": "tfpolicy11",
                      "statement": "{\"Statement\":[{\"Effect\":\"Deny\",\"Action\":[\"ecs:RunInstances\"],\"Resource\":[\"*\"]}]}"
                    }
            - name: foo1
              manifest: |-
                {
                  "policy_id": "${volcengine_organization_service_control_policy.foo.id}",
                  "target_id": "73*********9",
                  "target_type": "OU"
                }
              references:
                policy_id: volcengine_organization_service_control_policy.foo.id
              dependencies:
                volcengine_organization_service_control_policy.foo: |-
                    {
                      "description": "tftest1",
                      "policy_name": "tfpolicy11",
                      "statement": "{\"Statement\":[{\"Effect\":\"Deny\",\"Action\":[\"ecs:RunInstances\"],\"Resource\":[\"*\"]}]}"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            policy_id: '- (Required, ForceNew) The id of policy.'
            target_id: '- (Required, ForceNew) The id of target.'
            target_type: '- (Required, ForceNew) The type of target. Support Account or OU.'
        importStatements: []
    volcengine_organization_service_control_policy_enabler:
        subCategory: ORGANIZATION
        description: Provides a resource to manage organization service control policy enabler
        name: volcengine_organization_service_control_policy_enabler
        title: volcengine_organization_service_control_policy_enabler
        examples:
            - name: foo
              manifest: '{}'
        argumentDocs:
            id: '- ID of the resource.'
        importStatements: []
    volcengine_organization_unit:
        subCategory: ORGANIZATION
        description: Provides a resource to manage organization unit
        name: volcengine_organization_unit
        title: volcengine_organization_unit
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test",
                  "name": "tf-test-unit",
                  "parent_id": "${[for unit in data.volcengine_organization_units.foo.units : unit.id if unit.parent_id == \"0\"][0]}"
                }
              dependencies:
                volcengine_organization.foo: '{}'
        argumentDocs:
            depth: '- The depth of the organization unit.'
            description: '- (Optional) Description of the organization unit.'
            id: '- ID of the resource.'
            name: '- (Required) Name of the organization unit.'
            org_id: '- The id of the organization.'
            org_type: '- The organization type.'
            owner: '- The owner of the organization unit.'
            parent_id: '- (Required, ForceNew) Parent Organization Unit ID.'
        importStatements: []
    volcengine_private_zone:
        subCategory: PRIVATE_ZONE
        description: Provides a resource to manage private zone
        name: volcengine_private_zone
        title: volcengine_private_zone
        examples:
            - name: foo
              manifest: |-
                {
                  "intelligent_mode": true,
                  "load_balance_mode": true,
                  "recursion_mode": true,
                  "remark": "acc-test-new",
                  "vpcs": [
                    {
                      "vpc_id": "vpc-rs4mi0jedipsv0x57pf****"
                    },
                    {
                      "region": "cn-shanghai",
                      "vpc_id": "vpc-3qdzk9xju6o747prml0jk****"
                    }
                  ],
                  "zone_name": "acc-test-pz.com"
                }
        argumentDocs:
            id: '- ID of the resource.'
            intelligent_mode: '- (Optional, ForceNew) Whether to enable the intelligent mode of the private zone.'
            load_balance_mode: '- (Optional) Whether to enable the load balance mode of the private zone.'
            recursion_mode: '- (Optional) Whether to enable the recursion mode of the private zone.'
            region: '- (Optional) The region of the bind vpc. The default value is the region of the default provider config.'
            remark: '- (Optional) The remark of the private zone.'
            vpc_id: '- (Required) The id of the bind vpc.'
            vpcs: '- (Required) The bind vpc object of the private zone. If you want to bind another account''s VPC, you need to first use resource volcengine_private_zone_user_vpc_authorization to complete the authorization.'
            zone_name: '- (Required, ForceNew) The name of the private zone.'
        importStatements: []
    volcengine_private_zone_record:
        subCategory: PRIVATE_ZONE
        description: Provides a resource to manage private zone record
        name: volcengine_private_zone_record
        title: volcengine_private_zone_record
        examples:
            - name: foo
              manifest: |-
                {
                  "enable": true,
                  "host": "www",
                  "remark": "tf-test",
                  "ttl": 700,
                  "type": "A",
                  "value": "10.1.1.158",
                  "weight": 8,
                  "zid": 245
                }
              dependencies:
                volcengine_private_zone_record_weight_enabler.foo: |-
                    {
                      "record_set_id": "${[for set in data.volcengine_private_zone_record_sets.foo.record_sets : set.record_set_id if set.type == volcengine_private_zone_record.foo.type][0]}",
                      "weight_enabled": true,
                      "zid": "${volcengine_private_zone_record.foo.zid}"
                    }
        argumentDocs:
            enable: '- (Optional) Whether to enable the private zone record. This field is only effected when modify this resource.'
            host: '- (Required) The host of the private zone record.'
            id: '- ID of the resource.'
            remark: '- (Optional) The remark of the private zone record.'
            ttl: '- (Optional) The ttl of the private zone record. Unit: second. Default is 600.'
            type: '- (Required) The type of the private zone record. Valid values: A, AAAA, CNAME, MX, PTR.'
            value: '- (Required) The value of the private zone record. Record values need to be set based on the value of the type.'
            weight: '- (Optional) The weight of the private zone record. This field is only effected when the load_balance_mode of the private zone is true and the weight_enabled of the record_set is true. Default is 1.'
            zid: '- (Required, ForceNew) The zid of the private zone record.'
        importStatements: []
    volcengine_private_zone_record_weight_enabler:
        subCategory: PRIVATE_ZONE
        description: Provides a resource to manage private zone record weight enabler
        name: volcengine_private_zone_record_weight_enabler
        title: volcengine_private_zone_record_weight_enabler
        examples:
            - name: foo
              manifest: |-
                {
                  "record_set_id": "${[for set in data.volcengine_private_zone_record_sets.foo.record_sets : set.record_set_id if set.type == volcengine_private_zone_record.foo.type][0]}",
                  "weight_enabled": true,
                  "zid": "${volcengine_private_zone_record.foo.zid}"
                }
              references:
                zid: volcengine_private_zone_record.foo.zid
              dependencies:
                volcengine_private_zone_record.foo: |-
                    {
                      "enable": true,
                      "host": "www",
                      "remark": "tf-test",
                      "ttl": 700,
                      "type": "A",
                      "value": "10.1.1.158",
                      "weight": 8,
                      "zid": 245
                    }
        argumentDocs:
            id: '- ID of the resource.'
            record_set_id: '- (Required, ForceNew) The id of the private zone record set.'
            weight_enabled: '- (Required) Whether to enable the load balance of the private zone record set.'
            zid: '- (Required, ForceNew) The zid of the private zone record set.'
        importStatements: []
    volcengine_private_zone_resolver_endpoint:
        subCategory: PRIVATE_ZONE
        description: Provides a resource to manage private zone resolver endpoint
        name: volcengine_private_zone_resolver_endpoint
        title: volcengine_private_zone_resolver_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "ip_configs": [
                    {
                      "az_id": "cn-beijing-a",
                      "ip": "172.16.0.2",
                      "subnet_id": "subnet-mj2o4co2m2v45smt1bx1****"
                    },
                    {
                      "az_id": "cn-beijing-a",
                      "ip": "172.16.0.3",
                      "subnet_id": "subnet-mj2o4co2m2v45smt1bx1****"
                    },
                    {
                      "az_id": "cn-beijing-a",
                      "ip": "172.16.0.4",
                      "subnet_id": "subnet-mj2o4co2m2v45smt1bx1****"
                    },
                    {
                      "az_id": "cn-beijing-a",
                      "ip": "172.16.0.5",
                      "subnet_id": "subnet-mj2o4co2m2v45smt1bx1****"
                    }
                  ],
                  "name": "tf-test",
                  "security_group_id": "sg-mj2nsckay29s5smt1b0d****",
                  "vpc_id": "vpc-13f9uuuqfdjb43n6nu5p1****",
                  "vpc_region": "cn-beijing"
                }
        argumentDocs:
            az_id: '- (Required) Id of the availability zone.'
            direction: '- (Optional, ForceNew) DNS request forwarding direction for terminal nodes. OUTBOUND: (default) Outbound terminal nodes forward DNS query requests from within the VPC to external DNS servers. INBOUND: Inbound terminal nodes forward DNS query requests from external sources to resolvers.'
            id: '- ID of the resource.'
            ip: '- (Required) Source IP address of traffic. You can add up to 6 IP addresses at most. To ensure high availability, you must add at least two IP addresses.'
            ip_configs: '- (Required) Availability zones, subnets, and IP configurations of terminal nodes.'
            name: '- (Required) The name of the private zone resolver endpoint.'
            security_group_id: '- (Required, ForceNew) The security group ID of the endpoint.'
            subnet_id: '- (Required) Id of the subnet.'
            vpc_id: '- (Required, ForceNew) The VPC ID of the endpoint.'
            vpc_region: '- (Required, ForceNew) The VPC region of the endpoint.'
        importStatements: []
    volcengine_private_zone_resolver_rule:
        subCategory: PRIVATE_ZONE
        description: Provides a resource to manage private zone resolver rule
        name: volcengine_private_zone_resolver_rule
        title: volcengine_private_zone_resolver_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "endpoint_id": 346,
                  "forward_ips": [
                    {
                      "ip": "10.199.38.19",
                      "port": 33
                    }
                  ],
                  "name": "tf0",
                  "type": "OUTBOUND",
                  "vpcs": [
                    {
                      "region": "cn-beijing",
                      "vpc_id": "vpc-13f9uuuqfdjb43n6nu5p1****"
                    }
                  ],
                  "zone_name": [
                    "www.baidu.com"
                  ]
                }
        argumentDocs:
            endpoint_id: '- (Optional, ForceNew) Terminal node ID. This parameter is only valid and required when the Type parameter is OUTBOUND.'
            forward_ips: '- (Optional) IP address and port of external DNS server. You can add up to 10 IP addresses. This parameter is only valid when the Type parameter is OUTBOUND and is a required parameter.'
            id: '- ID of the resource.'
            ip: '- (Required) IP address of the external DNS server. This parameter is only valid when the Type parameter is OUTBOUND and is a required parameter.'
            line: '- (Optional) The operator of the exit IP address of the recursive DNS server. This parameter is only valid when the Type parameter is LINE and is a required parameter. MOBILE, TELECOM, UNICOM.'
            name: '- (Required) The name of the rule.'
            port: '- (Optional) The port of the external DNS server. Default is 53. This parameter is only valid and optional when the Type parameter is OUTBOUND.'
            region: '- (Optional) The region of the bind vpc. The default value is the region of the default provider config.'
            type: '- (Required, ForceNew) Forwarding rule types. OUTBOUND: Forward to external DNS servers. LINE: Set the recursive DNS server used for recursive resolution to the recursive DNS server of the Volcano Engine PublicDNS, and customize the operator''s exit IP address for the recursive DNS server.'
            vpc_id: '- (Required) The id of the bind vpc.'
            vpcs: '- (Required) The parameter name  is a variable that represents the region where the VPC is located, such as cn-beijing. The parameter value can include one or more VPC IDs, such as vpc-2750bd1. For example, if you associate a VPC in the cn-beijing region with a domain name and the VPC ID is vpc-2d6si87atfh1c58ozfd0nzq8k, the parameter would be "cn-beijing":["vpc-2d6si87atfh1c58ozfd0nzq8k"]. You can add one or more regions. When the Type parameter is OUTBOUND, the VPC region must be the same as the region where the endpoint is located.'
            zone_name: '- (Optional, ForceNew) Domain names associated with forwarding rules. You can enter one or more domain names. Up to 500 domain names are supported. This parameter is only valid when the Type parameter is OUTBOUND and is a required parameter.'
        importStatements: []
    volcengine_private_zone_user_vpc_authorization:
        subCategory: PRIVATE_ZONE
        description: Provides a resource to manage private zone user vpc authorization
        name: volcengine_private_zone_user_vpc_authorization
        title: volcengine_private_zone_user_vpc_authorization
        examples:
            - name: foo
              manifest: |-
                {
                  "account_id": "2100278462"
                }
        argumentDocs:
            account_id: '- (Required, ForceNew) The account Id which authorizes the private zone resource.'
            id: '- ID of the resource.'
        importStatements: []
    volcengine_privatelink_security_group:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink security group
        name: volcengine_privatelink_security_group
        title: volcengine_privatelink_security_group
        examples:
            - name: foo
              manifest: |-
                {
                  "endpoint_id": "${volcengine_privatelink_vpc_endpoint.foo.id}",
                  "security_group_id": "${volcengine_security_group.foo1.id}"
                }
              references:
                endpoint_id: volcengine_privatelink_vpc_endpoint.foo.id
                security_group_id: volcengine_security_group.foo1.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_privatelink_vpc_endpoint.foo: |-
                    {
                      "description": "acc-test",
                      "endpoint_name": "acc-test-ep",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}"
                          ]
                        }
                      ],
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                    }
                volcengine_privatelink_vpc_endpoint_service.foo: |-
                    {
                      "auto_accept_enabled": true,
                      "description": "acc-test",
                      "resources": [
                        {
                          "resource_id": "${volcengine_clb.foo.id}",
                          "resource_type": "CLB"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_security_group.foo1: |-
                    {
                      "security_group_name": "acc-test-security-group-new",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            endpoint_id: '- (Required, ForceNew) The id of the endpoint.'
            id: '- ID of the resource.'
            security_group_id: |-
                - (Required, ForceNew) The id of the security group. It is not recommended to use this resource for binding security groups, it is recommended to use the security_group_id field of volcengine_privatelink_vpc_endpoint for binding.
                If using this resource and volcengine_privatelink_vpc_endpoint jointly for operations, use lifecycle ignore_changes to suppress changes to the security_group_id field in volcengine_privatelink_vpc_endpoint.
        importStatements: []
    volcengine_privatelink_vpc_endpoint:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink vpc endpoint
        name: volcengine_privatelink_vpc_endpoint
        title: volcengine_privatelink_vpc_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "endpoint_name": "acc-test-ep",
                  "security_group_ids": [
                    "${volcengine_security_group.foo.id}"
                  ],
                  "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                }
              references:
                service_id: volcengine_privatelink_vpc_endpoint_service.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_privatelink_vpc_endpoint_service.foo: |-
                    {
                      "auto_accept_enabled": true,
                      "description": "acc-test",
                      "resources": [
                        {
                          "resource_id": "${volcengine_clb.foo.id}",
                          "resource_type": "CLB"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            business_status: '- Whether the vpc endpoint is locked.'
            connection_status: '- The connection  status of vpc endpoint.'
            creation_time: '- The create time of vpc endpoint.'
            deleted_time: '- The delete time of vpc endpoint.'
            description: '- (Optional) The description of vpc endpoint.'
            endpoint_domain: '- The domain of vpc endpoint.'
            endpoint_name: '- (Optional) The name of vpc endpoint.'
            endpoint_type: '- The type of vpc endpoint.'
            id: '- ID of the resource.'
            private_dns_enabled: '- (Optional) Whether to enable private dns name. Default is false.'
            private_dns_name: '- The private dns name of vpc endpoint.'
            security_group_ids: |-
                - (Required) The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using volcengine_privatelink_security_group.
                For operations that jointly use this resource and volcengine_privatelink_security_group, use lifecycle ignore_changes to suppress changes to the 'security_group_ids' field.
            service_id: '- (Required, ForceNew) The id of vpc endpoint service.'
            service_name: '- (Optional, ForceNew) The name of vpc endpoint service.'
            status: '- The status of vpc endpoint.'
            update_time: '- The update time of vpc endpoint.'
            vpc_id: '- The vpc id of vpc endpoint.'
        importStatements: []
    volcengine_privatelink_vpc_endpoint_connection:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink vpc endpoint connection
        name: volcengine_privatelink_vpc_endpoint_connection
        title: volcengine_privatelink_vpc_endpoint_connection
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_privatelink_vpc_endpoint_zone.foo}"
                  ],
                  "endpoint_id": "${volcengine_privatelink_vpc_endpoint.foo.id}",
                  "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                }
              references:
                endpoint_id: volcengine_privatelink_vpc_endpoint.foo.id
                service_id: volcengine_privatelink_vpc_endpoint_service.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_privatelink_vpc_endpoint.foo: |-
                    {
                      "description": "acc-test",
                      "endpoint_name": "acc-test-ep",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                    }
                volcengine_privatelink_vpc_endpoint_service.foo: |-
                    {
                      "description": "acc-test",
                      "resources": [
                        {
                          "resource_id": "${volcengine_clb.foo.id}",
                          "resource_type": "CLB"
                        }
                      ]
                    }
                volcengine_privatelink_vpc_endpoint_zone.foo: |-
                    {
                      "endpoint_id": "${volcengine_privatelink_vpc_endpoint.foo.id}",
                      "private_ip_address": "172.16.0.251",
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            connection_status: '- The status of the connection.'
            creation_time: '- The create time of the connection.'
            endpoint_id: '- (Required, ForceNew) The id of the endpoint.'
            endpoint_owner_account_id: '- The account id of the vpc endpoint.'
            endpoint_vpc_id: '- The vpc id of the vpc endpoint.'
            id: '- ID of the resource.'
            network_interface_id: '- The id of the network interface.'
            network_interface_ip: '- The ip address of the network interface.'
            resource_id: '- The id of the resource.'
            service_id: '- (Required, ForceNew) The id of the security group.'
            subnet_id: '- The id of the subnet.'
            update_time: '- The update time of the connection.'
            zone_domain: '- The domain of the zone.'
            zone_id: '- The id of the zone.'
            zone_status: '- The status of the zone.'
            zones: '- The available zones.'
        importStatements: []
    volcengine_privatelink_vpc_endpoint_service:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink vpc endpoint service
        name: volcengine_privatelink_vpc_endpoint_service
        title: volcengine_privatelink_vpc_endpoint_service
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_accept_enabled": true,
                  "description": "acc-test",
                  "resources": [
                    {
                      "resource_id": "${volcengine_clb.foo.id}",
                      "resource_type": "CLB"
                    }
                  ]
                }
              references:
                resources.resource_id: volcengine_clb.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            auto_accept_enabled: '- (Optional) Whether auto accept node connect.'
            creation_time: '- The create time of service.'
            description: '- (Optional) The description of service.'
            id: '- ID of the resource.'
            resource_id: '- (Required) The id of resource.'
            resource_type: '- (Required) The type of resource.'
            resources: '- (Required) The resources info. When create vpc endpoint service, the resource must exist. It is recommended to bind resources using the resources'' field in this resource instead of using vpc_endpoint_service_resource. For operations that jointly use this resource and vpc_endpoint_service_resource, use lifecycle ignore_changes to suppress changes to the resources field.'
            service_domain: '- The domain of service.'
            service_id: '- The Id of service.'
            service_name: '- The name of service.'
            service_resource_type: '- The resource type of service.'
            service_type: '- The type of service.'
            status: '- The status of service.'
            update_time: '- The update time of service.'
            zone_ids: '- The IDs of zones.'
        importStatements: []
    volcengine_privatelink_vpc_endpoint_service_permission:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink vpc endpoint service permission
        name: volcengine_privatelink_vpc_endpoint_service_permission
        title: volcengine_privatelink_vpc_endpoint_service_permission
        examples:
            - name: foo
              manifest: |-
                {
                  "permit_account_id": "210000000",
                  "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                }
              references:
                service_id: volcengine_privatelink_vpc_endpoint_service.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_privatelink_vpc_endpoint_service.foo: |-
                    {
                      "auto_accept_enabled": true,
                      "description": "acc-test",
                      "resources": [
                        {
                          "resource_id": "${volcengine_clb.foo.id}",
                          "resource_type": "CLB"
                        }
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            permit_account_id: '- (Required, ForceNew) The id of account.'
            service_id: '- (Required, ForceNew) The id of service.'
        importStatements: []
    volcengine_privatelink_vpc_endpoint_service_resource:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink vpc endpoint service resource
        name: volcengine_privatelink_vpc_endpoint_service_resource
        title: volcengine_privatelink_vpc_endpoint_service_resource
        examples:
            - name: foo
              manifest: |-
                {
                  "resource_id": "${volcengine_clb.foo1.id}",
                  "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                }
              references:
                resource_id: volcengine_clb.foo1.id
                service_id: volcengine_privatelink_vpc_endpoint_service.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_clb.foo1: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb-new",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_privatelink_vpc_endpoint_service.foo: |-
                    {
                      "auto_accept_enabled": true,
                      "description": "acc-test",
                      "resources": [
                        {
                          "resource_id": "${volcengine_clb.foo.id}",
                          "resource_type": "CLB"
                        }
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            resource_id: '- (Required, ForceNew) The id of resource. It is not recommended to use this resource for binding resources, it is recommended to use the resources field of vpc_endpoint_service for binding. If using this resource and vpc_endpoint_service jointly for operations, use lifecycle ignore_changes to suppress changes to the resources field in vpc_endpoint_service.'
            service_id: '- (Required, ForceNew) The id of service.'
        importStatements: []
    volcengine_privatelink_vpc_endpoint_zone:
        subCategory: PRIVATELINK
        description: Provides a resource to manage privatelink vpc endpoint zone
        name: volcengine_privatelink_vpc_endpoint_zone
        title: volcengine_privatelink_vpc_endpoint_zone
        examples:
            - name: foo
              manifest: |-
                {
                  "endpoint_id": "${volcengine_privatelink_vpc_endpoint.foo.id}",
                  "private_ip_address": "172.16.0.251",
                  "subnet_id": "${volcengine_subnet.foo.id}"
                }
              references:
                endpoint_id: volcengine_privatelink_vpc_endpoint.foo.id
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc-test-demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_billing_type": "PostPaid",
                      "load_balancer_name": "acc-test-clb",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "type": "public"
                    }
                volcengine_privatelink_vpc_endpoint.foo: |-
                    {
                      "description": "acc-test",
                      "endpoint_name": "acc-test-ep",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "service_id": "${volcengine_privatelink_vpc_endpoint_service.foo.id}"
                    }
                volcengine_privatelink_vpc_endpoint_service.foo: |-
                    {
                      "auto_accept_enabled": true,
                      "description": "acc-test",
                      "resources": [
                        {
                          "resource_id": "${volcengine_clb.foo.id}",
                          "resource_type": "CLB"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            endpoint_id: '- (Required, ForceNew) The endpoint id of vpc endpoint zone.'
            id: '- ID of the resource.'
            network_interface_id: '- The network interface id of vpc endpoint.'
            private_ip_address: '- (Optional, ForceNew) The private ip address of vpc endpoint zone.'
            subnet_id: '- (Required, ForceNew) The subnet id of vpc endpoint zone.'
            zone_domain: '- The domain of vpc endpoint zone.'
            zone_id: '- The Id of vpc endpoint zone.'
            zone_status: '- The status of vpc endpoint zone.'
        importStatements: []
    volcengine_rabbitmq_instance:
        subCategory: RABBITMQ
        description: Provides a resource to manage rabbitmq instance
        name: volcengine_rabbitmq_instance
        title: volcengine_rabbitmq_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_info": [
                    {
                      "charge_type": "PostPaid"
                    }
                  ],
                  "compute_spec": "rabbitmq.n3.x2.small",
                  "instance_description": "acc-test",
                  "instance_name": "acc-test-rabbitmq",
                  "project_name": "default",
                  "storage_space": 300,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "user_name": "acc-test-user",
                  "user_password": "93f0cb0614Aab12",
                  "version": "3.8.18",
                  "zone_ids": [
                    "${data.volcengine_zones.foo.zones[0].id}",
                    "${data.volcengine_zones.foo.zones[1].id}",
                    "${data.volcengine_zones.foo.zones[2].id}"
                  ]
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- The account id of the rabbitmq instance.'
            apply_private_dns_to_public: '- Whether enable the public network parsing function of the rabbitmq instance.'
            arch_type: '- The type of the rabbitmq instance.'
            auto_renew: '- (Optional) Whether to automatically renew in prepaid scenarios. Default is false.'
            charge_info: '- (Required) The charge information of the rocketmq instance.'
            charge_type: '- (Required) The charge type of the rabbitmq instance. Valid values: PostPaid, PrePaid.'
            compute_spec: '- (Required) The compute specification of the rabbitmq instance.'
            create_time: '- The create time of the rabbitmq instance.'
            eip_id: '- The eip id of the rabbitmq instance.'
            endpoint_type: '- The endpoint type of the rabbitmq instance.'
            endpoints: '- The endpoint info of the rabbitmq instance.'
            id: '- ID of the resource.'
            init_user_name: '- The WebUI admin user name of the rabbitmq instance.'
            instance_description: '- (Optional) The description of the rabbitmq instance.'
            instance_name: '- (Optional) The name of the rabbitmq instance.'
            instance_status: '- The status of the rabbitmq instance.'
            internal_endpoint: '- The internal endpoint of the rabbitmq instance.'
            key: '- (Required) The Key of Tags.'
            network_type: '- The network type of the rabbitmq instance.'
            period: '- (Optional) Purchase duration in prepaid scenarios. When PeriodUnit is specified as Month, the value range is 1-9. When PeriodUnit is specified as Year, the value range is 1-3. Default is 1.'
            period_unit: '- (Optional) The purchase cycle in the prepaid scenario. Valid values: Month, Year. Default is Month.'
            project_name: '- (Optional) The IAM project name where the rabbitmq instance resides.'
            public_endpoint: '- The public endpoint of the rabbitmq instance.'
            region_id: '- The region id of the rabbitmq instance.'
            storage_space: '- (Required) The storage space of the rabbitmq instance. Unit: GiB. The valid value must be specified as a multiple of 100.'
            subnet_id: '- (Required, ForceNew) The subnet id of the rabbitmq instance.'
            tags: '- (Optional) Tags.'
            used_storage_space: '- The used storage space of the rabbitmq instance. Unit: GiB.'
            user_name: '- (Required) The administrator name of the rabbitmq instance.'
            user_password: '- (Required) The administrator password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            value: '- (Required) The Value of Tags.'
            version: '- (Required, ForceNew) The version of the rabbitmq instance. Valid values: 3.8.18, 3.12.'
            vpc_id: '- The vpc id of the rabbitmq instance.'
            zone_ids: '- (Required, ForceNew) The zone id of the rabbitmq instance. Support specifying multiple availability zones.'
        importStatements: []
    volcengine_rabbitmq_instance_plugin:
        subCategory: RABBITMQ
        description: Provides a resource to manage rabbitmq instance plugin
        name: volcengine_rabbitmq_instance_plugin
        title: volcengine_rabbitmq_instance_plugin
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_rabbitmq_instance.foo.id}",
                  "plugin_name": "rabbitmq_shovel"
                }
              references:
                instance_id: volcengine_rabbitmq_instance.foo.id
              dependencies:
                volcengine_rabbitmq_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rabbitmq.n3.x2.small",
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rabbitmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "user_name": "acc-test-user",
                      "user_password": "93f0cb0614Aab12",
                      "version": "3.8.18",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}",
                        "${data.volcengine_zones.foo.zones[1].id}",
                        "${data.volcengine_zones.foo.zones[2].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            description: '- The description of the plugin.'
            disable_prompt: '- The disable prompt of the plugin.'
            enable_prompt: '- The enable prompt of the plugin.'
            enabled: '- Whether the plugin is enabled.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the rabbitmq instance..'
            need_reboot_on_change: '- Will changing the enabled state of the plugin cause a reboot of the rabbitmq instance.'
            plugin_name: '- (Required, ForceNew) The name of the plugin.'
            port: '- The port of the plugin.'
            version: '- The version of the plugin.'
        importStatements: []
    volcengine_rabbitmq_public_address:
        subCategory: RABBITMQ
        description: Provides a resource to manage rabbitmq public address
        name: volcengine_rabbitmq_public_address
        title: volcengine_rabbitmq_public_address
        examples:
            - name: foo
              manifest: |-
                {
                  "eip_id": "${volcengine_eip_address.foo.id}",
                  "instance_id": "${volcengine_rabbitmq_instance.foo.id}"
                }
              references:
                eip_id: volcengine_eip_address.foo.id
                instance_id: volcengine_rabbitmq_instance.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip",
                      "project_name": "default"
                    }
                volcengine_rabbitmq_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rabbitmq.n3.x2.small",
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rabbitmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "user_name": "acc-test-user",
                      "user_password": "93f0cb0614Aab12",
                      "version": "3.8.18",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}",
                        "${data.volcengine_zones.foo.zones[1].id}",
                        "${data.volcengine_zones.foo.zones[2].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_id: '- (Required, ForceNew) The id of the eip.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of rabbitmq instance.'
        importStatements: []
    volcengine_rds_account:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds account
        name: volcengine_rds_account
        title: volcengine_rds_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "test",
                  "account_password": "Aatest123",
                  "account_type": "Normal",
                  "instance_id": "mysql-0fdd3bab2e7c"
                }
        argumentDocs:
            account_name: |-
                - (Required, ForceNew) Database account name. The rules are as follows:
                Unique name.
                Start with a letter and end with a letter or number.
                Consists of lowercase letters, numbers, or underscores (_).
                The length is 2~32 characters.
                The keyword list is disabled for database accounts, and certain reserved words, including root, admin, etc., cannot be used.
            account_password: |-
                - (Required, ForceNew) The password of the database account.
                illustrate
                Cannot start with ! or @.
                The length is 8~32 characters.
                It consists of any three of uppercase letters, lowercase letters, numbers, and special characters.
                The special characters are !@#$%^*()_+-=. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            account_type: |-
                - (Required, ForceNew) Database account type, value:
                Super: A high-privilege account. Only one database account can be created for an instance.
                Normal: An account with ordinary privileges.
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
        importStatements: []
    volcengine_rds_account_privilege:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds account privilege
        name: volcengine_rds_account_privilege
        title: volcengine_rds_account_privilege
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "${volcengine_rds_account.app_name.account_name}",
                  "db_privileges": [
                    {
                      "account_privilege": "Custom",
                      "account_privilege_str": "ALTER,ALTER ROUTINE,CREATE,CREATE ROUTINE,CREATE TEMPORARY TABLES",
                      "db_name": "foo"
                    },
                    {
                      "account_privilege": "DDLOnly",
                      "db_name": "bar"
                    },
                    {
                      "account_privilege": "ReadWrite",
                      "db_name": "demo"
                    }
                  ],
                  "instance_id": "mysql-0fdd3bab2e7c"
                }
              references:
                account_name: volcengine_rds_account.app_name.account_name
              dependencies:
                volcengine_rds_account.app_name: |-
                    {
                      "account_name": "terraform-test-app",
                      "account_password": "Aatest123",
                      "account_type": "Normal",
                      "instance_id": "mysql-0fdd3bab2e7c"
                    }
        argumentDocs:
            account_name: |-
                - (Required, ForceNew) Database account name. The rules are as follows:
                Unique name.
                Start with a letter and end with a letter or number.
                Consists of lowercase letters, numbers, or underscores (_).
                The length is 2~32 characters.
                The keyword list is disabled for database accounts, and certain reserved words, including root, admin, etc., cannot be used.
            account_privilege: '- (Required) The privilege type of the account.'
            account_privilege_str: '- (Optional) The privilege string of the account.'
            db_name: '- (Required) The name of database.'
            db_privileges: '- (Required) The privileges of the account.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
        importStatements: []
    volcengine_rds_database:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds database
        name: volcengine_rds_database
        title: volcengine_rds_database
        examples:
            - name: foo
              manifest: |-
                {
                  "character_set_name": "utf8mb4",
                  "db_name": "foo",
                  "instance_id": "mysql-0fdd3bab2e7c"
                }
        argumentDocs:
            character_set_name: '- (Required, ForceNew) Database character set. Currently supported character sets include: utf8, utf8mb4, latin1, ascii.'
            db_name: |-
                - (Required, ForceNew) Name database.
                illustrate:
                Unique name.
                The length is 2~64 characters.
                Start with a letter and end with a letter or number.
                Consists of lowercase letters, numbers, and underscores (_) or dashes (-).
                Database names are disabled keywords.
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
        importStatements: []
    volcengine_rds_instance:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds instance
        name: volcengine_rds_instance
        title: volcengine_rds_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_type": "PostPaid",
                  "db_engine": "MySQL",
                  "db_engine_version": "MySQL_Community_5_7",
                  "instance_name": "tf-test",
                  "instance_spec_name": "rds.mysql.1c2g",
                  "instance_type": "HA",
                  "region": "cn-north-4",
                  "storage_space_gb": 100,
                  "storage_type": "LocalSSD",
                  "subnet_id": "subnet-1g0d4fkh1nabk8ibuxx1jtvss",
                  "vpc_id": "vpc-3cj17x7u9bzeo6c6rrtzfpaeb",
                  "zone": "cn-langfang-b"
                }
        argumentDocs:
            auto_renew: |-
                - (Optional, ForceNew) Whether to automatically renew. Default: false. Value:
                true: yes.
                false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            charge_type: |-
                - (Required, ForceNew) Billing type. Value:
                PostPaid: Postpaid (pay-as-you-go).
                Prepaid: Prepaid (yearly and monthly).
            connection_info: '- The connection info ot the RDS instance.'
            db_engine: |-
                - (Optional, ForceNew) Database type. Value:
                MySQL (default).
            db_engine_version: |-
                - (Required, ForceNew) Instance type. Value:
                MySQL_Community_5_7
                MySQL_8_0.
            enable_read_only: '- Whether global read-only is enabled.'
            enable_read_write_splitting: '- Whether read-write separation is enabled.'
            id: '- ID of the resource.'
            instance_name: '- (Optional, ForceNew) Set the name of the instance. The naming rules are as follows:'
            instance_spec_name: |-
                - (Required, ForceNew) Instance specification name, you can specify the specification name of the instance to be created. Value:
                rds.mysql.1c2g
                rds.mysql.2c4g
                rds.mysql.4c8g
                rds.mysql.4c16g
                rds.mysql.8c32g
                rds.mysql.16c64g
                rds.mysql.16c128g
                rds.mysql.32c128g
                rds.mysql.32c256g.
            instance_type: |-
                - (Required, ForceNew) Instance type. Value:
                HA: High availability version.
            internal_domain: '- The internal domain of the RDS instance.'
            internal_port: '- The interval port of the RDS instance.'
            prepaid_period: |-
                - (Optional, ForceNew) The purchase cycle in the prepaid scenario. Value:
                Month: monthly subscription.
                Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            project_name: '- (Optional, ForceNew) Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            public_domain: '- The public domain of the RDS instance.'
            public_port: '- The public port of the RDS instance.'
            region: '- (Optional, ForceNew) The region of the RDS instance.'
            storage_space_gb: '- (Required, ForceNew) The storage space(GB) of the RDS instance.'
            storage_type: |-
                - (Required, ForceNew) Instance storage type. Value:
                LocalSSD: Local SSD disk.
            subnet_id: '- (Required, ForceNew) Subnet ID. The subnet must belong to the selected Availability Zone.'
            super_account_name: |-
                - (Optional, ForceNew) Fill in the high-privileged user account name. The naming rules are as follows:
                Unique name.
                Start with a letter and end with a letter or number.
                Consists of lowercase letters, numbers, or underscores (_).
                The length is 2~32 characters.
                Keywords are not allowed for account names.
            super_account_password: |-
                - (Optional, ForceNew) Set a high-privilege account password. The rules are as follows:
                Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
                The length needs to be within 8~32 characters.
                Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
            supper_account_password: |-
                - (Optional, ForceNew, Deprecated) supper_account_password is deprecated, use super_account_password instead Set a high-privilege account password. The rules are as follows:
                Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
                The length needs to be within 8~32 characters.
                Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
            used_time: '- (Optional, ForceNew) The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            vpc_id: '- (Required, ForceNew) The vpc ID of the RDS instance.'
            zone: '- (Required, ForceNew) The available zone of the RDS instance.'
        importStatements: []
    volcengine_rds_instance_v2:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds instance v2
        name: volcengine_rds_instance_v2
        title: volcengine_rds_instance_v2
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_info": [
                    {
                      "charge_type": "PostPaid"
                    }
                  ],
                  "db_engine_version": "MySQL_5_7",
                  "instance_name": "tf-test-v2",
                  "lower_case_table_names": "1",
                  "node_info": [
                    {
                      "node_spec": "rds.mysql.2c4g",
                      "node_type": "Primary",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    },
                    {
                      "node_spec": "rds.mysql.2c4g",
                      "node_type": "Secondary",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                  ],
                  "storage_space": 100,
                  "storage_type": "LocalSSD",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "vpc_id": "${volcengine_vpc.foo.id}"
                }
              references:
                node_info.zone_id: data.volcengine_zones.foo.zones[0].id
                subnet_id: volcengine_subnet.foo.id
                vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            address: '- Address list.'
            auto_add_new_nodes: '- When the terminal type is read-write terminal or read-only terminal, it supports setting whether new nodes are automatically added.'
            auto_renew: '- (Optional, ForceNew) Whether to automatically renew in prepaid scenarios.'
            charge_info: '- (Required, ForceNew) Payment methods.'
            charge_type: |-
                - (Required, ForceNew) Payment type. Value:
                PostPaid - Pay-As-You-Go
                PrePaid - Yearly and monthly (default).
            connection_info: '- The connection info ot the RDS instance.'
            db_engine_version: |-
                - (Required, ForceNew) Instance type. Value:
                MySQL_5_7
                MySQL_8_0.
            db_param_group_id: '- (Optional, ForceNew) Parameter template ID. It only takes effect when the database type is MySQL/PostgreSQL/SQL_Server. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            db_time_zone: '- (Optional, ForceNew) Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            description: '- Address description.'
            domain: '- Connect domain name.'
            eip_id: '- The ID of the EIP, only valid for Public addresses.'
            enable_read_only: '- Whether global read-only is enabled, value: Enable: Enable. Disable: Disabled.'
            enable_read_write_splitting: '- Whether read-write separation is enabled, value: Enable: Enable. Disable: Disabled.'
            endpoint_id: '- Instance connection terminal ID.'
            endpoint_name: '- The instance connection terminal name.'
            endpoint_type: |-
                - Terminal type:
                Cluster: The default terminal. (created by default)
                Primary: Primary node terminal.
                Custom: Custom terminal.
                Direct: Direct connection to the terminal. (Only the operation and maintenance side)
                AllNode: All node terminals. (Only the operation and maintenance side).
            id: '- ID of the resource.'
            instance_name: |-
                - (Optional, ForceNew) Instance name. Cannot start with a number or a dash
                Can only contain Chinese characters, letters, numbers, underscores and dashes
                The length is limited between 1 ~ 128.
            instance_type: '- (Optional, Deprecated) The field instance_type is no longer support. The type of Instance.'
            ip_address: '- The IP Address.'
            lower_case_table_names: |-
                - (Optional, ForceNew) Whether the table name is case sensitive, the default value is 1.
                Ranges:
                0: Table names are stored as fixed and table names are case-sensitive.
                1: Table names will be stored in lowercase and table names are not case sensitive.
            network_type: '- Network address type, temporarily Private, Public, PublicService.'
            node_id: '- The ID of the node.'
            node_info: '- (Required) Instance specification configuration. This parameter is required for RDS for MySQL, RDS for PostgreSQL and MySQL Sharding. There is one and only one Primary node, one and only one Secondary node, and 0-10 Read-Only nodes.'
            node_spec: |-
                - (Required) Masternode specs. Pass
                DescribeDBInstanceSpecs Query the instance specifications that can be sold.
            node_type: '- (Required) Node type, the value is "Primary", "Secondary", "ReadOnly".'
            period: '- (Optional, ForceNew) Purchase duration in prepaid scenarios. Default: 1.'
            period_unit: |-
                - (Optional, ForceNew) The purchase cycle in the prepaid scenario.
                Month - monthly subscription (default)
                Year - Package year.
            port: '- The Port.'
            project_name: '- (Optional) Subordinate to the project.'
            read_only_node_weight: '- The list of nodes configured by the connection terminal and the corresponding read-only weights.'
            read_write_mode: |-
                - Read and write mode:
                ReadWrite: read and write
                ReadOnly: read only (default).
            storage_space: |-
                - (Optional) Instance storage space.
                When the database type is MySQL/PostgreSQL/SQL_Server/MySQL Sharding, value range: [20, 3000], unit: GB, increments every 100GB.
                When the database type is veDB_MySQL/veDB_PostgreSQL, this parameter does not need to be passed.
            storage_type: |-
                - (Required) Instance storage type. When the database type is MySQL/PostgreSQL/SQL_Server/MySQL Sharding, the value is:
                LocalSSD - local SSD disk
                When the database type is veDB_MySQL/veDB_PostgreSQL, the value is:
                DistributedStorage - Distributed Storage.
            subnet_id: '- (Required, ForceNew) Subnet ID.'
            vpc_id: '- (Required, ForceNew) Private network (VPC) ID. You can call the DescribeVpcs query and use this parameter to specify the VPC where the instance is to be created.'
            weight: '- The weight of the node.'
            zone_id: '- (Required) Zone ID.'
        importStatements: []
    volcengine_rds_ip_list:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds ip list
        name: volcengine_rds_ip_list
        title: volcengine_rds_ip_list
        examples:
            - name: foo
              manifest: |-
                {
                  "group_name": "foo",
                  "instance_id": "mysql-0fdd3bab2e7c",
                  "ip_list": [
                    "1.1.1.1",
                    "2.2.2.2"
                  ]
                }
        argumentDocs:
            group_name: '- (Required, ForceNew) The name of the RDS ip list.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
            ip_list: '- (Required) The list of IP address.'
        importStatements: []
    volcengine_rds_mssql_backup:
        subCategory: RDS_MSSQL
        description: Provides a resource to manage rds mssql backup
        name: volcengine_rds_mssql_backup
        title: volcengine_rds_mssql_backup
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "mssql-40914121fd22"
                }
        argumentDocs:
            backup_id: '- The ID of the backup.'
            backup_meta: '- (Optional, ForceNew) Backup repository information. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            backup_type: '- (Optional, ForceNew) Backup type. Currently only supports full backup, with a value of Full (default).'
            db_name: '- (Required, ForceNew) The name of the database.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
        importStatements: []
    volcengine_rds_mssql_instance:
        subCategory: RDS_MSSQL
        description: Provides a resource to manage rds mssql instance
        name: volcengine_rds_mssql_instance
        title: volcengine_rds_mssql_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_retention_period": 14,
                  "backup_time": "18:00Z-19:00Z",
                  "charge_info": [
                    {
                      "charge_type": "PostPaid"
                    }
                  ],
                  "db_engine_version": "SQLServer_2019_Std",
                  "full_backup_period": [
                    "Monday",
                    "Tuesday"
                  ],
                  "instance_name": "acc-test-mssql",
                  "instance_type": "HA",
                  "node_spec": "rds.mssql.se.ha.d2.2c4g",
                  "project_name": "default",
                  "storage_space": 20,
                  "subnet_id": [
                    "${volcengine_subnet.foo.id}"
                  ],
                  "super_account_password": "Tftest110",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            auto_renew: '- (Optional, ForceNew) Whether to enable automatic renewal in the prepaid scenario. This parameter can be set when the ChargeType is Prepaid.'
            backup_retention_period: |-
                - (Optional) Data backup retention days, value range: 7~30.
                This field is valid and required when updating the backup plan of instance.
            backup_time: |-
                - (Optional) The time window for starting the backup task is one hour interval.
                This field is valid and required when updating the backup plan of instance.
            charge_info: '- (Required, ForceNew) The charge info.'
            charge_type: '- (Required, ForceNew) The charge type. Valid values: PostPaid, PrePaid.'
            db_engine_version: '- (Required, ForceNew) The Compatible version. Valid values: SQLServer_2019_Std, SQLServer_2019_Web, SQLServer_2019_Ent.'
            full_backup_period: |-
                - (Optional) Full backup cycle. Multiple values separated by commas. The values are as follows: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
                This field is valid and required when updating the backup plan of instance.
            id: '- ID of the resource.'
            instance_name: '- (Optional, ForceNew) Name of the instance.'
            instance_type: '- (Required, ForceNew) The Instance type. When the value of the db_engine_version is SQLServer_2019_Std, the value of this field can be HA or Basic.When the value of the db_engine_version is SQLServer_2019_Ent, the value of this field can be Cluster or Basic.When the value of the db_engine_version is SQLServer_2019_Web, the value of this field can be Basic.'
            key: '- (Required) The Key of Tags.'
            node_spec: '- (Required, ForceNew) The node specification.'
            period: '- (Optional, ForceNew) Purchase duration in a prepaid scenario. This parameter is required when the ChargeType is Prepaid.'
            project_name: '- (Optional) The project name.'
            storage_space: '- (Required, ForceNew) Storage space size, measured in GiB. The range of values is 20GiB to 4000GiB, with a step size of 10GiB.'
            subnet_id: '- (Required, ForceNew) The subnet id of the instance node. When creating an instance that includes primary and backup nodes and needs to deploy primary and backup nodes across availability zones, you can specify two subnet_id. By default, the first is the primary node availability zone, and the second is the backup node availability zone.'
            super_account_password: '- (Required, ForceNew) The super account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_rds_mysql_account:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql account
        name: volcengine_rds_mysql_account
        title: volcengine_rds_mysql_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "acc-test-account",
                  "account_password": "93f0cb0614Aab12",
                  "account_privileges": [
                    {
                      "account_privilege": "Custom",
                      "account_privilege_detail": "SELECT,INSERT,UPDATE",
                      "db_name": "${volcengine_rds_mysql_database.foo.db_name}"
                    },
                    {
                      "account_privilege": "DDLOnly",
                      "db_name": "${volcengine_rds_mysql_database.foo1.db_name}"
                    }
                  ],
                  "account_type": "Normal",
                  "instance_id": "${volcengine_rds_mysql_instance.foo.id}"
                }
              references:
                account_privileges.db_name: volcengine_rds_mysql_database.foo1.db_name
                instance_id: volcengine_rds_mysql_instance.foo.id
              dependencies:
                volcengine_rds_mysql_database.foo: |-
                    {
                      "db_name": "acc-test-db",
                      "instance_id": "${volcengine_rds_mysql_instance.foo.id}"
                    }
                volcengine_rds_mysql_database.foo1: |-
                    {
                      "db_name": "acc-test-db1",
                      "instance_id": "${volcengine_rds_mysql_instance.foo.id}"
                    }
                volcengine_rds_mysql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "MySQL_5_7",
                      "instance_name": "acc-test-rds-mysql",
                      "lower_case_table_names": "1",
                      "node_spec": "rds.mysql.1c2g",
                      "parameters": [
                        {
                          "parameter_name": "auto_increment_increment",
                          "parameter_value": "2"
                        },
                        {
                          "parameter_name": "auto_increment_offset",
                          "parameter_value": "4"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 80,
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_name: |-
                - (Required, ForceNew) Database account name. The rules are as follows:
                Unique name.
                Start with a letter and end with a letter or number.
                Consists of lowercase letters, numbers, or underscores (_).
                The length is 2~32 characters.
                The keyword list is disabled for database accounts, and certain reserved words, including root, admin, etc., cannot be used.
            account_password: |-
                - (Required) The password of the database account.
                Illustrate:
                Cannot start with ! or @.
                The length is 8~32 characters.
                It consists of any three of uppercase letters, lowercase letters, numbers, and special characters.
                The special characters are !@#$%^*()_+-=. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            account_privilege: '- (Required) The privilege type of the account.'
            account_privilege_detail: '- (Optional) The privilege detail of the account.'
            account_privileges: '- (Optional) The privilege information of account.'
            account_type: |-
                - (Required, ForceNew) Database account type, value:
                Super: A high-privilege account. Only one database account can be created for an instance.
                Normal: An account with ordinary privileges.
            db_name: '- (Required) The name of database.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
        importStatements: []
    volcengine_rds_mysql_allowlist:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql allowlist
        name: volcengine_rds_mysql_allowlist
        title: volcengine_rds_mysql_allowlist
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_desc": "acc-test",
                  "allow_list_name": "acc-test-allowlist",
                  "allow_list_type": "IPv4",
                  "security_group_bind_infos": [
                    {
                      "bind_mode": "IngressDirectionIp",
                      "security_group_id": "sg-13fd7wyduxekg3n6nu5t9fhj7"
                    },
                    {
                      "bind_mode": "IngressDirectionIp",
                      "security_group_id": "sg-mjoa9qfyzg1s5smt1a6dmc1l"
                    }
                  ],
                  "user_allow_list": [
                    "192.168.0.0/24",
                    "192.168.1.0/24"
                  ]
                }
        argumentDocs:
            allow_list: '- (Optional) Enter an IP address or a range of IP addresses in CIDR format. Please note that if you want to use security group - related parameters, do not use this field. Instead, use the user_allow_list.'
            allow_list_category: |-
                - (Optional) White list category. Values:
                Ordinary: Ordinary white list.
                Default: Default white list.
                Description: When this parameter is used as a request parameter, the default value is Ordinary.
            allow_list_desc: '- (Optional) The description of the allow list.'
            allow_list_id: '- The id of the allow list.'
            allow_list_name: '- (Required) The name of the allow list.'
            allow_list_type: '- (Optional) The type of IP address in the whitelist. Currently only IPv4 addresses are supported.'
            bind_mode: |-
                - (Required) The schema for the associated security group.
                IngressDirectionIp: Incoming Direction IP.
                AssociateEcsIp: Associate ECSIP.
                explain: In the CreateAllowList interface, SecurityGroupBindInfoObject BindMode and SecurityGroupId fields are required.
            id: '- ID of the resource.'
            security_group_bind_infos: '- (Optional) Whitelist information for the associated security group.'
            security_group_id: '- (Required) The security group id of the allow list.'
            security_group_ids: '- (Optional) The security group ids of the allow list.'
            user_allow_list: '- (Optional) IP addresses outside the security group that need to be added to the whitelist. IP addresses or IP address segments in CIDR format can be entered. Note: This field cannot be used simultaneously with AllowList.'
        importStatements: []
    volcengine_rds_mysql_allowlist_associate:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql allowlist associate
        name: volcengine_rds_mysql_allowlist_associate
        title: volcengine_rds_mysql_allowlist_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_id": "${volcengine_rds_mysql_allowlist.foo.id}",
                  "instance_id": "${volcengine_rds_mysql_instance.foo.id}"
                }
              references:
                allow_list_id: volcengine_rds_mysql_allowlist.foo.id
                instance_id: volcengine_rds_mysql_instance.foo.id
              dependencies:
                volcengine_rds_mysql_allowlist.foo: |-
                    {
                      "allow_list": [
                        "192.168.0.0/24",
                        "192.168.1.0/24"
                      ],
                      "allow_list_desc": "acc-test",
                      "allow_list_name": "acc-test-allowlist",
                      "allow_list_type": "IPv4"
                    }
                volcengine_rds_mysql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "MySQL_5_7",
                      "instance_name": "acc-test-rds-mysql",
                      "lower_case_table_names": "1",
                      "node_spec": "rds.mysql.1c2g",
                      "parameters": [
                        {
                          "parameter_name": "auto_increment_increment",
                          "parameter_value": "2"
                        },
                        {
                          "parameter_name": "auto_increment_offset",
                          "parameter_value": "4"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 80,
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allow_list_id: '- (Required, ForceNew) The id of the allow list.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the mysql instance.'
        importStatements: []
    volcengine_rds_mysql_backup:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql backup
        name: volcengine_rds_mysql_backup
        title: volcengine_rds_mysql_backup
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_meta": [
                    {
                      "db_name": "order"
                    }
                  ],
                  "backup_method": "Logical",
                  "instance_id": "mysql-c8c3f45c4b07"
                }
        argumentDocs:
            backup_id: '- The id of the backup.'
            backup_meta: |-
                - (Optional, ForceNew) When creating a library table backup of logical backup type, it is used to specify the library table information to be backed up.
                Prerequisite: When the value of BackupMethod is Logical, and the BackupType field is not passed.
                Mutual exclusion situation: When the value of the BackupType field is DumpAll, this field is not effective.
                Quantity limit: When creating a specified library table backup, the upper limit of the number of libraries is 5000, and the upper limit of the number of tables in each library is 5000.
            backup_method: '- (Optional, ForceNew) Backup method. Value range: Full, full backup under physical backup type. Default value. DumpAll: full database backup under logical backup type. Prerequisite: If you need to create a full database backup of logical backup type, that is, when the value of BackupType is DumpAll, the backup type should be set to logical backup, that is, the value of BackupMethod should be Logical. If you need to create a database table backup of logical backup type, you do not need to pass in this field. You only need to specify the database and table to be backed up in the BackupMeta field.'
            backup_type: '- (Optional, ForceNew) Backup type. Currently, only full backup is supported. The value is Full.'
            db_name: '- (Required, ForceNew) Specify the database that needs to be backed up.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
            table_names: '- (Optional, ForceNew) Specify the tables to be backed up in the specified database. When this field is empty, it defaults to full database backup.'
        importStatements: []
    volcengine_rds_mysql_backup_policy:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql backup policy
        name: volcengine_rds_mysql_backup_policy
        title: volcengine_rds_mysql_backup_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "binlog_file_counts_enable": true,
                  "binlog_space_limit_enable": true,
                  "data_full_backup_periods": [
                    "Monday",
                    "Sunday"
                  ],
                  "instance_id": "mysql-c8c3f45c4b07",
                  "lock_ddl_time": 80
                }
        argumentDocs:
            binlog_backup_all_retention: |-
                - (Optional) Whether to retain all log backups before releasing an instance. Values:
                true: Yes.
                false: No. Description: BinlogBackupAllRetention is ineffective when the value of RetentionPolicySynced is true.
            binlog_backup_enabled: |-
                - (Optional) Whether to enable log backup function. Values:
                true: Yes.
                false: No.
            binlog_backup_encryption_enabled: |-
                - (Optional) Is encryption enabled for log backups? Values:
                true: Yes.
                false: No.
            binlog_file_counts_enable: '- (Optional) Whether to enable the upper limit of local Binlog retention. Values: true: Enabled. false: Disabled. Description:When modifying the log backup policy, this parameter needs to be passed in.'
            binlog_limit_count: '- (Optional) Number of local Binlog retained, ranging from 6 to 1000, in units of pieces. Automatically delete local logs that exceed the retained number. Explanation: When modifying the log backup policy, this parameter needs to be passed in.'
            binlog_local_retention_hour: '- (Optional) Local Binlog retention duration, with a value ranging from 0 to 168, in hours. Local logs exceeding the retention duration will be automatically deleted. When set to 0, local logs will not be automatically deleted. Note: When modifying the log backup policy, this parameter needs to be passed.'
            binlog_space_limit_enable: '- (Optional) Whether to enable automatic cleanup of Binlog when space is too large. When the total storage space occupancy rate of the instance exceeds 80% or the remaining space is less than 5GB, the system will automatically start cleaning up the earliest local Binlog until the total space occupancy rate is lower than 80% and the remaining space is greater than 5GB. true: Enabled. false: Disabled. Description: This parameter needs to be passed in when modifying the log backup policy.'
            binlog_storage_percentage: '- (Optional) Maximum storage space usage rate can be set to 20% - 50%. After exceeding this limit, the earliest Binlog file will be automatically deleted until the space usage rate is lower than this ratio. Local Binlog space usage rate = Local Binlog size / Total available (purchased) instance space size. When modifying the log backup policy, this parameter needs to be passed in. Explanation: When modifying the log backup policy, this parameter needs to be passed in.'
            data_backup_all_retention: |-
                - (Optional) Whether to retain all data backups before releasing the instance. Values:
                true: Yes.
                false: No.
            data_backup_encryption_enabled: |-
                - (Optional) Whether to enable encryption for data backup. Values:
                true: Yes.
                false: No.
            data_backup_retention_day: '- (Optional) Data backup retention days, value range: 7 to 365 days. Default retention is 7 days.'
            data_full_backup_periods: '- (Optional) Full backup period. It is recommended to select at least 2 days for full backup every week. Multiple values are separated by English commas (,). Values: Monday. Tuesday. Wednesday. Thursday. Friday. Saturday. Sunday. When modifying the data backup policy, this parameter needs to be passed in.'
            data_full_backup_start_utc_hour: '- (Optional) The start point (UTC time) of the time window for starting the full backup task. The time window length is 1 hour. Explanation: Both DataFullBackupStartUTCHour and DataFullBackupTime can be used to indicate the full backup time period of an instance. DataFullBackupStartUTCHour has higher priority. If both fields are returned at the same time, DataFullBackupStartUTCHour shall prevail.'
            data_full_backup_time: '- (Optional) Time window for executing backup tasks is one hour. Format: HH:mmZ-HH:mmZ (UTC time). Explanation: This parameter needs to be passed in when modifying the data backup policy.'
            data_incr_backup_periods: '- (Optional) Incremental backup period. Multiple values are separated by commas (,). Values: Monday. Tuesday. Wednesday. Thursday. Friday. Saturday. Sunday.Description: The incremental backup period cannot conflict with the full backup. When modifying the data backup policy, this parameter needs to be passed in.'
            data_keep_days_after_released: '- (Optional) Backup retention days when an instance is released. Currently, only a value of 7 is supported.'
            data_keep_policy_after_released: '- (Optional) Policy for retaining a backup of an instance after it is released. The values are: Last: Keep the last backup. Default value. All: Keep all backups of the instance.'
            hourly_incr_backup_enable: |-
                - (Optional) Whether to enable high-frequency backup function. Values:
                true: Yes.
                false: No.
            id: '- ID of the resource.'
            incr_backup_hour_period: '- (Optional) Frequency of performing high-frequency incremental backups. Values: 2: Perform an incremental backup every 2 hours. 4: Perform an incremental backup every 4 hours. 6: Perform an incremental backup every 6 hours. 12: Perform an incremental backup every 12 hours. Description: This parameter takes effect only when HourlyIncrBackupEnable is set to true.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
            lock_ddl_time: '- (Optional) Maximum waiting time for DDL. The default value is 30. The minimum value is 10. The maximum value is 1440. The unit is minutes. Description: Only instances of MySQL 8.0 version support this setting.'
            log_backup_retention_day: '- (Optional) Binlog backup retention period. The value range is 7 to 365, in days. Explanation: When modifying the log backup policy, this parameter needs to be passed in.'
            retention_policy_synced: |-
                - (Optional) Is the retention policy for log backups the same as that for data backups?
                Explanation: When the value is true, LogBackupRetentionDay and BinlogBackupAllRetention are ignored.
        importStatements: []
    volcengine_rds_mysql_database:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql database
        name: volcengine_rds_mysql_database
        title: volcengine_rds_mysql_database
        examples:
            - name: foo
              manifest: |-
                {
                  "db_name": "acc-test",
                  "instance_id": "${volcengine_rds_mysql_instance.foo.id}"
                }
              references:
                instance_id: volcengine_rds_mysql_instance.foo.id
              dependencies:
                volcengine_rds_mysql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "MySQL_5_7",
                      "instance_name": "acc-test",
                      "lower_case_table_names": "1",
                      "node_spec": "rds.mysql.1c2g",
                      "parameters": [
                        {
                          "parameter_name": "auto_increment_increment",
                          "parameter_value": "2"
                        },
                        {
                          "parameter_name": "auto_increment_offset",
                          "parameter_value": "4"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 80,
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            character_set_name: '- (Optional, ForceNew) Database character set. Currently supported character sets include: utf8, utf8mb4, latin1, ascii.'
            db_name: |-
                - (Required, ForceNew) Name database.
                illustrate:
                Unique name.
                The length is 2~64 characters.
                Start with a letter and end with a letter or number.
                Consists of lowercase letters, numbers, and underscores (_) or dashes (-).
                Database names are disabled keywords.
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
        importStatements: []
    volcengine_rds_mysql_endpoint:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql endpoint
        name: volcengine_rds_mysql_endpoint
        title: volcengine_rds_mysql_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_add_new_nodes": true,
                  "description": "tf-test-1",
                  "domain": "mysql-38c3d4f05f6e-te-8c00-private.rds.ivolces.com",
                  "endpoint_name": "tf-test-1",
                  "instance_id": "mysql-38c3d4f05f6e",
                  "nodes": [
                    "Primary",
                    "mysql-38c3d4f05f6e-r3b0d"
                  ],
                  "port": "3306",
                  "read_only_node_distribution_type": "Custom",
                  "read_only_node_max_delay_time": 30,
                  "read_only_node_weight": [
                    {
                      "node_id": "mysql-38c3d4f05f6e-r3b0d",
                      "node_type": "ReadOnly",
                      "weight": 0
                    },
                    {
                      "node_type": "Primary",
                      "weight": 100
                    }
                  ],
                  "read_write_mode": "ReadWrite",
                  "read_write_spliting": true
                }
        argumentDocs:
            auto_add_new_nodes: |-
                - (Optional) When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
                true: Automatically add.
                false: Do not automatically add (default).
            description: '- (Optional) The description of the endpoint.'
            domain: '- (Optional) Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.'
            endpoint_id: '- (Optional, ForceNew) The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.'
            endpoint_name: '- (Optional) The name of the endpoint.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the mysql instance.'
            node_id: '- (Optional) Read-only nodes require NodeId to be passed, while primary nodes do not require it.'
            node_type: '- (Optional) The primary node needs to pass in the NodeType as Primary, while the read-only node does not need to pass it in.'
            nodes: '- (Required) List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in Primary.'
            port: '- (Optional) The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.'
            read_only_node_distribution_type: |-
                - (Optional) Read weight allocation mode. This parameter is required when enabling read-write separation setting to TRUE. Possible values:
                Default: Automatically allocate weights based on specifications (default).
                Custom: Custom weight allocation.
            read_only_node_max_delay_time: '- (Optional) The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.'
            read_only_node_weight: '- (Optional) Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.'
            read_write_mode: '- (Optional) Reading and writing mode: ReadWrite, ReadOnly(Default).'
            read_write_spliting: |-
                - (Optional) Enable read-write separation. Possible values: TRUE, FALSE.
                This setting can be configured when ReadWriteMode is set to read-write, but cannot be configured when ReadWriteMode is set to read-only. This parameter only applies to the default terminal.
            weight: '- (Required) The read weight of the node increases by 100, with a maximum value of 10000.'
        importStatements: []
    volcengine_rds_mysql_endpoint_public_address:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql endpoint public address
        name: volcengine_rds_mysql_endpoint_public_address
        title: volcengine_rds_mysql_endpoint_public_address
        examples:
            - name: foo
              manifest: |-
                {
                  "domain": "mysql-38c3d4f05f6e-test-01b0-public.rds.volces.com",
                  "eip_id": "eip-rrq618fo9c00v0x58s4r6ky",
                  "endpoint_id": "mysql-38c3d4f05f6e-custom-01b0",
                  "instance_id": "mysql-38c3d4f05f6e"
                }
        argumentDocs:
            domain: '- (Optional) The domain.'
            eip_id: '- (Required, ForceNew) The id of the eip.'
            endpoint_id: '- (Required, ForceNew) The id of the endpoint.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of mysql instance.'
        importStatements: []
    volcengine_rds_mysql_instance:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql instance
        name: volcengine_rds_mysql_instance
        title: volcengine_rds_mysql_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_info": [
                    {
                      "charge_type": "PostPaid"
                    }
                  ],
                  "db_engine_version": "MySQL_5_7",
                  "instance_name": "acc-test",
                  "lower_case_table_names": "1",
                  "node_spec": "rds.mysql.1c2g",
                  "parameters": [
                    {
                      "parameter_name": "auto_increment_increment",
                      "parameter_value": "2"
                    },
                    {
                      "parameter_name": "auto_increment_offset",
                      "parameter_value": "5"
                    }
                  ],
                  "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                  "project_name": "default",
                  "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                  "storage_space": 80,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
              references:
                primary_zone_id: data.volcengine_zones.foo.zones[0].id
                secondary_zone_id: data.volcengine_zones.foo.zones[0].id
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            addresses: '- Address list.'
            allow_list_ids: '- (Optional) Allow list Ids of the RDS instance.'
            allow_list_version: '- The version of allow list.'
            auto_add_new_nodes: '- When the terminal type is read-write terminal or read-only terminal, it supports setting whether new nodes are automatically added.'
            auto_renew: '- (Optional, ForceNew) Whether to automatically renew in prepaid scenarios.'
            backup_use: '- The instance has used backup space. Unit: GB.'
            binlog_dump: |-
                - Does it support the binlog capability? This parameter is returned only when the database proxy is enabled. Values:
                true: Yes.
                false: No.
            charge_detail: '- Payment methods.'
            charge_end_time: '- Billing expiry time (yearly and monthly only).'
            charge_info: '- (Required, ForceNew) Payment methods.'
            charge_start_time: '- Billing start time (pay-as-you-go & monthly subscription).'
            charge_status: |-
                - Pay status. Value:
                normal - normal
                overdue - overdue
                .
            charge_type: |-
                - (Required, ForceNew) Payment type. Value:
                PostPaid - Pay-As-You-Go
                PrePaid - Yearly and monthly (default).
                When the value of this field is PrePaid, the mysql instance cannot be deleted through terraform. Please unsubscribe the instance from the Volcengine console first, and then use terraform state rm volcengine_rds_mysql_instance.resource_name command to remove it from terraform state file and management.
            connection_pool_type: |-
                - (Optional) Connection pool type. Value range:
                Direct: Direct connection mode.
                Transaction: Transaction-level connection pool (default).
            create_time: '- The create time of the RDS instance.'
            data_sync_mode: '- Data synchronization mode.'
            day_kind: '- (Optional) Maintenance cycle granularity, values: Week: Week. Month: Month.'
            day_of_week: '- (Optional) Specify the maintainable time period of a certain day of the week. The values are: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday. Multiple selections are allowed. If this value is not specified or is empty, it defaults to specifying all seven days of the week.'
            db_engine_version: |-
                - (Required, ForceNew) Instance type. Value:
                MySQL_5_7
                MySQL_8_0.
            db_proxy_status: |-
                - The running status of the proxy instance. This parameter is returned only when the database proxy is enabled. Values:
                Creating: The proxy is being started.
                Running: The proxy is running.
                Shutdown: The proxy is closed.
                Deleting: The proxy is being closed.
            db_time_zone: '- (Optional, ForceNew) Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            description: '- Address description.'
            dns_visibility: '- DNS Visibility.'
            domain: '- Connect domain name.'
            eip_id: '- The ID of the EIP, only valid for Public addresses.'
            enable: |-
                - Whether it is enabled. Values:
                true: Enabled.
                false: Disabled.
            enable_read_only: '- Whether global read-only is enabled, value: Enable: Enable. Disable: Disabled.'
            enable_read_write_splitting: '- Whether read-write separation is enabled, value: Enable: Enable. Disable: Disabled.'
            endpoint_id: '- Instance connection terminal ID.'
            endpoint_name: '- The instance connection terminal name.'
            endpoint_type: |-
                - Terminal type:
                Cluster: The default terminal. (created by default)
                Primary: Primary node terminal.
                Custom: Custom terminal.
                Direct: Direct connection to the terminal. (Only the operation and maintenance side)
                AllNode: All node terminals. (Only the operation and maintenance side).
            endpoints: '- The endpoint info of the RDS instance.'
            feature_name: '- Feature name.'
            feature_states: '- Feature status.'
            global_read_only: |-
                - Whether to enable global read-only.
                true: Yes.
                false: No.
            id: '- ID of the resource.'
            idle_connection_reclaim: '- Whether the idle connection reclaim function is enabled. true: Enabled. false: Disabled.'
            instance_id: '- The ID of the RDS instance.'
            instance_name: |-
                - (Optional) Instance name. Cannot start with a number or a dash
                Can only contain Chinese characters, letters, numbers, underscores and dashes
                The length is limited between 1 ~ 128.
            instance_status: '- The status of the RDS instance.'
            ip_address: '- The IP Address.'
            key: '- (Required) The Key of Tags.'
            lower_case_table_names: |-
                - (Optional, ForceNew) Whether the table name is case sensitive, the default value is 1.
                Ranges:
                0: Table names are stored as fixed and table names are case-sensitive.
                1: Table names will be stored in lowercase and table names are not case sensitive.
            maintenance_time: '- (Optional) Maintenance period of an instance. Format: HH:mmZ-HH:mmZ (UTC time).'
            maintenance_window: '- (Optional) Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).'
            memory: '- Memory size.'
            network_type: '- Network address type, temporarily Private, Public, PublicService.'
            node_cpu_used_percentage: '- Average CPU usage of the instance master node in nearly one minute.'
            node_id: '- The ID of the node.'
            node_memory_used_percentage: '- Average memory usage of the instance master node in nearly one minute.'
            node_number: '- The number of nodes.'
            node_space_used_percentage: '- Average disk usage of the instance master node in nearly one minute.'
            node_spec: '- (Required) The specification of primary node and secondary node.'
            node_status: '- Node state, value: aligned with instance state.'
            node_type: '- The type of the node.'
            node_weight: '- The list of nodes configured by the connection terminal and the corresponding read-only weights.'
            nodes: '- Instance node information.'
            overdue_reclaim_time: '- Estimated release time when arrears are closed (pay-as-you-go & monthly subscription).'
            overdue_time: '- Shutdown time in arrears (pay-as-you-go & monthly subscription).'
            parameter_name: '- (Required) Parameter name.'
            parameter_value: '- (Required) Parameter value.'
            parameters: '- (Optional) Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.'
            period: '- (Optional, ForceNew) Purchase duration in prepaid scenarios. Default: 1.'
            period_unit: |-
                - (Optional, ForceNew) The purchase cycle in the prepaid scenario.
                Month - monthly subscription (default)
                Year - Package year.
            port: '- The Port.'
            primary_zone_id: '- (Required, ForceNew) The available zone of primary node.'
            project_name: '- (Optional) The project name of the RDS instance.'
            read_write_mode: |-
                - Read and write mode:
                ReadWrite: read and write
                ReadOnly: read only (default).
            region_id: '- Region ID, you can call the DescribeRegions query and use this parameter to specify the region where the instance is to be created.'
            secondary_zone_id: '- (Required, ForceNew) The available zone of secondary node.'
            storage_space: '- (Optional) Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.'
            storage_type: '- Instance storage type.'
            storage_use: '- The instance has used storage space. Unit: GB.'
            subnet_id: '- (Required, ForceNew) Subnet ID of the RDS instance.'
            support: |-
                - Whether it support this function. Value:
                true: Supported.
                false: Not supported.
            tags: '- (Optional) Tags.'
            temp_modify_end_time: '- Restore time of temporary upgrade.'
            temp_modify_start_time: '- Temporary upgrade start time.'
            time_zone: '- Time zone.'
            update_time: '- Node updates local time.'
            v_cpu: '- CPU size. For example: 1 means 1U.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- The vpc ID of the RDS instance.'
            weight: '- The weight of the node.'
            zone_id: '- Availability zone ID. Subsequent support for multi-availability zones can be separated and displayed by an English colon.'
            zone_ids: '- List of availability zones where each node of the instance is located.'
        importStatements: []
    volcengine_rds_mysql_instance_readonly_node:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql instance readonly node
        name: volcengine_rds_mysql_instance_readonly_node
        title: volcengine_rds_mysql_instance_readonly_node
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_rds_mysql_instance.foo.id}",
                  "node_spec": "rds.mysql.2c4g",
                  "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                }
              references:
                instance_id: volcengine_rds_mysql_instance.foo.id
                zone_id: data.volcengine_zones.foo.zones[0].id
              dependencies:
                volcengine_rds_mysql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "MySQL_5_7",
                      "instance_name": "acc-test",
                      "lower_case_table_names": "1",
                      "node_spec": "rds.mysql.1c2g",
                      "parameters": [
                        {
                          "parameter_name": "auto_increment_increment",
                          "parameter_value": "2"
                        },
                        {
                          "parameter_name": "auto_increment_offset",
                          "parameter_value": "4"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 80,
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The RDS mysql instance id of the readonly node.'
            node_id: '- The id of the readonly node.'
            node_spec: '- (Required) The specification of readonly node.'
            zone_id: '- (Required, ForceNew) The available zone of readonly node.'
        importStatements: []
    volcengine_rds_mysql_parameter_template:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds mysql parameter template
        name: volcengine_rds_mysql_parameter_template
        title: volcengine_rds_mysql_parameter_template
        examples:
            - name: foo
              manifest: |-
                {
                  "template_desc": "test",
                  "template_name": "test",
                  "template_params": [
                    {
                      "name": "auto_increment_increment",
                      "running_value": "1"
                    }
                  ],
                  "template_type": "Mysql",
                  "template_type_version": "MySQL_8_0"
                }
        argumentDocs:
            id: '- ID of the resource.'
            name: |-
                - (Required) Instance parameter name.
                Description: When using CreateParameterTemplate and ModifyParameterTemplate as request parameters, only Name and RunningValue need to be passed in.
            running_value: |-
                - (Required) Parameter running value.
                Description: When making request parameters in CreateParameterTemplate and ModifyParameterTemplate, only Name and RunningValue need to be passed in.
            template_desc: '- (Optional) Parameter template description.'
            template_name: '- (Required) Parameter template name.'
            template_params: '- (Required) Parameters contained in the parameter template.'
            template_type: '- (Required, ForceNew) Database type of parameter template. The default value is Mysql.'
            template_type_version: |-
                - (Required) Database version of parameter template. Value range:
                MySQL_5_7: Default value. MySQL 5.7 version.
                MySQL_8_0: MySQL 8.0 version.
        importStatements: []
    volcengine_rds_parameter_template:
        subCategory: RDS_MYSQL
        description: Provides a resource to manage rds parameter template
        name: volcengine_rds_parameter_template
        title: volcengine_rds_parameter_template
        examples:
            - name: foo
              manifest: |-
                {
                  "template_desc": "created by terraform",
                  "template_name": "tf-template",
                  "template_params": [
                    {
                      "name": "auto_increment_increment",
                      "running_value": "2"
                    },
                    {
                      "name": "slow_query_log",
                      "running_value": "ON"
                    },
                    {
                      "name": "net_retry_count",
                      "running_value": "33"
                    }
                  ],
                  "template_type": "MySQL",
                  "template_type_version": "MySQL_Community_5_7"
                }
        argumentDocs:
            id: '- ID of the resource.'
            name: '- (Optional) Parameter name.'
            running_value: '- (Optional) Parameter running value.'
            template_desc: '- (Optional) Parameter template description.'
            template_name: '- (Required) Parameter template name.'
            template_params: '- (Required) Template parameters. InstanceParam only needs to pass Name and RunningValue.'
            template_type: |-
                - (Optional, ForceNew) Parameter template database type, range of values:
                MySQL - MySQL database. (Defaults).
            template_type_version: |-
                - (Optional, ForceNew) Parameter template database version, value range:
                MySQL_Community_5_7 - MySQL 5.7 (default)
                MySQL_8_0 - MySQL 8.0.
        importStatements: []
    volcengine_rds_postgresql_account:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql account
        name: volcengine_rds_postgresql_account
        title: volcengine_rds_postgresql_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "acc-test-account",
                  "account_password": "93c@*****!ab12",
                  "account_type": "Super",
                  "instance_id": "postgres-954*****7233"
                }
            - name: foo1
              manifest: |-
                {
                  "account_name": "acc-test-account1",
                  "account_password": "9wc@****b12",
                  "account_privileges": "Inherit,Login,CreateRole,CreateDB",
                  "account_type": "Normal",
                  "instance_id": "postgres-95*****7233"
                }
        argumentDocs:
            account_name: '- (Required, ForceNew) Database account name.'
            account_password: '- (Required) The password of the database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            account_privileges: '- (Optional) The privilege information of account. When the account type is a super account, there is no need to pass in this parameter, and all privileges are supported by default. When the account type is a normal account, this parameter can be passed in, the default values are Login and Inherit.'
            account_status: '- The status of the database account.'
            account_type: |-
                - (Required, ForceNew) Database account type, value:
                Super: A high-privilege account. Only one database account can be created for an instance.
                Normal: An account with ordinary privileges.
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
        importStatements: []
    volcengine_rds_postgresql_allowlist:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql allowlist
        name: volcengine_rds_postgresql_allowlist
        title: volcengine_rds_postgresql_allowlist
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list": [
                    "192.168.0.0/24",
                    "192.168.1.0/24"
                  ],
                  "allow_list_desc": "acc-test",
                  "allow_list_name": "acc-test-allowlist",
                  "allow_list_type": "IPv4"
                }
        argumentDocs:
            allow_list: '- (Required) Enter an IP address or a range of IP addresses in CIDR format.'
            allow_list_desc: '- (Optional) The description of the postgresql allow list.'
            allow_list_name: '- (Required) The name of the postgresql allow list.'
            allow_list_type: '- (Optional, ForceNew) The type of IP address in the whitelist. Currently only IPv4 addresses are supported.'
            associated_instance_num: '- The total number of instances bound under the whitelist.'
            associated_instances: '- The list of postgresql instances.'
            id: '- ID of the resource.'
            instance_id: '- The id of the postgresql instance.'
            instance_name: '- The name of the postgresql instance.'
            vpc: '- The id of the vpc.'
        importStatements: []
    volcengine_rds_postgresql_allowlist_associate:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql allowlist associate
        name: volcengine_rds_postgresql_allowlist_associate
        title: volcengine_rds_postgresql_allowlist_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_id": "${volcengine_rds_postgresql_allowlist.foo.id}",
                  "instance_id": "${volcengine_rds_postgresql_instance.foo.id}"
                }
              references:
                allow_list_id: volcengine_rds_postgresql_allowlist.foo.id
                instance_id: volcengine_rds_postgresql_instance.foo.id
              dependencies:
                volcengine_rds_postgresql_allowlist.foo: |-
                    {
                      "allow_list": [
                        "192.168.0.0/24",
                        "192.168.1.0/24"
                      ],
                      "allow_list_desc": "acc-test",
                      "allow_list_name": "acc-test-allowlist",
                      "allow_list_type": "IPv4"
                    }
                volcengine_rds_postgresql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "PostgreSQL_12",
                      "instance_name": "acc-test-postgresql",
                      "node_spec": "rds.postgres.1c2g",
                      "parameters": [
                        {
                          "name": "auto_explain.log_analyze",
                          "value": "off"
                        },
                        {
                          "name": "auto_explain.log_format",
                          "value": "text"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "project_name": "default",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 40,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tfk1",
                          "value": "tfv1"
                        }
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allow_list_id: '- (Required, ForceNew) The id of the postgresql allow list.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the postgresql instance.'
        importStatements: []
    volcengine_rds_postgresql_database:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql database
        name: volcengine_rds_postgresql_database
        title: volcengine_rds_postgresql_database
        examples:
            - name: foo
              manifest: |-
                {
                  "c_type": "C",
                  "collate": "zh_CN.utf8",
                  "db_name": "acc-test",
                  "instance_id": "postgres-95*******233"
                }
        argumentDocs:
            c_type: '- (Optional, ForceNew) Character classification. Value range: C (default), C.UTF-8, en_US.utf8, zh_CN.utf8, and POSIX.'
            character_set_name: '- (Optional, ForceNew) Database character set. Currently supported character sets include: utf8, latin1, ascii. Default is utf8.'
            collate: '- (Optional, ForceNew) The collate of database. Sorting rules. Value range: C (default), C.UTF-8, en_US.utf8, zh_CN.utf8 and POSIX.'
            db_name: '- (Required, ForceNew) The name of database.'
            db_status: '- The status of the RDS database.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the RDS instance.'
            owner: '- (Optional, ForceNew) The owner of database.'
        importStatements: []
    volcengine_rds_postgresql_instance:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql instance
        name: volcengine_rds_postgresql_instance
        title: volcengine_rds_postgresql_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_info": [
                    {
                      "charge_type": "PostPaid"
                    }
                  ],
                  "db_engine_version": "PostgreSQL_12",
                  "instance_name": "acc-test-1",
                  "node_spec": "rds.postgres.1c2g",
                  "parameters": [
                    {
                      "name": "auto_explain.log_analyze",
                      "value": "off"
                    },
                    {
                      "name": "auto_explain.log_format",
                      "value": "text"
                    }
                  ],
                  "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                  "project_name": "default",
                  "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                  "storage_space": 40,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "tfk1",
                      "value": "tfv1"
                    }
                  ]
                }
              references:
                primary_zone_id: data.volcengine_zones.foo.zones[0].id
                secondary_zone_id: data.volcengine_zones.foo.zones[0].id
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            address: '- Address list.'
            auto_add_new_nodes: '- When the terminal type is read-write terminal or read-only terminal, it supports setting whether new nodes are automatically added.'
            auto_renew: '- (Optional, ForceNew) Whether to automatically renew in prepaid scenarios.'
            backup_use: '- The instance has used backup space. Unit: GB.'
            charge_detail: '- Payment methods.'
            charge_end_time: '- Billing expiry time (yearly and monthly only).'
            charge_info: '- (Required, ForceNew) Payment methods.'
            charge_start_time: '- Billing start time (pay-as-you-go & monthly subscription).'
            charge_status: |-
                - Pay status. Value:
                normal - normal
                overdue - overdue
                .
            charge_type: |-
                - (Required, ForceNew) Payment type. Value:
                PostPaid - Pay-As-You-Go
                PrePaid - Yearly and monthly (default).
                When the value of this field is PrePaid, the postgresql instance cannot be deleted through terraform. Please unsubscribe the instance from the Volcengine console first, and then use terraform state rm volcengine_rds_postgresql_instance.resource_name command to remove it from terraform state file and management.
            create_time: '- The create time of the RDS PostgreSQL instance.'
            data_sync_mode: '- Data synchronization mode.'
            db_engine_version: '- (Required, ForceNew) Instance type. Value: PostgreSQL_11, PostgreSQL_12, PostgreSQL_13.'
            description: '- Address description.'
            dns_visibility: '- DNS Visibility.'
            domain: '- Connect domain name.'
            eip_id: '- The ID of the EIP, only valid for Public addresses.'
            enable_read_only: '- Whether global read-only is enabled, value: Enable: Enable. Disable: Disabled.'
            enable_read_write_splitting: '- Whether read-write separation is enabled, value: Enable: Enable. Disable: Disabled.'
            endpoint_id: '- Instance connection terminal ID.'
            endpoint_name: '- The instance connection terminal name.'
            endpoint_type: |-
                - Terminal type:
                Cluster: The default terminal. (created by default)
                Primary: Primary node terminal.
                Custom: Custom terminal.
                Direct: Direct connection to the terminal. (Only the operation and maintenance side)
                AllNode: All node terminals. (Only the operation and maintenance side).
            endpoints: '- The endpoint info of the RDS instance.'
            id: '- ID of the resource.'
            instance_id: '- The ID of the RDS PostgreSQL instance.'
            instance_name: '- (Optional) Instance name. Cannot start with a number or a dash. Can only contain Chinese characters, letters, numbers, underscores and dashes. The length is limited between 1 ~ 128.'
            instance_status: '- The status of the RDS PostgreSQL instance.'
            instance_type: '- The instance type of the RDS PostgreSQL instance.'
            ip_address: '- The IP Address.'
            key: '- (Required) The Key of Tags.'
            memory: '- Memory size.'
            name: '- (Required) Parameter name.'
            network_type: '- Network address type, temporarily Private, Public, PublicService.'
            node_id: '- The ID of the node.'
            node_number: '- The number of nodes.'
            node_spec: '- (Required) The specification of primary node and secondary node.'
            node_status: '- Node state, value: aligned with instance state.'
            node_type: '- The type of the node.'
            nodes: '- Instance node information.'
            overdue_reclaim_time: '- Estimated release time when arrears are closed (pay-as-you-go & monthly subscription).'
            overdue_time: '- Shutdown time in arrears (pay-as-you-go & monthly subscription).'
            parameters: '- (Optional) Parameter of the RDS PostgreSQL instance. This field can only be added or modified. Deleting this field is invalid.'
            period: '- (Optional, ForceNew) Purchase duration in prepaid scenarios. Default: 1.'
            period_unit: |-
                - (Optional, ForceNew) The purchase cycle in the prepaid scenario.
                Month - monthly subscription (default)
                Year - Package year.
            port: '- The Port.'
            primary_zone_id: '- (Required, ForceNew) The available zone of primary node.'
            project_name: '- (Optional) The project name of the RDS instance.'
            read_only_node_weight: '- The list of nodes configured by the connection terminal and the corresponding read-only weights.'
            read_write_mode: |-
                - Read and write mode:
                ReadWrite: read and write
                ReadOnly: read only (default).
            region_id: '- Region ID, you can call the DescribeRegions query and use this parameter to specify the region where the instance is to be created.'
            secondary_zone_id: '- (Required, ForceNew) The available zone of secondary node.'
            storage_space: '- (Optional) Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.'
            storage_type: '- Instance storage type.'
            subnet_id: '- (Required, ForceNew) Subnet ID of the RDS PostgreSQL instance.'
            tags: '- (Optional) Tags.'
            temp_modify_end_time: '- Temporary upgrade of restoration time.'
            temp_modify_start_time: '- Start time of temporary upgrade.'
            update_time: '- Node updates local time.'
            v_cpu: '- CPU size. For example: 1 means 1U.'
            value: '- (Required) Parameter value.'
            vpc_id: '- The vpc ID of the RDS PostgreSQL instance.'
            weight: '- The weight of the node.'
            zone_id: '- Availability zone ID. Subsequent support for multi-availability zones can be separated and displayed by an English colon.'
            zone_ids: '- ID of the availability zone where each instance is located.'
        importStatements: []
    volcengine_rds_postgresql_instance_readonly_node:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql instance readonly node
        name: volcengine_rds_postgresql_instance_readonly_node
        title: volcengine_rds_postgresql_instance_readonly_node
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_rds_postgresql_instance.foo.id}",
                  "node_spec": "rds.postgres.1c2g",
                  "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                }
              references:
                instance_id: volcengine_rds_postgresql_instance.foo.id
                zone_id: data.volcengine_zones.foo.zones[0].id
              dependencies:
                volcengine_rds_postgresql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "PostgreSQL_12",
                      "instance_name": "acc-test-1",
                      "node_spec": "rds.postgres.1c2g",
                      "parameters": [
                        {
                          "name": "auto_explain.log_analyze",
                          "value": "off"
                        },
                        {
                          "name": "auto_explain.log_format",
                          "value": "text"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "project_name": "default",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 40,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tfk1",
                          "value": "tfv1"
                        }
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The RDS PostgreSQL instance id of the readonly node.'
            node_id: '- The id of the readonly node.'
            node_spec: '- (Required) The specification of readonly node.'
            zone_id: '- (Required, ForceNew) The available zone of readonly node.'
        importStatements: []
    volcengine_rds_postgresql_schema:
        subCategory: RDS_POSTGRESQL
        description: Provides a resource to manage rds postgresql schema
        name: volcengine_rds_postgresql_schema
        title: volcengine_rds_postgresql_schema
        examples:
            - name: foo
              manifest: |-
                {
                  "db_name": "${volcengine_rds_postgresql_database.foo.db_name}",
                  "instance_id": "${volcengine_rds_postgresql_instance.foo.id}",
                  "owner": "${volcengine_rds_postgresql_account.foo.account_name}",
                  "schema_name": "acc-test-schema"
                }
              references:
                db_name: volcengine_rds_postgresql_database.foo.db_name
                instance_id: volcengine_rds_postgresql_instance.foo.id
                owner: volcengine_rds_postgresql_account.foo.account_name
              dependencies:
                volcengine_rds_postgresql_account.foo: |-
                    {
                      "account_name": "acc-test-account",
                      "account_password": "9wc@********12",
                      "account_privileges": "Inherit,Login,CreateRole,CreateDB",
                      "account_type": "Normal",
                      "instance_id": "${volcengine_rds_postgresql_instance.foo.id}"
                    }
                volcengine_rds_postgresql_account.foo1: |-
                    {
                      "account_name": "acc-test-account1",
                      "account_password": "9wc@*******12",
                      "account_privileges": "Inherit,Login,CreateRole,CreateDB",
                      "account_type": "Normal",
                      "instance_id": "${volcengine_rds_postgresql_instance.foo.id}"
                    }
                volcengine_rds_postgresql_database.foo: |-
                    {
                      "c_type": "C",
                      "collate": "zh_CN.utf8",
                      "db_name": "acc-test",
                      "instance_id": "${volcengine_rds_postgresql_instance.foo.id}"
                    }
                volcengine_rds_postgresql_instance.foo: |-
                    {
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "db_engine_version": "PostgreSQL_12",
                      "instance_name": "acc-test-1",
                      "node_spec": "rds.postgres.1c2g",
                      "parameters": [
                        {
                          "name": "auto_explain.log_analyze",
                          "value": "off"
                        },
                        {
                          "name": "auto_explain.log_format",
                          "value": "text"
                        }
                      ],
                      "primary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "project_name": "default",
                      "secondary_zone_id": "${data.volcengine_zones.foo.zones[0].id}",
                      "storage_space": 40,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tfk1",
                          "value": "tfv1"
                        }
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            db_name: '- (Required, ForceNew) The name of the database.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the postgresql instance.'
            owner: '- (Required) The owner of the schema.'
            schema_name: '- (Required, ForceNew) The name of the schema.'
        importStatements: []
    volcengine_redis_account:
        subCategory: REDIS
        description: Provides a resource to manage redis account
        name: volcengine_redis_account
        title: volcengine_redis_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "acc_test_account",
                  "instance_id": "${volcengine_redis_instance.foo.id}",
                  "password": "Password@@",
                  "role_name": "ReadOnly"
                }
              references:
                instance_id: volcengine_redis_instance.foo.id
              dependencies:
                volcengine_redis_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "deletion_protection": "disabled",
                      "engine_version": "5.0",
                      "instance_name": "acc-test-tf-redis",
                      "node_number": 2,
                      "password": "1qaz!QAZ12",
                      "port": 6381,
                      "project_name": "default",
                      "shard_capacity": 1024,
                      "shard_number": 2,
                      "sharded_cluster": 1,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_auth_mode": "close",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_name: '- (Required, ForceNew) Redis account name.'
            description: '- (Optional) The description of the redis account.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of the Redis instance.'
            password: '- (Required) The password of the redis account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            role_name: '- (Required) Role type, the valid value can be Administrator, ReadWrite, ReadOnly, NotDangerous.'
        importStatements: []
    volcengine_redis_allow_list:
        subCategory: REDIS
        description: Provides a resource to manage redis allow list
        name: volcengine_redis_allow_list
        title: volcengine_redis_allow_list
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list": [
                    "0.0.0.0/0",
                    "192.168.0.0/24",
                    "192.168.1.1",
                    "192.168.2.22"
                  ],
                  "allow_list_desc": "acctftestallowlist",
                  "allow_list_name": "acc_test_tf_allowlist_create"
                }
        argumentDocs:
            allow_list: '- (Required) Ip list of allow list.'
            allow_list_desc: '- (Optional) Description of allow list.'
            allow_list_id: '- Id of allow list.'
            allow_list_ip_num: '- The IP number of allow list.'
            allow_list_name: '- (Required) Name of allow list.'
            allow_list_type: '- Type of allow list.'
            associated_instance_num: '- The number of instance that associated to allow list.'
            associated_instances: '- Instances associated by this allow list.'
            id: '- ID of the resource.'
            instance_id: '- Id of instance.'
            instance_name: '- Name of instance.'
            vpc: '- Id of virtual private cloud.'
        importStatements: []
    volcengine_redis_allow_list_associate:
        subCategory: REDIS
        description: Provides a resource to manage redis allow list associate
        name: volcengine_redis_allow_list_associate
        title: volcengine_redis_allow_list_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_id": "${volcengine_redis_allow_list.foo.id}",
                  "instance_id": "${volcengine_redis_instance.foo.id}"
                }
              references:
                allow_list_id: volcengine_redis_allow_list.foo.id
                instance_id: volcengine_redis_instance.foo.id
              dependencies:
                volcengine_redis_allow_list.foo: |-
                    {
                      "allow_list": [
                        "192.168.0.0/24"
                      ],
                      "allow_list_name": "acc-test-allowlist"
                    }
                volcengine_redis_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "deletion_protection": "disabled",
                      "engine_version": "5.0",
                      "instance_name": "acc-test-tf-redis",
                      "node_number": 2,
                      "password": "1qaz!QAZ12",
                      "port": 6381,
                      "project_name": "default",
                      "shard_capacity": 1024,
                      "shard_number": 2,
                      "sharded_cluster": 1,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_auth_mode": "close",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allow_list_id: '- (Required, ForceNew) Id of allow list to associate.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) Id of instance to associate.'
        importStatements: []
    volcengine_redis_backup:
        subCategory: REDIS
        description: Provides a resource to manage redis backup
        name: volcengine_redis_backup
        title: volcengine_redis_backup
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_redis_instance.foo.id}"
                }
              references:
                instance_id: volcengine_redis_instance.foo.id
              dependencies:
                volcengine_redis_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "deletion_protection": "disabled",
                      "engine_version": "5.0",
                      "instance_name": "acc-test-tf-redis",
                      "node_number": 2,
                      "password": "1qaz!QAZ12",
                      "port": 6381,
                      "project_name": "default",
                      "shard_capacity": 1024,
                      "shard_number": 2,
                      "sharded_cluster": 1,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_auth_mode": "close",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- Id of account.'
            arch_type: '- Arch type of instance(Standard/Cluster).'
            backup_point_id: '- The id of backup point.'
            backup_strategy: '- Backup strategy.'
            backup_type: '- Backup type.'
            charge_type: '- Charge type of instance(Postpaid/Prepaid).'
            end_time: '- End time of backup.'
            engine_version: '- Engine version of instance.'
            expired_time: '- Expired time of instance.'
            id: '- ID of the resource.'
            instance_detail: '- Information of instance.'
            instance_id: '- (Required, ForceNew) Id of instance to create backup.'
            instance_name: '- Name of instance.'
            maintenance_time: '- The maintainable period (in UTC) of the instance.'
            name: '- Name of vpc.'
            network_type: '- Network type of instance.'
            project_name: '- Project name of instance.'
            region_id: '- Id of region.'
            replicas: '- Count of replica in which shard.'
            server_cpu: '- Count of cpu cores of instance.'
            shard_capacity: '- Capacity of shard.'
            shard_count: '- Count of shard.'
            size: '- Size in MiB.'
            start_time: '- Start time of backup.'
            status: '- Status of backup (Creating/Available/Unavailable/Deleting).'
            total_capacity: '- Total capacity of instance.'
            used_capacity: '- Capacity used of this instance.'
            vpc_info: '- Information of vpc.'
            zone_ids: '- List of id of zone.'
        importStatements: []
    volcengine_redis_backup_restore:
        subCategory: REDIS
        description: Provides a resource to manage redis backup restore
        name: volcengine_redis_backup_restore
        title: volcengine_redis_backup_restore
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_type": "Full",
                  "instance_id": "${volcengine_redis_instance.foo.id}",
                  "time_point": "${volcengine_redis_backup.foo.end_time}"
                }
              references:
                instance_id: volcengine_redis_instance.foo.id
                time_point: volcengine_redis_backup.foo.end_time
              dependencies:
                volcengine_redis_backup.foo: |-
                    {
                      "instance_id": "${volcengine_redis_instance.foo.id}"
                    }
                volcengine_redis_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "deletion_protection": "disabled",
                      "engine_version": "5.0",
                      "instance_name": "acc-test-tf-redis",
                      "node_number": 2,
                      "password": "1qaz!QAZ12",
                      "port": 6381,
                      "project_name": "default",
                      "shard_capacity": 1024,
                      "shard_number": 2,
                      "sharded_cluster": 1,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_auth_mode": "close",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            backup_type: '- (Optional) The type of backup. The value can be Full or Inc.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) Id of instance.'
            time_point: '- (Required) Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignore_changes in import.'
        importStatements: []
    volcengine_redis_continuous_backup:
        subCategory: REDIS
        description: Provides a resource to manage redis continuous backup
        name: volcengine_redis_continuous_backup
        title: volcengine_redis_continuous_backup
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_redis_instance.foo.id}"
                }
              references:
                instance_id: volcengine_redis_instance.foo.id
              dependencies:
                volcengine_redis_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "deletion_protection": "disabled",
                      "engine_version": "5.0",
                      "instance_name": "acc-test-tf-redis",
                      "node_number": 2,
                      "password": "1qaz!QAZ12",
                      "port": 6381,
                      "project_name": "default",
                      "shard_capacity": 1024,
                      "shard_number": 2,
                      "sharded_cluster": 1,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_auth_mode": "close",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The Id of redis instance.'
        importStatements: []
    volcengine_redis_endpoint:
        subCategory: REDIS
        description: Provides a resource to manage redis endpoint
        name: volcengine_redis_endpoint
        title: volcengine_redis_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "eip_id": "${volcengine_eip_address.foo.id}",
                  "instance_id": "${volcengine_redis_instance.foo.id}"
                }
              references:
                eip_id: volcengine_eip_address.foo.id
                instance_id: volcengine_redis_instance.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip"
                    }
                volcengine_redis_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "deletion_protection": "disabled",
                      "engine_version": "5.0",
                      "instance_name": "acc-test-tf-redis",
                      "node_number": 2,
                      "password": "1qaz!QAZ12",
                      "port": 6381,
                      "project_name": "default",
                      "shard_capacity": 1024,
                      "shard_number": 2,
                      "sharded_cluster": 1,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_auth_mode": "close",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_id: '- (Required, ForceNew) Id of eip.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) Id of instance.'
        importStatements: []
    volcengine_redis_instance:
        subCategory: REDIS
        description: Provides a resource to manage redis instance
        name: volcengine_redis_instance
        title: volcengine_redis_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "apply_immediately": true,
                  "backup_active": true,
                  "backup_hour": 6,
                  "backup_period": [
                    1,
                    2,
                    3
                  ],
                  "charge_type": "PostPaid",
                  "configure_nodes": [
                    {
                      "az": "cn-beijing-a"
                    },
                    {
                      "az": "cn-beijing-b"
                    },
                    {
                      "az": "cn-beijing-c"
                    },
                    {
                      "az": "cn-beijing-b"
                    }
                  ],
                  "create_backup": false,
                  "deletion_protection": "disabled",
                  "engine_version": "5.0",
                  "instance_name": "tf-test2",
                  "multi_az": "enabled",
                  "node_number": 4,
                  "param_values": [
                    {
                      "name": "active-defrag-cycle-min",
                      "value": "5"
                    },
                    {
                      "name": "active-defrag-cycle-max",
                      "value": "28"
                    }
                  ],
                  "password": "1qaz!QAZ12",
                  "port": 6381,
                  "project_name": "default",
                  "shard_capacity": 1024,
                  "shard_number": 2,
                  "sharded_cluster": 1,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    },
                    {
                      "key": "k3",
                      "value": "v3"
                    }
                  ],
                  "vpc_auth_mode": "close"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            additional_bandwidth: '- (Optional) Modify the single-shard additional bandwidth of the target Redis instance. Set the additional bandwidth of a single shard, that is, the bandwidth that needs to be additionally increased on the basis of the default bandwidth. Unit: MB/s. The value of additional bandwidth needs to meet the following conditions at the same time: It must be greater than or equal to 0. When the value is 0, it means that no additional bandwidth is added, and the bandwidth of a single shard is the default bandwidth. The sum of additional bandwidth and default bandwidth cannot exceed the upper limit of bandwidth that can be modified for the current instance. Different specification nodes have different upper limits of bandwidth that can be modified. For more details, please refer to bandwidth modification range. The upper limits of the total write bandwidth and the total read bandwidth of an instance are both 2048MB/s.'
            apply_immediately: '- (Optional) Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.'
            auto_renew: |-
                - (Optional) Whether to enable automatic renewal. This field is valid only when ChargeType is PrePaid, the default value is false.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            az: |-
                - (Required) Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
                When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
            backup_active: '- (Optional) Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.'
            backup_hour: |-
                - (Optional) The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
                This field is valid and required when updating the backup plan of primary and secondary instance.
            backup_period: |-
                - (Optional) The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
                This field is valid and required when updating the backup plan of primary and secondary instance.
            charge_type: '- (Optional) The charge type of redis instance. Valid value: PostPaid, PrePaid.'
            configure_nodes: '- (Optional) Set the list of available zones to which the node belongs.'
            create_backup: '- (Optional) Whether to create a final backup when modify the instance configuration or destroy the redis instance.'
            deletion_protection: '- (Optional) Whether enable deletion protection for redis instance. Valid values: enabled, disabled(default).'
            engine_version: '- (Required, ForceNew) The engine version of redis instance. Valid value: 5.0, 6.0, 7.0.'
            id: '- ID of the resource.'
            instance_name: '- (Optional) The name of the redis instance.'
            key: '- (Required) The Key of Tags.'
            multi_az: |-
                - (Optional) Set the availability zone deployment scheme for the instance. The value range is as follows:
                disabled: Single availability zone deployment scheme.
                enabled: Multi-availability zone deployment scheme.
                Description:
                When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
            name: '- (Required) The name of configuration parameter.'
            node_number: '- (Required) The number of nodes in each shard, the valid value range is 1-6. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.'
            param_values: |-
                - (Optional) The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields, or use the command terraform apply to perform a modification operation.
            password: '- (Optional) The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields. If this parameter is left blank, it means that no password is set for the default account. At this time, the system will automatically generate a password for the default account to ensure instance access security. No account can obtain this random password. Therefore, before connecting to the instance, you need to reset the password of the default account through the ModifyDBAccount interface.You can also set a new account and password through the CreateDBAccount interface according to business needs. If you need to use password-free access function, you need to enable password-free access first through the ModifyDBInstanceVpcAuthMode interface.'
            port: '- (Optional, ForceNew) The port of custom define private network address. The valid value range is 1024-65535. The default value is 6379.'
            project_name: '- (Optional) The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will be added to the default project.'
            purchase_months: |-
                - (Optional) The purchase months of redis instance, the unit is month. the valid value range is as fallows: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36. This field is valid and required when ChargeType is Prepaid.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            shard_capacity: '- (Required) The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of ShardedCluster is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of ShardedCluster is 1: 1024, 2048, 4096, 8192, 16384. When the value of node_number is 1, the value of this field can not be 256.'
            shard_number: '- (Optional) The number of shards in redis instance, the valid value range is 2-256. This field is valid and required when the value of ShardedCluster is 1.'
            sharded_cluster: '- (Required) Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.'
            subnet_id: '- (Required) The subnet id of the redis instance. The specified subnet id must belong to the zone ids.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The value of configuration parameter.'
            vpc_auth_mode: '- (Optional) Whether to enable password-free access when connecting to an instance through a private network. Valid values: open, close.'
            zone_ids: '- (Optional, Deprecated) This field has been deprecated after version-0.0.152. Please use multi_az and configure_nodes to specify the availability zone. The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.'
        importStatements: []
    volcengine_redis_instance_state:
        subCategory: REDIS
        description: Provides a resource to manage redis instance state
        name: volcengine_redis_instance_state
        title: volcengine_redis_instance_state
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "Restart",
                  "instance_id": "redis-cnlficlt4974swtbz"
                }
        argumentDocs:
            action: '- (Required, ForceNew) Instance Action, the value can be Restart.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) Id of Instance.'
        importStatements: []
    volcengine_rocketmq_access_key:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq access key
        name: volcengine_rocketmq_access_key
        title: volcengine_rocketmq_access_key
        examples:
            - name: foo
              manifest: |-
                {
                  "all_authority": "SUB",
                  "description": "acc-test-key",
                  "instance_id": "${volcengine_rocketmq_instance.foo.id}"
                }
              references:
                instance_id: volcengine_rocketmq_instance.foo.id
              dependencies:
                volcengine_rocketmq_instance.foo: |-
                    {
                      "auto_scale_queue": true,
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rocketmq.n1.x2.micro",
                      "file_reserved_time": 10,
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rocketmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "version": "4.8",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            access_key: '- The access key id of the rocketmq key.'
            acl_config_json: '- The acl config of the rocketmq key.'
            actived: '- The active status of the rocketmq key.'
            all_authority: '- (Required) The default authority of the rocketmq topic. Valid values: ALL, PUB, SUB, DENY. Default is DENY.'
            create_time: '- The create time of the rocketmq key.'
            description: '- (Required, ForceNew) The description of the rocketmq topic. The description is used to effectively distinguish and manage keys. Please use different descriptions for each key.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of rocketmq instance.'
            permission: '- The custom authority for the topic.'
            secret_key: '- The secret key of the rocketmq key.'
            topic_name: '- The name of the rocketmq topic.'
            topic_permissions: '- The custom authority of the rocketmq key.'
        importStatements: []
    volcengine_rocketmq_allow_list:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq allow list
        name: volcengine_rocketmq_allow_list
        title: volcengine_rocketmq_allow_list
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list": [
                    "192.168.0.0/24",
                    "192.168.2.0/24"
                  ],
                  "allow_list_desc": "acc-test",
                  "allow_list_name": "acc-test-allow-list"
                }
        argumentDocs:
            allow_list: '- (Required) The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.'
            allow_list_desc: '- (Optional) The description of the allow list.'
            allow_list_ip_num: '- The number of ip address in the rocketmq allow list.'
            allow_list_name: '- (Required) The name of the allow list.'
            allow_list_type: '- The type of the rocketmq allow list.'
            associated_instance_num: '- The number of the rocketmq instances associated with the allow list.'
            associated_instances: '- The associated instance information of the allow list.'
            id: '- ID of the resource.'
            instance_id: '- The id of the rocketmq instance.'
            instance_name: '- The name of the rocketmq instance.'
            vpc: '- The vpc id of the rocketmq instance.'
        importStatements: []
    volcengine_rocketmq_allow_list_associate:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq allow list associate
        name: volcengine_rocketmq_allow_list_associate
        title: volcengine_rocketmq_allow_list_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_id": "${volcengine_rocketmq_allow_list.foo.id}",
                  "instance_id": "${volcengine_rocketmq_instance.foo.id}"
                }
              references:
                allow_list_id: volcengine_rocketmq_allow_list.foo.id
                instance_id: volcengine_rocketmq_instance.foo.id
              dependencies:
                volcengine_rocketmq_allow_list.foo: |-
                    {
                      "allow_list": [
                        "192.168.0.0/24",
                        "192.168.2.0/24"
                      ],
                      "allow_list_desc": "acc-test",
                      "allow_list_name": "acc-test-allow-list"
                    }
                volcengine_rocketmq_instance.foo: |-
                    {
                      "auto_scale_queue": true,
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rocketmq.n1.x2.micro",
                      "file_reserved_time": 10,
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rocketmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "version": "4.8",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allow_list_id: '- (Required, ForceNew) The id of the rocketmq allow list.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the rocketmq instance.'
        importStatements: []
    volcengine_rocketmq_group:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq group
        name: volcengine_rocketmq_group
        title: volcengine_rocketmq_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "group_id": "acc-test-rocketmq-group",
                  "instance_id": "${volcengine_rocketmq_instance.foo.id}"
                }
              references:
                instance_id: volcengine_rocketmq_instance.foo.id
              dependencies:
                volcengine_rocketmq_instance.foo: |-
                    {
                      "auto_scale_queue": true,
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rocketmq.n1.x2.micro",
                      "file_reserved_time": 10,
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rocketmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "version": "4.8",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            create_time: '- The create time of the rocketmq group.'
            description: '- (Optional, ForceNew) The description of rocketmq group.'
            group_id: '- (Required, ForceNew) The id of rocketmq group.'
            group_type: '- The type of the rocketmq group.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of rocketmq instance.'
            is_sub_same: '- Whether the subscription relationship of consumer instance groups within the group is consistent.'
            message_delay_time: '- The message delay time of the rocketmq group. The unit is milliseconds.'
            message_model: '- The message model of the rocketmq group.'
            status: '- The status of the rocketmq group.'
            total_consume_rate: '- The total consume rate of the rocketmq group. The unit is per second.'
            total_diff: '- The total amount of unconsumed messages.'
        importStatements: []
    volcengine_rocketmq_instance:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq instance
        name: volcengine_rocketmq_instance
        title: volcengine_rocketmq_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_scale_queue": true,
                  "charge_info": [
                    {
                      "charge_type": "PostPaid"
                    }
                  ],
                  "compute_spec": "rocketmq.n1.x2.micro",
                  "file_reserved_time": 10,
                  "instance_description": "acc-test",
                  "instance_name": "acc-test-rocketmq",
                  "project_name": "default",
                  "storage_space": 300,
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "version": "4.8",
                  "zone_ids": [
                    "${data.volcengine_zones.foo.zones[0].id}"
                  ]
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- The account id of the rocketmq instance.'
            apply_private_dns_to_public: '- Whether the private dns to public function is enabled for the rocketmq instance.'
            auto_renew: '- (Optional) Whether to automatically renew in prepaid scenarios. Default is false.'
            auto_scale_queue: '- (Optional) Whether to create queue automatically when the spec of the instance is changed. This field is effective only when modifying compute_field and storage_space.'
            available_queue_number: '- The available queue number of the rocketmq instance.'
            charge_info: '- (Required) The charge information of the rocketmq instance.'
            charge_type: '- (Required) The charge type of the rocketmq instance. Valid values: PostPaid, PrePaid.'
            compute_spec: '- (Required) The compute spec of the rocketmq instance.'
            connection_info: '- The connection information of the rocketmq.'
            create_time: '- The create time of the rocketmq instance.'
            eip_id: '- The eip id of the rocketmq instance.'
            enable_ssl: '- Whether the ssl authentication is enabled for the rocketmq instance.'
            endpoint_address_ip: '- The endpoint address ip of the rocketmq.'
            endpoint_type: '- The endpoint type of the rocketmq.'
            file_reserved_time: '- (Required, ForceNew) The reserved time of messages on the RocketMQ server of the message queue. Messages that exceed the reserved time will be cleared after expiration. The unit is in hours. Valid value range is 1~72.'
            id: '- ID of the resource.'
            instance_description: '- (Optional) The instance description of the rocketmq instance.'
            instance_name: '- (Optional) The instance name of the rocketmq instance.'
            instance_status: '- The status of the rocketmq instance.'
            internal_endpoint: '- The internal endpoint of the rocketmq.'
            key: '- (Required) The Key of Tags.'
            network_type: '- The network type of the rocketmq.'
            period: '- (Optional) Purchase duration in prepaid scenarios. When PeriodUnit is specified as Monthly, the value range is 1-9. When PeriodUnit is specified as Yearly, the value range is 1-3. Default is 1.'
            period_unit: '- (Optional) The purchase cycle in the prepaid scenario. Valid values: Monthly, Yearly. Default is Monthly.'
            project_name: '- (Optional) The project name of the rocketmq instance.'
            public_endpoint: '- The public endpoint of the rocketmq.'
            region_id: '- The region id of the rocketmq instance.'
            ssl_mode: '- The ssl mode of the rocketmq instance.'
            storage_space: '- (Required) The storage space of the rocketmq instance.'
            subnet_id: '- (Required, ForceNew) The subnet id of the rocketmq instance.'
            tags: '- (Optional) Tags.'
            used_group_number: '- The used group number of the rocketmq instance.'
            used_queue_number: '- The used queue number of the rocketmq instance.'
            used_storage_space: '- The used storage space of the rocketmq instance.'
            used_topic_number: '- The used topic number of the rocketmq instance.'
            value: '- (Required) The Value of Tags.'
            version: '- (Required, ForceNew) The version of the rocketmq instance. Valid values: 4.8.'
            vpc_id: '- The vpc id of the rocketmq instance.'
            zone_ids: '- (Required, ForceNew) The zone id of the rocketmq instance. Support specifying multiple availability zones.'
        importStatements: []
    volcengine_rocketmq_public_address:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq public address
        name: volcengine_rocketmq_public_address
        title: volcengine_rocketmq_public_address
        examples:
            - name: foo
              manifest: |-
                {
                  "eip_id": "${volcengine_eip_address.foo.id}",
                  "instance_id": "${volcengine_rocketmq_instance.foo.id}",
                  "ssl_mode": "permissive"
                }
              references:
                eip_id: volcengine_eip_address.foo.id
                instance_id: volcengine_rocketmq_instance.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip",
                      "project_name": "default"
                    }
                volcengine_rocketmq_instance.foo: |-
                    {
                      "auto_scale_queue": true,
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rocketmq.n1.x2.micro",
                      "file_reserved_time": 10,
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rocketmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "version": "4.8",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_id: '- (Required, ForceNew) The id of the eip.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of rocketmq instance.'
            ssl_mode: '- (Optional, ForceNew) The ssl mode of the rocketmq instance. Valid values: enforcing, permissive. Default is permissive.'
        importStatements: []
    volcengine_rocketmq_topic:
        subCategory: ROCKETMQ
        description: Provides a resource to manage rocketmq topic
        name: volcengine_rocketmq_topic
        title: volcengine_rocketmq_topic
        examples:
            - name: foo
              manifest: |-
                {
                  "access_policies": [
                    {
                      "access_key": "${volcengine_rocketmq_access_key.foo.access_key}",
                      "authority": "PUB"
                    }
                  ],
                  "description": "acc-test",
                  "instance_id": "${volcengine_rocketmq_instance.foo.id}",
                  "message_type": 1,
                  "queue_number": 2,
                  "topic_name": "acc-test-rocketmq-topic"
                }
              references:
                access_policies.access_key: volcengine_rocketmq_access_key.foo.access_key
                instance_id: volcengine_rocketmq_instance.foo.id
              dependencies:
                volcengine_rocketmq_access_key.foo: |-
                    {
                      "all_authority": "SUB",
                      "description": "acc-test-key",
                      "instance_id": "${volcengine_rocketmq_instance.foo.id}"
                    }
                volcengine_rocketmq_instance.foo: |-
                    {
                      "auto_scale_queue": true,
                      "charge_info": [
                        {
                          "charge_type": "PostPaid"
                        }
                      ],
                      "compute_spec": "rocketmq.n1.x2.micro",
                      "file_reserved_time": 10,
                      "instance_description": "acc-test",
                      "instance_name": "acc-test-rocketmq",
                      "project_name": "default",
                      "storage_space": 300,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "version": "4.8",
                      "zone_ids": [
                        "${data.volcengine_zones.foo.zones[0].id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            access_key: '- (Required) The access key of the rocketmq key.'
            access_policies: '- (Optional) The access policies of the rocketmq topic. This field can only be added or modified. Deleting this field is invalid.'
            authority: '- (Required) The authority of the rocketmq key for the current topic. Valid values: ALL, PUB, SUB, DENY. Default is DENY.'
            description: '- (Optional, ForceNew) The description of the rocketmq topic.'
            end_offset: '- The end offset of the rocketmq queue.'
            group_id: '- The id of the rocketmq group.'
            groups: '- The groups information of the rocketmq topic.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of rocketmq instance.'
            last_update_timestamp: '- The last update timestamp of the rocketmq queue.'
            message_count: '- The message count of the rocketmq queue.'
            message_model: '- The message model of the rocketmq group.'
            message_type: '- (Required, ForceNew) The type of the message. Valid values: 0: Regular message, 1: Transaction message, 2: Partition order message, 3: Global sequential message, 4: Delay message.'
            queue_id: '- The id of the rocketmq queue.'
            queue_number: '- (Required, ForceNew) The maximum number of queues for the current topic, which cannot exceed the remaining available queues for the current rocketmq instance.'
            queues: '- The queues information of the rocketmq topic.'
            start_offset: '- The start offset of the rocketmq queue.'
            sub_string: '- The sub string of the rocketmq group.'
            topic_name: '- (Required, ForceNew) The name of the rocketmq topic.'
        importStatements: []
    volcengine_route_entry:
        subCategory: VPC
        description: Provides a resource to manage route entry
        name: volcengine_route_entry
        title: volcengine_route_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test-up",
                  "destination_cidr_block": "0.0.0.0/2",
                  "next_hop_id": "ngw-274gwbqe340zk7fap8spkzo7x",
                  "next_hop_type": "NatGW",
                  "route_entry_name": "tf-test-up",
                  "route_table_id": "vtb-2744hslq5b7r47fap8tjomgnj"
                }
        argumentDocs:
            description: '- (Optional) The description of the route entry.'
            destination_cidr_block: '- (Required, ForceNew) The destination CIDR block of the route entry.'
            id: '- ID of the resource.'
            next_hop_id: '- (Required, ForceNew) The id of the next hop.'
            next_hop_type: '- (Required, ForceNew) The type of the next hop, Optional choice contains Instance, NetworkInterface, NatGW, VpnGW, TransitRouter.'
            route_entry_id: '- The id of the route entry.'
            route_entry_name: '- (Optional) The name of the route entry.'
            route_table_id: '- (Required, ForceNew) The id of the route table.'
            status: '- The description of the route entry.'
        importStatements: []
    volcengine_route_table:
        subCategory: VPC
        description: Provides a resource to manage route table
        name: volcengine_route_table
        title: volcengine_route_table
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test1",
                  "project_name": "yuwao",
                  "route_table_name": "tf-project-1",
                  "vpc_id": "vpc-2feppmy1ugt1c59gp688n1fld"
                }
        argumentDocs:
            description: '- (Optional) The description of the route table.'
            id: '- ID of the resource.'
            project_name: '- (Optional) The ProjectName of the route table.'
            route_table_name: '- (Optional) The name of the route table.'
            vpc_id: '- (Required, ForceNew) The id of the VPC.'
        importStatements: []
    volcengine_route_table_associate:
        subCategory: VPC
        description: Provides a resource to manage route table associate
        name: volcengine_route_table_associate
        title: volcengine_route_table_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "route_table_id": "vtb-274e19skkuhog7fap8u4i8ird",
                  "subnet_id": "subnet-2744ht7fhjthc7fap8tm10eqg"
                }
        argumentDocs:
            id: '- ID of the resource.'
            route_table_id: '- (Required, ForceNew) The id of the route table.'
            subnet_id: '- (Required, ForceNew) The id of the subnet.'
        importStatements: []
    volcengine_scaling_configuration:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling configuration
        name: volcengine_scaling_configuration
        title: volcengine_scaling_configuration
        examples:
            - name: foo
              manifest: |-
                {
                  "eip_bandwidth": 10,
                  "eip_billing_type": "PostPaidByBandwidth",
                  "eip_isp": "ChinaMobile",
                  "host_name": "",
                  "hpc_cluster_id": "",
                  "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                  "instance_description": "",
                  "instance_name": "tf-test",
                  "instance_types": [
                    "ecs.g2i.large"
                  ],
                  "key_pair_name": "tf-keypair",
                  "password": "",
                  "project_name": "default",
                  "scaling_configuration_name": "tf-test",
                  "scaling_group_id": "${volcengine_scaling_group.foo.id}",
                  "security_enhancement_strategy": "InActive",
                  "security_group_ids": [
                    "${volcengine_security_group.foo.id}"
                  ],
                  "spot_strategy": "NoSpot",
                  "tags": [
                    {
                      "key": "tf-key1",
                      "value": "tf-value1"
                    },
                    {
                      "key": "tf-key2",
                      "value": "tf-value2"
                    }
                  ],
                  "user_data": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI=",
                  "volumes": [
                    {
                      "delete_with_instance": false,
                      "size": 20,
                      "volume_type": "ESSD_PL0"
                    },
                    {
                      "delete_with_instance": true,
                      "size": 50,
                      "volume_type": "ESSD_PL0"
                    }
                  ]
                }
              references:
                image_id: data.volcengine_images.foo.images[0].image_id
                scaling_group_id: volcengine_scaling_group.foo.id
              dependencies:
                volcengine_scaling_group.foo: |-
                    {
                      "default_cooldown": 10,
                      "desire_instance_number": 0,
                      "instance_terminate_policy": "OldestInstance",
                      "max_instance_number": 1,
                      "min_instance_number": 0,
                      "multi_az_policy": "BALANCE",
                      "scaling_group_name": "acc-test-scaling-group",
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            created_at: '- The create time of the scaling configuration.'
            delete_with_instance: '- (Optional) The delete with instance flag of volume. Valid values: true, false. Default value: true.'
            eip_bandwidth: '- (Optional) The EIP bandwidth which the scaling configuration set. When the value of Eip.BillingType is PostPaidByBandwidth, the value is 1 to 500. When the value of Eip.BillingType is PostPaidByTraffic, the value is 1 to 200.'
            eip_billing_type: '- (Optional) The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.'
            eip_isp: '- (Optional) The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.'
            host_name: '- (Optional) The ECS hostname which the scaling configuration set.'
            hpc_cluster_id: '- (Optional) The ID of the HPC cluster to which the instance belongs. Valid only when InstanceTypes.N specifies High Performance Computing GPU Type.'
            id: '- ID of the resource.'
            image_id: '- (Required) The ECS image id which the scaling configuration set.'
            instance_description: '- (Optional) The ECS instance description which the scaling configuration set.'
            instance_name: '- (Required) The ECS instance name which the scaling configuration set.'
            instance_types: '- (Required) The list of the ECS instance type which the scaling configuration set. The maximum number of instance types is 10.'
            ipv6_address_count: |-
                - (Optional) Assign IPv6 address to instance network card. Possible values:
                0: Do not assign IPv6 address.
                1: Assign IPv6 address and the system will automatically assign an IPv6 subnet for you.
            key: '- (Required) The Key of Tags.'
            key_pair_name: '- (Optional) The ECS key pair name which the scaling configuration set.'
            lifecycle_state: '- The lifecycle state of the scaling configuration.'
            password: '- (Optional) The ECS password which the scaling configuration set.'
            project_name: '- (Optional) The project to which the instance created by the scaling configuration belongs.'
            scaling_configuration_id: '- The id of the scaling configuration.'
            scaling_configuration_name: '- (Required) The name of the scaling configuration.'
            scaling_group_id: '- (Required, ForceNew) The id of the scaling group to which the scaling configuration belongs.'
            security_enhancement_strategy: '- (Optional) The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.'
            security_group_ids: '- (Required) The list of the security group id of the networkInterface which the scaling configuration set. A maximum of 5 security groups can be bound at the same time, and the value ranges from 1 to 5.'
            size: '- (Required) The size of volume. System disk value range: 10 - 500. The value range of the data disk: 10 - 8192.'
            spot_strategy: '- (Optional) The preemption policy of the instance. Valid Value: NoSpot (default), SpotAsPriceGo.'
            tags: '- (Optional) The label of the instance created by the scaling configuration. Up to 20 tags are supported.'
            updated_at: '- The create time of the scaling configuration.'
            user_data: '- (Optional) The ECS user data which the scaling configuration set.'
            value: '- (Required) The Value of Tags.'
            volume_type: '- (Required) The type of volume.'
            volumes: '- (Required) The list of volume of the scaling configuration. The number of supported volumes ranges from 1 to 15.'
        importStatements: []
    volcengine_scaling_configuration_attachment:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling configuration attachment
        name: volcengine_scaling_configuration_attachment
        title: volcengine_scaling_configuration_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "scaling_configuration_id": "${volcengine_scaling_configuration.foo.id}"
                }
              references:
                scaling_configuration_id: volcengine_scaling_configuration.foo.id
              dependencies:
                volcengine_scaling_configuration.foo: |-
                    {
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_name": "acc-test-instance",
                      "instance_types": [
                        "ecs.g1.large"
                      ],
                      "password": "93f0cb0614Aab12",
                      "scaling_configuration_name": "acc-test-scaling-config",
                      "scaling_group_id": "${volcengine_scaling_group.foo.id}",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "volumes": [
                        {
                          "delete_with_instance": true,
                          "size": 50,
                          "volume_type": "ESSD_PL0"
                        }
                      ]
                    }
                volcengine_scaling_group.foo: |-
                    {
                      "default_cooldown": 10,
                      "desire_instance_number": 0,
                      "instance_terminate_policy": "OldestInstance",
                      "max_instance_number": 1,
                      "min_instance_number": 0,
                      "multi_az_policy": "BALANCE",
                      "scaling_group_name": "acc-test-scaling-group",
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            scaling_configuration_id: '- (Required, ForceNew) The id of the scaling configuration.'
        importStatements: []
    volcengine_scaling_group:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling group
        name: volcengine_scaling_group
        title: volcengine_scaling_group
        examples:
            - name: foo
              manifest: |-
                {
                  "count": 3,
                  "default_cooldown": 30,
                  "desire_instance_number": 0,
                  "instance_terminate_policy": "OldestInstance",
                  "max_instance_number": 10,
                  "min_instance_number": 0,
                  "multi_az_policy": "BALANCE",
                  "scaling_group_name": "acc-test-scaling-group-${count.index}",
                  "subnet_ids": [
                    "${volcengine_subnet.foo.id}"
                  ],
                  "tags": [
                    {
                      "key": "k2",
                      "value": "v2"
                    },
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            active_scaling_configuration_id: '- The scaling configuration id which used by the scaling group.'
            created_at: '- The create time of the scaling group.'
            db_instance_ids: '- (Optional, ForceNew) ID of the RDS database instance.'
            default_cooldown: '- (Optional) The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.'
            desire_instance_number: '- (Optional) The desire instance number of the scaling group.'
            health_check_type: '- The health check type of the scaling group.'
            id: '- ID of the resource.'
            instance_terminate_policy: '- (Optional) The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.'
            instance_type: '- (Required) The instance type.'
            key: '- (Required) The Key of Tags.'
            launch_template_id: '- (Optional) The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.'
            launch_template_overrides: '- (Optional) Specify instance specifications.'
            launch_template_version: '- (Optional) The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.'
            lifecycle_state: '- The lifecycle state of the scaling group.'
            load_balancer_health_check_grace_period: '- Grace period for health check of CLB instance in elastic group.'
            max_instance_number: '- (Required) The max instance number of the scaling group. Value range: 0 ~ 100.'
            min_instance_number: '- (Required) The min instance number of the scaling group. Value range: 0 ~ 100.'
            multi_az_policy: '- (Optional) The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.'
            port: '- (Required) The port receiving request of the server group. Value range: 1 ~ 65535.'
            project_name: '- (Optional) The ProjectName of the scaling group.'
            scaling_group_id: '- The id of the scaling group.'
            scaling_group_name: '- (Required) The name of the scaling group.'
            scaling_mode: |-
                - (Optional, ForceNew) Example recycling mode for the elastic group, with values:
                release (default): Release mode.
                recycle: Shutdown recycling mode.
            server_group_attributes: '- (Optional) The load balancer server group attributes of the scaling group.'
            server_group_id: '- (Required) The id of the server group.'
            stopped_instance_count: '- The number of stopped instances.'
            subnet_ids: '- (Required) The list of the subnet id to which the ENI is connected.'
            tags: '- (Optional) Tags.'
            total_instance_count: '- The total instance count of the scaling group.'
            updated_at: '- The create time of the scaling group.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- The VPC id of the scaling group.'
            weight: '- (Required) The weight of the instance. Value range: 0 ~ 100.'
        importStatements: []
    volcengine_scaling_group_enabler:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling group enabler
        name: volcengine_scaling_group_enabler
        title: volcengine_scaling_group_enabler
        examples:
            - name: foo3
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_scaling_configuration_attachment.foo2}"
                  ],
                  "scaling_group_id": "${volcengine_scaling_group.foo.scaling_group_id}"
                }
              references:
                scaling_group_id: volcengine_scaling_group.foo.scaling_group_id
              dependencies:
                volcengine_scaling_configuration.foo1: |-
                    {
                      "eip_bandwidth": 0,
                      "eip_billing_type": "PostPaidByBandwidth",
                      "eip_isp": "ChinaMobile",
                      "host_name": "",
                      "image_id": "image-ybx2d38wdfl8j1pupx7b",
                      "instance_description": "",
                      "instance_name": "tf-test",
                      "instance_types": [
                        "ecs.g1.2xlarge"
                      ],
                      "key_pair_name": "zktest",
                      "password": "",
                      "scaling_configuration_name": "terraform-test",
                      "scaling_group_id": "${volcengine_scaling_group.foo.scaling_group_id}",
                      "security_enhancement_strategy": "InActive",
                      "security_group_ids": [
                        "sg-12b8llnkn1la817q7y1be4kop"
                      ],
                      "volumes": [
                        {
                          "delete_with_instance": false,
                          "size": 20,
                          "volume_type": "ESSD_PL0"
                        },
                        {
                          "delete_with_instance": true,
                          "size": 20,
                          "volume_type": "ESSD_PL0"
                        }
                      ]
                    }
                volcengine_scaling_configuration_attachment.foo2: |-
                    {
                      "depends_on": [
                        "${volcengine_scaling_configuration.foo1}"
                      ],
                      "scaling_configuration_id": "${volcengine_scaling_configuration.foo1.scaling_configuration_id}"
                    }
                volcengine_scaling_group.foo: |-
                    {
                      "default_cooldown": 10,
                      "desire_instance_number": 0,
                      "instance_terminate_policy": "OldestInstance",
                      "max_instance_number": 1,
                      "min_instance_number": 0,
                      "multi_az_policy": "BALANCE",
                      "scaling_group_name": "zzm-tf-test",
                      "subnet_ids": [
                        "subnet-2fegl9waotzi859gp67relkhv"
                      ]
                    }
        argumentDocs:
            id: '- ID of the resource.'
            scaling_group_id: '- (Required, ForceNew) The id of the scaling group.'
        importStatements: []
    volcengine_scaling_instance_attachment:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling instance attachment
        name: volcengine_scaling_instance_attachment
        title: volcengine_scaling_instance_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_scaling_group_enabler.foo}"
                  ],
                  "entrusted": true,
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "scaling_group_id": "${volcengine_scaling_group.foo.id}"
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
                scaling_group_id: volcengine_scaling_group.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "description": "acc-test",
                      "host_name": "tf-acc-test",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_ecs_key_pair.foo: |-
                    {
                      "description": "acc-test-2",
                      "key_pair_name": "acc-test-key-pair-name"
                    }
                volcengine_ecs_launch_template.foo: |-
                    {
                      "description": "acc-test-desc",
                      "eip_bandwidth": 200,
                      "eip_billing_type": "PostPaidByBandwidth",
                      "eip_isp": "BGP",
                      "host_name": "acc-hostname",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-instance-name",
                      "instance_type_id": "ecs.g1.large",
                      "key_pair_name": "${volcengine_ecs_key_pair.foo.key_pair_name}",
                      "launch_template_name": "acc-test-template",
                      "network_interfaces": [
                        {
                          "security_group_ids": [
                            "${volcengine_security_group.foo.id}"
                          ],
                          "subnet_id": "${volcengine_subnet.foo.id}"
                        }
                      ],
                      "volumes": [
                        {
                          "delete_with_instance": true,
                          "size": 50,
                          "volume_type": "ESSD_PL0"
                        }
                      ]
                    }
                volcengine_scaling_group.foo: |-
                    {
                      "default_cooldown": 10,
                      "desire_instance_number": -1,
                      "instance_terminate_policy": "OldestInstance",
                      "launch_template_id": "${volcengine_ecs_launch_template.foo.id}",
                      "launch_template_version": "Default",
                      "max_instance_number": 1,
                      "min_instance_number": 0,
                      "multi_az_policy": "BALANCE",
                      "scaling_group_name": "acc-test-scaling-group",
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ]
                    }
                volcengine_scaling_group_enabler.foo: |-
                    {
                      "scaling_group_id": "${volcengine_scaling_group.foo.id}"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            delete_type: '- (Optional) The type of delete activity. Valid values: Remove, Detach. Default value is Remove.'
            detach_option: '- (Optional) Whether to cancel the association of the instance with the load balancing and public network IP. Valid values: both, none. Default value is both.'
            entrusted: '- (Optional, ForceNew) Whether to host the instance to a scaling group. Default value is false.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
            scaling_group_id: '- (Required, ForceNew) The id of the scaling group.'
        importStatements: []
    volcengine_scaling_lifecycle_hook:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling lifecycle hook
        name: volcengine_scaling_lifecycle_hook
        title: volcengine_scaling_lifecycle_hook
        examples:
            - name: foo
              manifest: |-
                {
                  "lifecycle_hook_name": "acc-test-lifecycle",
                  "lifecycle_hook_policy": "ROLLBACK",
                  "lifecycle_hook_timeout": 300,
                  "lifecycle_hook_type": "SCALE_OUT",
                  "scaling_group_id": "${volcengine_scaling_group.foo.id}"
                }
              dependencies:
                volcengine_ecs_command.foo: |-
                    {
                      "command_content": "IyEvYmluL2Jhc2gKCgplY2hvICJvcGVyYXRpb24gc3VjY2VzcyEi",
                      "description": "tf",
                      "name": "acc-test-command",
                      "timeout": 100,
                      "username": "root",
                      "working_dir": "/home"
                    }
                volcengine_scaling_group.foo: |-
                    {
                      "default_cooldown": 10,
                      "desire_instance_number": 0,
                      "instance_terminate_policy": "OldestInstance",
                      "max_instance_number": 1,
                      "min_instance_number": 0,
                      "multi_az_policy": "BALANCE",
                      "scaling_group_name": "acc-test-scaling-group-lifecycle",
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            command_id: '- (Required) Batch job command ID, which indicates the batch job command to be executed after triggering the lifecycle hook and installed in the instance.'
            id: '- ID of the resource.'
            lifecycle_command: '- (Optional) Batch job command.'
            lifecycle_hook_id: '- The id of the lifecycle hook.'
            lifecycle_hook_name: '- (Required, ForceNew) The name of the lifecycle hook.'
            lifecycle_hook_policy: '- (Required) The policy of the lifecycle hook. Valid values: CONTINUE, REJECT, ROLLBACK.'
            lifecycle_hook_timeout: '- (Required) The timeout of the lifecycle hook.'
            lifecycle_hook_type: '- (Required) The type of the lifecycle hook. Valid values: SCALE_IN, SCALE_OUT.'
            parameters: |-
                - (Optional) Parameters and parameter values in batch job commands.
                The number of parameters ranges from 0 to 60.
            scaling_group_id: '- (Required, ForceNew) The id of the scaling group.'
        importStatements: []
    volcengine_scaling_policy:
        subCategory: AUTOSCALING
        description: Provides a resource to manage scaling policy
        name: volcengine_scaling_policy
        title: volcengine_scaling_policy
        examples:
            - name: foo
              manifest: |-
                {
                  "active": false,
                  "adjustment_type": "QuantityChangeInCapacity",
                  "adjustment_value": 100,
                  "alarm_policy_condition_comparison_operator": "=",
                  "alarm_policy_condition_metric_name": "Instance_CpuBusy_Avg",
                  "alarm_policy_condition_metric_unit": "Percent",
                  "alarm_policy_condition_threshold": 100,
                  "alarm_policy_evaluation_count": 1,
                  "alarm_policy_rule_type": "Static",
                  "cooldown": 10,
                  "scaling_group_id": "${volcengine_scaling_group.foo.id}",
                  "scaling_policy_name": "acc-tf-sg-policy-test",
                  "scaling_policy_type": "Alarm"
                }
              references:
                scaling_group_id: volcengine_scaling_group.foo.id
              dependencies:
                volcengine_scaling_group.foo: |-
                    {
                      "default_cooldown": 10,
                      "desire_instance_number": 0,
                      "instance_terminate_policy": "OldestInstance",
                      "max_instance_number": 1,
                      "min_instance_number": 0,
                      "multi_az_policy": "BALANCE",
                      "scaling_group_name": "acc-test-scaling-group",
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ]
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            active: '- (Optional) The active flag of the scaling policy. [Warning] the scaling policy can be active only when the scaling group be active otherwise will fail.'
            adjustment_type: '- (Required) The adjustment type of the scaling policy. Valid values: QuantityChangeInCapacity, PercentChangeInCapacity, TotalCapacity.'
            adjustment_value: '- (Required) The adjustment value of the scaling policy. When the value of the AdjustmentType parameter is QuantityChangeInCapacity: -100 ~ 100, 0 is not allowed, unit: piece. When the value of the AdjustmentType parameter is PercentChangeInCapacity: -100 ~ 10000, 0 is not allowed, unit: %. When the value of the AdjustmentType parameter is TotalCapacity: the default is 0 to 100, unit: piece.'
            alarm_policy_condition_comparison_operator: '- (Optional) The comparison operator of the alarm policy condition of the scaling policy. Valid values: >, <, =. It is only valid and required when the value of ScalingPolicyType is Alarm.'
            alarm_policy_condition_metric_name: '- (Optional) The metric name of the alarm policy condition of the scaling policy. Valid values: CpuTotal_Max, CpuTotal_Min, CpuTotal_Avg, MemoryUsedUtilization_Max, MemoryUsedUtilization_Min, MemoryUsedUtilization_Avg, Instance_CpuBusy_Max, Instance_CpuBusy_Min, Instance_CpuBusy_Avg.'
            alarm_policy_condition_metric_unit: '- (Optional) The comparison operator of the alarm policy condition of the scaling policy. It is only valid and required when the value of ScalingPolicyType is Alarm.'
            alarm_policy_condition_threshold: '- (Optional) The threshold of the alarm policy condition of the scaling policy. It is only valid and required when the value of ScalingPolicyType is Alarm.'
            alarm_policy_evaluation_count: '- (Optional) The evaluation count of the alarm policy of the scaling policy. It is only valid and required when the value of ScalingPolicyType is Alarm.'
            alarm_policy_rule_type: '- (Optional) The rule type of the alarm policy of the scaling policy. Valid value: Static. It is only valid and required when the value of ScalingPolicyType is Alarm.'
            cooldown: '- (Optional) The cooldown of the scaling policy. Default value is the cooldown time of the scaling group. Value: 0~86400, unit: second, if left blank, the cooling time of the scaling group will be used by default.'
            id: '- ID of the resource.'
            scaling_group_id: '- (Required, ForceNew) The id of the scaling group to which the scaling policy belongs.'
            scaling_policy_id: '- The id of the scaling policy.'
            scaling_policy_name: '- (Required) The name of the scaling policy.'
            scaling_policy_type: '- (Required, ForceNew) The type of scaling policy. Valid values: Scheduled, Recurrence, Alarm.'
            scheduled_policy_launch_time: |-
                - (Optional) The launch time of the scheduled policy of the scaling policy.
                When the value of ScalingPolicyType is Scheduled, it means that the trigger time of the scheduled task must be greater than the current time.
                When the value of ScalingPolicyType is Recurrence: If ScheduledPolicy.RecurrenceType is not specified, it means to execute only once according to the date and time specified here.
                If ScheduledPolicy.RecurrenceType is specified, it indicates the start time of the periodic task. Only the time within 90 days from the date of creation/modification is supported.
                When the value of ScalingPolicyType is Alarm, this parameter is invalid.
            scheduled_policy_recurrence_end_time: '- (Optional) The recurrence end time of the scheduled policy of the scaling policy. Valid and required when ScalingPolicyType is Recurrence. If not configured, it will default to the day/week/month after this moment according to the recurrence period (ScheduledPolicy.RecurrenceType).'
            scheduled_policy_recurrence_type: '- (Optional) The recurrence type the scheduled policy of the scaling policy. Valid values: Daily, Weekly, Monthly, Cron.'
            scheduled_policy_recurrence_value: |-
                - (Optional) The recurrence value the scheduled policy of the scaling policy. Valid and required when ScalingPolicyType is Recurrence. When the value of the ScheduledPolicy.RecurrenceType parameter is Daily, only one value can be filled in, ranging from 1 to 31.
                When the value of the ScheduledPolicy.RecurrenceType parameter is Weekly, you can enter multiple values separated by commas (,). The values from Monday to Sunday are: 1,2,3,4,5,6,7.
                When the value of the ScheduledPolicy.RecurrenceType parameter is Monthly, the format is A-B. The value ranges of A and B are both 1~31, and B must be greater than or equal to A.
                When the value of the ScheduledPolicy.RecurrenceType parameter is Cron, it means UTC+8 time, supports 5-field expressions of minutes, hours, days, months, and weeks, and supports wildcard English commas (,), English question marks (?), and conjunctions ( -), asterisk (*), pound sign (#), slash (/), L, and W.
            status: '- The status of the scaling policy. Valid values: Active, InActive.'
        importStatements: []
    volcengine_security_group:
        subCategory: VPC
        description: Provides a resource to manage security group
        name: volcengine_security_group
        title: volcengine_security_group
        examples:
            - name: g1test1
              manifest: |-
                {
                  "project_name": "default",
                  "vpc_id": "vpc-2feppmy1ugt1c59gp688n1fld"
                }
        argumentDocs:
            creation_time: '- Creation time of SecurityGroup.'
            description: '- (Optional) Description of SecurityGroup.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Optional) The ProjectName of SecurityGroup.'
            security_group_name: '- (Optional) Name of SecurityGroup.'
            status: '- Status of SecurityGroup.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Required, ForceNew) Id of the VPC.'
        importStatements: []
    volcengine_security_group_rule:
        subCategory: VPC
        description: Provides a resource to manage security group rule
        name: volcengine_security_group_rule
        title: volcengine_security_group_rule
        examples:
            - name: g1test3
              manifest: |-
                {
                  "cidr_ip": "10.0.0.0/8",
                  "description": "tft1234",
                  "direction": "egress",
                  "port_end": 9003,
                  "port_start": 8000,
                  "protocol": "tcp",
                  "security_group_id": "sg-2d6722jpp55og58ozfd1sqtdb"
                }
            - name: g1test2
              manifest: |-
                {
                  "cidr_ip": "10.0.0.0/24",
                  "direction": "egress",
                  "port_end": 9003,
                  "port_start": 8000,
                  "protocol": "tcp",
                  "security_group_id": "sg-2d6722jpp55og58ozfd1sqtdb"
                }
            - name: g1test1
              manifest: |-
                {
                  "cidr_ip": "10.0.0.0/24",
                  "direction": "egress",
                  "port_end": 9003,
                  "port_start": 8000,
                  "priority": 2,
                  "protocol": "tcp",
                  "security_group_id": "sg-2d6722jpp55og58ozfd1sqtdb"
                }
            - name: g1test0
              manifest: |-
                {
                  "cidr_ip": "10.0.0.0/24",
                  "description": "tft",
                  "direction": "ingress",
                  "policy": "drop",
                  "port_end": 80,
                  "port_start": 80,
                  "priority": 2,
                  "protocol": "tcp",
                  "security_group_id": "sg-2d6722jpp55og58ozfd1sqtdb"
                }
            - name: g1test06
              manifest: |-
                {
                  "description": "tft",
                  "direction": "ingress",
                  "policy": "drop",
                  "port_end": 9003,
                  "port_start": 8000,
                  "priority": 2,
                  "protocol": "tcp",
                  "security_group_id": "sg-2d6722jpp55og58ozfd1sqtdb",
                  "source_group_id": "sg-3rfe5j4xdnklc5zsk2hcw5c6q"
                }
        argumentDocs:
            cidr_ip: '- (Optional, ForceNew) Cidr ip of egress/ingress Rule.'
            description: '- (Optional) description of a egress rule.'
            direction: '- (Required, ForceNew) Direction of rule, ingress (inbound) or egress (outbound).'
            id: '- ID of the resource.'
            policy: '- (Optional, ForceNew) Access strategy. Valid values: accept, drop. Default is accept.'
            port_end: '- (Required, ForceNew) Port end of egress/ingress Rule. When the protocol is tcp or udp, the valid value range is 1~65535. When the protocol is icmp or all or icmpv6, the valid value is -1, indicating no restriction on port values.'
            port_start: '- (Required, ForceNew) Port start of egress/ingress Rule. When the protocol is tcp or udp, the valid value range is 1~65535. When the protocol is icmp or all or icmpv6, the valid value is -1, indicating no restriction on port values.'
            priority: '- (Optional, ForceNew) Priority of a security group rule. Valid value range: 1~100. Default is 1.'
            protocol: '- (Required, ForceNew) Protocol of the SecurityGroup, the value can be tcp or udp or icmp or all or icmpv6.'
            security_group_id: '- (Required, ForceNew) Id of SecurityGroup.'
            source_group_id: '- (Optional, ForceNew) ID of the source security group whose access permission you want to set.'
            status: '- Status of SecurityGroup.'
        importStatements: []
    volcengine_server_group:
        subCategory: CLB
        description: Provides a resource to manage server group
        name: volcengine_server_group
        title: volcengine_server_group
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "hello demo11",
                  "load_balancer_id": "${volcengine_clb.foo.id}",
                  "server_group_name": "acc-test-create"
                }
              references:
                load_balancer_id: volcengine_clb.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc0Demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_name": "acc-test-create",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "type": "public"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            address_ip_version: '- (Optional, ForceNew) The address ip version of the ServerGroup. Valid values: ipv4, ipv6. Default is ipv4.'
            description: '- (Optional) The description of ServerGroup.'
            id: '- ID of the resource.'
            load_balancer_id: '- (Required, ForceNew) The ID of the Clb.'
            server_group_id: '- (Optional) The ID of the ServerGroup.'
            server_group_name: '- (Optional) The name of the ServerGroup.'
        importStatements: []
    volcengine_server_group_server:
        subCategory: CLB
        description: Provides a resource to manage server group server
        name: volcengine_server_group_server
        title: volcengine_server_group_server
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "This is a acc test server",
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "port": 80,
                  "server_group_id": "${volcengine_server_group.foo.id}",
                  "type": "ecs",
                  "weight": 100
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
                server_group_id: volcengine_server_group.foo.id
              dependencies:
                volcengine_clb.foo: |-
                    {
                      "description": "acc0Demo",
                      "eip_billing_config": [
                        {
                          "bandwidth": 1,
                          "eip_billing_type": "PostPaidByBandwidth",
                          "isp": "BGP"
                        }
                      ],
                      "load_balancer_name": "acc-test-create",
                      "load_balancer_spec": "small_1",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "type": "public"
                    }
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "image-ycjwwciuzy5pkh54xx8f",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name",
                      "instance_type": "ecs.c3i.large",
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_server_group.foo: |-
                    {
                      "description": "hello demo11",
                      "load_balancer_id": "${volcengine_clb.foo.id}",
                      "server_group_name": "acc-test-create"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            description: '- (Optional) The description of the instance.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The ID of ecs instance or the network card bound to ecs instance.'
            ip: '- (Optional, ForceNew) The private ip of the instance.'
            port: '- (Required) The port receiving request.'
            server_group_id: '- (Required, ForceNew) The ID of the ServerGroup.'
            server_id: '- The server id of instance in ServerGroup.'
            type: '- (Required, ForceNew) The type of instance. Optional choice contains ecs, eni.'
            weight: '- (Optional) The weight of the instance, range in 0~100.'
        importStatements: []
    volcengine_snat_entry:
        subCategory: NAT
        description: Provides a resource to manage snat entry
        name: volcengine_snat_entry
        title: volcengine_snat_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${volcengine_eip_associate.foo}"
                  ],
                  "eip_id": "${volcengine_eip_address.foo.id}",
                  "nat_gateway_id": "${volcengine_nat_gateway.foo.id}",
                  "snat_entry_name": "acc-test-snat-entry",
                  "source_cidr": "172.16.0.0/24"
                }
              references:
                eip_id: volcengine_eip_address.foo.id
                nat_gateway_id: volcengine_nat_gateway.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "BGP",
                      "name": "acc-test-eip"
                    }
                volcengine_eip_associate.foo: |-
                    {
                      "allocation_id": "${volcengine_eip_address.foo.id}",
                      "instance_id": "${volcengine_nat_gateway.foo.id}",
                      "instance_type": "Nat"
                    }
                volcengine_nat_gateway.foo: |-
                    {
                      "billing_type": "PostPaid",
                      "description": "acc-test",
                      "nat_gateway_name": "acc-test-ng",
                      "project_name": "default",
                      "spec": "Small",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ],
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_id: '- (Required) The id of the public ip address used by the SNAT entry.'
            id: '- ID of the resource.'
            nat_gateway_id: '- (Required, ForceNew) The id of the nat gateway to which the entry belongs.'
            snat_entry_name: '- (Optional) The name of the SNAT entry.'
            source_cidr: '- (Optional, ForceNew) The SourceCidr of the SNAT entry. Only one of subnet_id,source_cidr can be specified.'
            status: '- The status of the SNAT entry.'
            subnet_id: '- (Optional, ForceNew) The id of the subnet that is required to access the internet. Only one of subnet_id,source_cidr can be specified.'
        importStatements: []
    volcengine_ssl_vpn_client_cert:
        subCategory: VPN
        description: Provides a resource to manage ssl vpn client cert
        name: volcengine_ssl_vpn_client_cert
        title: volcengine_ssl_vpn_client_cert
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test",
                  "ssl_vpn_client_cert_name": "acc-test-client-cert",
                  "ssl_vpn_server_id": "${volcengine_ssl_vpn_server.foo.id}"
                }
              references:
                ssl_vpn_server_id: volcengine_ssl_vpn_server.foo.id
              dependencies:
                volcengine_ssl_vpn_server.foo: |-
                    {
                      "auth": "SHA1",
                      "cipher": "AES-128-CBC",
                      "client_ip_pool": "172.16.2.0/24",
                      "compress": true,
                      "description": "acc-test",
                      "local_subnets": [
                        "${volcengine_subnet.foo.cidr_block}"
                      ],
                      "protocol": "UDP",
                      "ssl_vpn_server_name": "acc-test-ssl",
                      "vpn_gateway_id": "${volcengine_vpn_gateway.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpn_gateway.foo: |-
                    {
                      "bandwidth": 5,
                      "description": "acc-test1",
                      "period": 7,
                      "project_name": "default",
                      "ssl_enabled": true,
                      "ssl_max_connections": 5,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "vpn_gateway_name": "acc-test1"
                    }
        argumentDocs:
            ca_certificate: '- The CA certificate.'
            certificate_status: '- The status of the ssl vpn client cert.'
            client_certificate: '- The client certificate.'
            client_key: '- The key of the ssl vpn client.'
            creation_time: '- The creation time of the ssl vpn client cert.'
            description: '- (Optional) The description of the ssl vpn client cert.'
            expired_time: '- The expired time of the ssl vpn client cert.'
            id: '- ID of the resource.'
            open_vpn_client_config: '- The config of the open vpn client.'
            ssl_vpn_client_cert_name: '- (Optional) The name of the ssl vpn client cert.'
            ssl_vpn_server_id: '- (Required, ForceNew) The id of the ssl vpn server.'
            status: '- The status of the ssl vpn client.'
            update_time: '- The update time of the ssl vpn client cert.'
        importStatements: []
    volcengine_ssl_vpn_server:
        subCategory: VPN
        description: Provides a resource to manage ssl vpn server
        name: volcengine_ssl_vpn_server
        title: volcengine_ssl_vpn_server
        examples:
            - name: foo
              manifest: |-
                {
                  "auth": "SHA1",
                  "cipher": "AES-128-CBC",
                  "client_ip_pool": "172.16.2.0/24",
                  "compress": true,
                  "description": "acc-test",
                  "local_subnets": [
                    "${volcengine_subnet.foo.cidr_block}"
                  ],
                  "protocol": "UDP",
                  "ssl_vpn_server_name": "acc-test-ssl",
                  "vpn_gateway_id": "${volcengine_vpn_gateway.foo.id}"
                }
              references:
                vpn_gateway_id: volcengine_vpn_gateway.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpn_gateway.foo: |-
                    {
                      "bandwidth": 5,
                      "description": "acc-test1",
                      "period": 7,
                      "project_name": "default",
                      "ssl_enabled": true,
                      "ssl_max_connections": 5,
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "vpn_gateway_name": "acc-test1"
                    }
        argumentDocs:
            auth: |-
                - (Optional) The authentication algorithm of the SSL server.
                Values:
                SHA1 (default)
                MD5
                None (do not use encryption).
            cipher: |-
                - (Optional) The encryption algorithm of the SSL server.
                Values:
                AES-128-CBC (default)
                AES-192-CBC
                AES-256-CBC
                None (do not use encryption).
            client_ip_pool: '- (Required) SSL client network segment.'
            compress: '- (Optional) Whether to compress the transmitted data. The default value is false.'
            description: '- (Optional) The description of the ssl server.'
            id: '- ID of the resource.'
            local_subnets: '- (Required) The local network segment of the SSL server. The local network segment is the address segment that the client accesses through the SSL VPN connection.'
            port: '- (Optional) The port of the ssl server. Valid values: 1~65535. Default is 1194. The following ports are not supported: 22, 68, 179, 323, 500, 4500.'
            project_name: '- (Optional) The project name of the ssl server.'
            protocol: '- (Optional) The protocol used by the SSL server. Valid values are TCP, UDP. Default Value: UDP.'
            ssl_vpn_server_id: '- The id of the ssl vpn server.'
            ssl_vpn_server_name: '- (Optional) The name of the SSL server.'
            vpn_gateway_id: '- (Required, ForceNew) The vpn gateway id.'
        importStatements: []
    volcengine_subnet:
        subCategory: VPC
        description: Provides a resource to manage subnet
        name: volcengine_subnet
        title: volcengine_subnet
        examples:
            - name: foo
              manifest: |-
                {
                  "cidr_block": "192.168.1.0/24",
                  "subnet_name": "subnet-test-2",
                  "vpc_id": "vpc-2749wnlhro3y87fap8u5ztvt5",
                  "zone_id": "cn-beijing"
                }
        argumentDocs:
            cidr_block: '- (Required, ForceNew) A network address block which should be a subnet of the three internal network segments (10.0.0.0/16, 172.16.0.0/12 and 192.168.0.0/16).'
            creation_time: '- Creation time of Subnet.'
            description: '- (Optional) The description of the Subnet.'
            enable_ipv6: '- (Optional) Specifies whether to enable the IPv6 CIDR block of the Subnet. This field is only valid when modifying the Subnet.'
            id: '- ID of the resource.'
            ipv6_cidr_block: '- (Optional) The last eight bits of the IPv6 CIDR block of the Subnet. Valid values: 0 - 255.'
            key: '- (Required) The Key of Tags.'
            status: '- Status of Subnet.'
            subnet_name: '- (Optional) The name of the Subnet.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Required, ForceNew) Id of the VPC.'
            zone_id: '- (Required, ForceNew) Id of the Zone.'
        importStatements: []
    volcengine_tls_alarm:
        subCategory: TLS
        description: Provides a resource to manage tls alarm
        name: volcengine_tls_alarm
        title: volcengine_tls_alarm
        examples:
            - name: foo
              manifest: |-
                {
                  "alarm_name": "test",
                  "alarm_notify_group": [
                    "3019107f-28a2-4208-a2b6-c33fcb97ac3a"
                  ],
                  "alarm_period_detail": [
                    {
                      "email": 2,
                      "general_webhook": 3,
                      "phone": 10,
                      "sms": 10
                    }
                  ],
                  "condition": "$1.errNum\u003e0",
                  "project_id": "cc44f8b6-0328-4622-b043-023fca735cd4",
                  "query_request": [
                    {
                      "end_time_offset": 0,
                      "number": 1,
                      "query": "Failed | select count(*) as errNum",
                      "start_time_offset": -15,
                      "topic_id": "af1a2240-ba62-4f18-b421-bde2f9684e57"
                    }
                  ],
                  "request_cycle": [
                    {
                      "time": 11,
                      "type": "Period"
                    }
                  ],
                  "user_define_msg": "test for terraform"
                }
        argumentDocs:
            alarm_id: '- The alarm id.'
            alarm_name: '- (Required) The name of the alarm.'
            alarm_notify_group: '- (Required, ForceNew) List of notification groups corresponding to the alarm.'
            alarm_period: '- (Optional) Period for sending alarm notifications. When the number of continuous alarm triggers reaches the specified limit (TriggerPeriod), Log Service will send alarm notifications according to the specified period.'
            alarm_period_detail: '- (Optional) Period for sending alarm notifications. When the number of continuous alarm triggers reaches the specified limit (TriggerPeriod), Log Service will send alarm notifications according to the specified period.'
            condition: '- (Required) Alarm trigger condition.'
            email: '- (Required) Email alarm period, the unit is minutes, and the value range is 1~1440.'
            end_time_offset: '- (Required) The end time of the query range is relative to the current historical time. The unit is minutes. The value is not positive and must be greater than StartTimeOffset. The maximum value is 0 and the minimum value is -1440.'
            general_webhook: '- (Required) Customize the webhook alarm period, the unit is minutes, and the value range is 1~1440.'
            id: '- ID of the resource.'
            number: '- (Required) Alarm object sequence number; increments from 1.'
            phone: '- (Required) Telephone alarm cycle, the unit is minutes, and the value range is 10~1440.'
            project_id: '- (Required, ForceNew) The project id.'
            query: '- (Required) Query statement, the maximum supported length is 1024.'
            query_request: '- (Required) Search and analyze sentences, 1~3 can be configured.'
            request_cycle: '- (Required) The execution period of the alarm task.'
            sms: '- (Required) SMS alarm cycle, the unit is minutes, and the value range is 10~1440.'
            start_time_offset: '- (Required) The start time of the query range is relative to the current historical time, in minutes. The value is non-positive, the maximum value is 0, and the minimum value is -1440.'
            status: '- (Optional) Whether to enable the alert policy. The default value is true, that is, on.'
            time: '- (Required) The cycle of alarm task execution, or the time point of periodic execution. The unit is minutes, and the value range is 1~1440.'
            topic_id: '- (Required) The id of the topic.'
            trigger_period: '- (Optional) Continuous cycle. The alarm will be issued after the trigger condition is continuously met for TriggerPeriod periods; the minimum value is 1, the maximum value is 10, and the default value is 1.'
            type: |-
                - (Required) Execution cycle type.
                Period: Periodic execution, which means executing once every certain period of time.
                Fixed: Regular execution, which means executing at a fixed time point every day.
            user_define_msg: '- (Optional) Customize the alarm notification content.'
        importStatements: []
    volcengine_tls_alarm_notify_group:
        subCategory: TLS
        description: Provides a resource to manage tls alarm notify group
        name: volcengine_tls_alarm_notify_group
        title: volcengine_tls_alarm_notify_group
        examples:
            - name: foo
              manifest: |-
                {
                  "alarm_notify_group_name": "tf-test",
                  "iam_project_name": "yyy",
                  "notify_type": [
                    "Trigger"
                  ],
                  "receivers": [
                    {
                      "end_time": "23:59:59",
                      "receiver_channels": [
                        "Email",
                        "Sms"
                      ],
                      "receiver_names": [
                        "vke-qs"
                      ],
                      "receiver_type": "User",
                      "start_time": "23:00:00"
                    }
                  ]
                }
        argumentDocs:
            alarm_notify_group_id: '- The alarm notification group id.'
            alarm_notify_group_name: '- (Required) The name of the notify group.'
            end_time: '- (Required) The end time.'
            iam_project_name: '- (Optional) The name of the iam project.'
            id: '- ID of the resource.'
            notify_type: |-
                - (Required) The notify type.
                Trigger: Alarm Trigger
                Recovery: Alarm Recovery.
            receiver_channels: '- (Required) The list of the receiver channels. Currently supported channels: Email, Sms, Phone.'
            receiver_names: '- (Required) List of the receiver names.'
            receiver_type: '- (Required) The receiver type, Can be set as: User(The id of user).'
            receivers: '- (Required) List of IAM users to receive alerts.'
            start_time: '- (Required) The start time.'
        importStatements: []
    volcengine_tls_host:
        subCategory: TLS
        description: Provides a resource to manage tls host
        name: volcengine_tls_host
        title: volcengine_tls_host
        examples:
            - name: foo
              manifest: |-
                {
                  "host_group_id": "fbea6619-7b0c-40f3-ac7e-45c63e3f676e",
                  "ip": "10.180.50.18"
                }
        argumentDocs:
            host_group_id: '- (Required, ForceNew) The id of host group.'
            id: '- ID of the resource.'
            ip: '- (Required, ForceNew) The ip address.'
        importStatements: []
    volcengine_tls_host_group:
        subCategory: TLS
        description: Provides a resource to manage tls host group
        name: volcengine_tls_host_group
        title: volcengine_tls_host_group
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_update": false,
                  "host_group_name": "tfgroup",
                  "host_group_type": "Label",
                  "host_identifier": "tf-controller",
                  "service_logging": false
                }
        argumentDocs:
            abnormal_heartbeat_status_count: '- The abnormal heartbeat status count of host.'
            agent_latest_version: '- The latest version of log collector.'
            auto_update: '- (Optional) Whether enable auto update.'
            create_time: '- The create time of host group.'
            host_count: '- The count of host.'
            host_group_name: '- (Required) The name of host group.'
            host_group_type: '- (Required) The type of host group. The value can be IP or Label.'
            host_identifier: '- (Optional) The identifier of host.'
            host_ip_list: '- (Optional) The ip list of host group.'
            iam_project_name: '- (Optional) The project name of iam.'
            id: '- ID of the resource.'
            modify_time: '- The modify time of host group.'
            normal_heartbeat_status_count: '- The normal heartbeat status count of host.'
            rule_count: '- The rule count of host.'
            service_logging: '- (Optional) Whether enable service logging.'
            update_end_time: '- (Optional) The update end time of log collector.'
            update_start_time: '- (Optional) The update start time of log collector.'
        importStatements: []
    volcengine_tls_index:
        subCategory: TLS
        description: Provides a resource to manage tls index
        name: volcengine_tls_index
        title: volcengine_tls_index
        examples:
            - name: foo
              manifest: |-
                {
                  "key_value": [
                    {
                      "case_sensitive": true,
                      "delimiter": "!",
                      "include_chinese": false,
                      "index_all": true,
                      "json_keys": [
                        {
                          "key": "class",
                          "value_type": "text"
                        },
                        {
                          "key": "age",
                          "value_type": "long"
                        }
                      ],
                      "key": "k1",
                      "sql_flag": true,
                      "value_type": "json"
                    },
                    {
                      "case_sensitive": true,
                      "delimiter": "!",
                      "include_chinese": false,
                      "key": "k5",
                      "sql_flag": false,
                      "value_type": "text"
                    }
                  ],
                  "topic_id": "227a8d0c-b85b-48df-bee1-0927a595****",
                  "user_inner_key_value": [
                    {
                      "case_sensitive": false,
                      "delimiter": ",:-/ ",
                      "include_chinese": false,
                      "json_keys": [
                        {
                          "key": "age",
                          "value_type": "long"
                        },
                        {
                          "key": "name",
                          "value_type": "long"
                        }
                      ],
                      "key": "__content__",
                      "sql_flag": false,
                      "value_type": "json"
                    }
                  ]
                }
        argumentDocs:
            case_sensitive: '- (Required) Whether the FullTextInfo is case sensitive.'
            create_time: '- The create time of the tls index.'
            delimiter: '- (Optional) The delimiter of the FullTextInfo.'
            full_text: '- (Optional) The full text info of the tls index.'
            id: '- ID of the resource.'
            include_chinese: '- (Optional) Whether the FullTextInfo include chinese.'
            index_all: '- (Optional) Whether to create indexes for all fields in JSON fields with text values. This field is valid when the value_type is json.'
            json_keys: '- (Optional) The JSON subfield key value index.'
            key: '- (Required) The key of the subfield key value index.'
            key_value: '- (Optional) The key value info of the tls index.'
            modify_time: '- The modify time of the tls index.'
            sql_flag: '- (Optional) Whether the filed is enabled for analysis.'
            topic_id: '- (Required, ForceNew) The topic id of the tls index.'
            user_inner_key_value: '- (Optional) The reserved field index configuration of the tls index.'
            value_type: '- (Required) The type of value. Valid values: long, double, text.'
        importStatements: []
    volcengine_tls_kafka_consumer:
        subCategory: TLS
        description: Provides a resource to manage tls kafka consumer
        name: volcengine_tls_kafka_consumer
        title: volcengine_tls_kafka_consumer
        examples:
            - name: foo
              manifest: |-
                {
                  "topic_id": "cfb5c08b-0c7a-44fa-8971-8afc12f1b123"
                }
        argumentDocs:
            allow_consume: '- Whether allow consume.'
            consume_topic: '- The topic of consume.'
            id: '- ID of the resource.'
            topic_id: '- (Required, ForceNew) The id of topic.'
        importStatements: []
    volcengine_tls_project:
        subCategory: TLS
        description: Provides a resource to manage tls project
        name: volcengine_tls_project
        title: volcengine_tls_project
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-desc",
                  "iam_project_name": "default",
                  "project_name": "tf-test",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            create_time: '- The create time of the tls project.'
            description: '- (Optional) The description of the tls project.'
            iam_project_name: '- (Optional) The IAM project name of the tls project.'
            id: '- ID of the resource.'
            inner_net_domain: '- The inner net domain of the tls project.'
            key: '- (Required) The Key of Tags.'
            project_name: '- (Required) The name of the tls project.'
            tags: '- (Optional) Tags.'
            topic_count: '- The count of topics in the tls project.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_tls_rule:
        subCategory: TLS
        description: Provides a resource to manage tls rule
        name: volcengine_tls_rule
        title: volcengine_tls_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "container_rule": [
                    {
                      "container_name_regex": ".*test.*",
                      "env_tag": {
                        "Key1": "Value1",
                        "Key2": "Value2"
                      },
                      "exclude_container_env_regex": {
                        "Key1": "Value1",
                        "Key2": "Value2"
                      },
                      "exclude_container_label_regex": {
                        "Key1": "Value12",
                        "Key2": "Value22"
                      },
                      "include_container_env_regex": {
                        "Key1": "Value1",
                        "Key2": "Value2"
                      },
                      "include_container_label_regex": {
                        "Key1": "Value12",
                        "Key2": "Value23"
                      },
                      "kubernetes_rule": [
                        {
                          "annotation_tag": {
                            "Key1": "Value1",
                            "Key2": "Value2"
                          },
                          "exclude_pod_label_regex": {
                            "Key1": "Value1",
                            "Key2": "Value2"
                          },
                          "include_pod_label_regex": {
                            "Key1": "Value1",
                            "Key2": "Value2"
                          },
                          "label_tag": {
                            "Key1": "Value1",
                            "Key2": "Value2"
                          },
                          "namespace_name_regex": ".*test.*",
                          "pod_name_regex": ".*test.*",
                          "workload_name_regex": ".*test.*",
                          "workload_type": "Deployment"
                        }
                      ],
                      "stream": "all"
                    }
                  ],
                  "input_type": 1,
                  "log_sample": "2018-05-22 15:35:53.850 INFO XXXX",
                  "log_type": "minimalist_log",
                  "rule_name": "test",
                  "topic_id": "7bfa2cdc-4f8b-4cf9-b4c9-0ed05c33349f",
                  "user_define_rule": [
                    {
                      "advanced": [
                        {
                          "close_eof": false,
                          "close_inactive": 10,
                          "close_removed": false,
                          "close_renamed": false,
                          "close_timeout": 1
                        }
                      ],
                      "enable_raw_log": false,
                      "plugin": [
                        {
                          "processors": [
                            "${jsonencode(\n          {\n            \"json\" : {\n              \"field\" : \"__content__\",\n              \"trim_keys\" : {\n                \"mode\" : \"all\",\n                \"chars\" : \"#\"\n              },\n              \"trim_values\" : {\n                \"mode\" : \"all\",\n                \"chars\" : \"#t\"\n              },\n              \"allow_overwrite_keys\" : true,\n              \"allow_empty_values\" : true\n            },\n          },\n        )}",
                            "${jsonencode(\n          {\n            \"json\" : {\n              \"field\" : \"__content__\",\n              \"trim_keys\" : {\n                \"mode\" : \"all\",\n                \"chars\" : \"#xx\"\n              },\n              \"trim_values\" : {\n                \"mode\" : \"all\",\n                \"chars\" : \"#txxxt\"\n              },\n              \"allow_overwrite_keys\" : true,\n              \"allow_empty_values\" : true\n            },\n          },\n        )}"
                          ]
                        }
                      ],
                      "shard_hash_key": [
                        {
                          "hash_key": "3C"
                        }
                      ],
                      "tail_files": true
                    }
                  ]
                }
        argumentDocs:
            advanced: '- (Optional) LogCollector extension configuration.'
            annotation_tag: '- (Optional) Whether to add Kubernetes Annotation as a log tag to the raw log data.'
            begin_regex: '- (Optional) The first log line needs to match the regular expression.'
            close_eof: '- (Optional) Whether to release the log file handle after reading to the end of the log file. The default is false.'
            close_inactive: '- (Optional) The wait time to release the log file handle. When the log file has not written a new log for more than the specified time, release the handle of the log file.'
            close_removed: '- (Optional) After the log file is removed, whether to release the handle of the log file. The default is false.'
            close_renamed: '- (Optional) After the log file is renamed, whether to release the handle of the log file. The default is false.'
            close_timeout: '- (Optional) The maximum length of time that LogCollector monitors log files. The unit is seconds, and the default is 0 seconds, which means that there is no limit to the length of time LogCollector monitors log files.'
            container_name_regex: '- (Optional) The name of the container to be collected.'
            container_rule: '- (Optional) Container collection rules.'
            delimiter: '- (Optional) The delimiter of the log.'
            enable_raw_log: '- (Optional) Whether to upload raw logs.'
            env_tag: '- (Optional) Whether to add environment variables as log tags to raw log data.'
            exclude_container_env_regex: '- (Optional) The container environment variable blacklist is used to specify the range of containers not to be collected.'
            exclude_container_label_regex: '- (Optional) The container Label blacklist is used to specify the range of containers not to be collected.'
            exclude_paths: '- (Optional) Collect the blacklist list.'
            exclude_pod_label_regex: '- (Optional) Specify the containers not to be collected through the Pod Label blacklist, and not enable means to collect all containers.'
            extract_rule: '- (Optional) The extract rule.'
            fields: '- (Optional) Add constant fields to logs.'
            filter_key_regex: '- (Optional) The filter key list.'
            format: '- (Required) Log template content.'
            hash_key: '- (Required) The HashKey of the log group is used to specify the partition (shard) to be written to by the current log group.'
            id: '- ID of the resource.'
            include_container_env_regex: '- (Optional) The container environment variable whitelist specifies the container to be collected through the container environment variable. If the whitelist is not enabled, it means that all containers are specified to be collected.'
            include_container_label_regex: '- (Optional) The container label whitelist specifies the containers to be collected through the container label. If the whitelist is not enabled, all containers are specified to be collected.'
            include_pod_label_regex: '- (Optional) The Pod Label whitelist is used to specify containers to be collected. When the Pod Label whitelist is not enabled, it means that all containers are collected.'
            input_type: '- (Optional) The type of the collection configuration. Validate value can be 0(host log file), 1(K8s container standard output) and 2(Log files in the K8s container).'
            key: '- (Required) The name of the filter key.'
            keys: '- (Optional) A list of log field names (Key).'
            kubernetes_rule: '- (Optional) Collection rules for Kubernetes containers.'
            label_tag: '- (Optional) Whether to add Kubernetes Label as a log label to the original log data.'
            log_regex: '- (Optional) The entire log needs to match the regular expression.'
            log_sample: '- (Optional) The sample of the log.'
            log_template: '- (Optional) Automatically extract log fields according to the specified log template.'
            log_type: '- (Optional) The log type. The value can be one of the following: minimalist_log, json_log, delimiter_log, multiline_log, fullregex_log.'
            namespace_name_regex: '- (Optional) The name of the Kubernetes Namespace to be collected. If no Namespace name is specified, all containers will be collected. Namespace names support regular matching.'
            parse_path_rule: '- (Optional) Rules for parsing collection paths. After the rules are set, the fields in the collection path will be extracted through the regular expressions specified in the rules, and added to the log data as metadata.'
            path_sample: '- (Optional) Sample capture path for a real scene.'
            paths: '- (Optional) Collection path list.'
            plugin: '- (Optional) Plugin configuration. After the plugin configuration is enabled, one or more LogCollector processor plugins can be added to parse logs with complex or variable structures.'
            pod_name_regex: '- (Optional) The Pod name is used to specify the container to be collected. When no Pod name is specified, it means to collect all containers.'
            processors: '- (Required) LogCollector plugin.'
            regex: '- (Required) The log content of the filter field needs to match the regular expression.'
            rule_id: '- The id of the rule.'
            rule_name: '- (Required) The name of the collection configuration.'
            shard_hash_key: '- (Optional) Rules for routing log partitions. Setting this parameter indicates that the HashKey routing shard mode is used when collecting logs, and Log Service will write the data to the shard containing the specified Key value.'
            stream: '- (Required) The collection mode.'
            tail_files: '- (Optional) LogCollector collection strategy, which specifies whether LogCollector collects incremental logs or full logs. The default is false, which means to collect all logs.'
            time_format: '- (Optional) Parsing format of the time field.'
            time_key: '- (Optional) The field name of the log time field.'
            topic_id: '- (Required, ForceNew) The ID of the log topic to which the collection configuration belongs.'
            type: '- (Required) Collection path type. The path type can be File or Path.'
            un_match_log_key: '- (Optional) When uploading the failed log, the key name of the failed log.'
            un_match_up_load_switch: '- (Optional) Whether to upload the log of parsing failure.'
            user_define_rule: '- (Optional) User-defined collection rules.'
            value: '- (Required) Collection path.'
            workload_name_regex: '- (Optional) Specify the container to be collected by the name of the workload. When no workload name is specified, all containers are collected. The workload name supports regular matching.'
            workload_type: |-
                - (Optional) Specify the containers to be collected by the type of workload, only one type can be selected. When no type is specified, it means all types of containers are collected. The supported types of workloads are:
                Deployment: stateless workload.
                StatefulSet: stateful workload.
                DaemonSet: daemon process.
                Job: task.
                CronJob: scheduled task.
        importStatements: []
    volcengine_tls_rule_applier:
        subCategory: TLS
        description: Provides a resource to manage tls rule applier
        name: volcengine_tls_rule_applier
        title: volcengine_tls_rule_applier
        examples:
            - name: foo
              manifest: |-
                {
                  "host_group_id": "a2a9e8c5-9835-434f-b866-2c1cfa82887d",
                  "rule_id": "25104b0f-28b7-4a5c-8339-7f9c431d77c8"
                }
        argumentDocs:
            host_group_id: '- (Required, ForceNew) The id of the host group.'
            id: '- ID of the resource.'
            rule_id: '- (Required, ForceNew) The id of the rule.'
        importStatements: []
    volcengine_tls_topic:
        subCategory: TLS
        description: Provides a resource to manage tls topic
        name: volcengine_tls_topic
        title: volcengine_tls_topic
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_split": true,
                  "description": "test",
                  "enable_tracking": true,
                  "max_split_shard": 10,
                  "project_id": "e020c978-4f05-40e1-9167-0113d3ef****",
                  "shard_count": 2,
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "time_format": "%Y-%m-%dT%H:%M:%S,%f",
                  "time_key": "request_time",
                  "topic_name": "tf-test-topic",
                  "ttl": 10
                }
        argumentDocs:
            auto_split: |-
                - (Optional) Whether to enable automatic partition splitting function of the tls topic.
                true: (default) When the amount of data written exceeds the capacity of existing partitions for 5 consecutive minutes, Log Service will automatically split partitions based on the data volume to meet business needs. However, the number of partitions after splitting cannot exceed the maximum number of partitions. Newly split partitions within the last 15 minutes will not be automatically split again.
                false: Disables automatic partition splitting.
            create_time: '- The create time of the tls topic.'
            description: '- (Optional) The description of the tls project.'
            enable_tracking: '- (Optional) Whether to enable WebTracking function of the tls topic.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            manual_split_shard_id: |-
                - (Optional) The id of shard to be manually split. This field is valid only when modifying the topic.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            manual_split_shard_number: |-
                - (Optional) The split number of shard. The valid number should be a non-zero even number, such as 2, 4, 8, or 16. The total number of read-write status shards after splitting cannot exceed 50.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            max_split_shard: '- (Optional) The maximum number of partitions, which is the maximum number of partitions after partition splitting. The value range is 1 to 10, with a default of 10.'
            modify_time: '- The modify time of the tls topic.'
            project_id: '- (Required, ForceNew) The project id of the tls topic.'
            shard_count: '- (Required, ForceNew) The count of shards in the tls topic. Valid value range: 1-10. This field is only valid when creating tls topic.'
            tags: '- (Optional) Tags.'
            time_format: '- (Optional) The format of the time field.'
            time_key: '- (Optional) The name of the time field.'
            topic_name: '- (Required) The name of the tls topic.'
            ttl: '- (Required) The data storage time of the tls topic. Unit: Day. Valid value range: 1-3650.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_tos_bucket:
        subCategory: TOS(BETA)
        description: Provides a resource to manage tos bucket
        name: volcengine_tos_bucket
        title: volcengine_tos_bucket
        examples:
            - name: default
              manifest: |-
                {
                  "account_acl": [
                    {
                      "account_id": "1",
                      "permission": "READ"
                    },
                    {
                      "account_id": "2001",
                      "permission": "WRITE_ACP"
                    }
                  ],
                  "az_redundancy": "multi-az",
                  "bucket_acl_delivered": true,
                  "bucket_name": "tf-acc-test-bucket-0123-3",
                  "enable_version": true,
                  "project_name": "default",
                  "public_acl": "private",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            account_acl: '- (Optional) The user set of grant full control.'
            account_id: '- (Required) The accountId to control.'
            acl_type: '- (Optional) The acl type to control.Valid value is CanonicalUser.'
            az_redundancy: '- (Optional, ForceNew) The AZ redundancy of the Tos Bucket. Default is single-az. Valid values: single-az, multi-az.'
            bucket_acl_delivered: '- (Optional) Whether to enable the default inheritance bucket ACL function for objects. Default is false.'
            bucket_name: '- (Required, ForceNew) The name of the bucket.'
            creation_date: '- The create date of the TOS bucket.'
            enable_version: '- (Optional) The flag of enable tos version.'
            extranet_endpoint: '- The extranet endpoint of the TOS bucket.'
            id: '- ID of the resource.'
            intranet_endpoint: '- The intranet endpoint the TOS bucket.'
            key: '- (Required) The Key of Tags.'
            location: '- The location of the TOS bucket.'
            permission: '- (Required) The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.'
            project_name: '- (Optional) The ProjectName of the Tos Bucket. Default is default.'
            public_acl: '- (Optional) The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.'
            storage_class: '- (Optional, ForceNew) The storage type of the object.Valid value is STANDARD|IA|ARCHIVE_FR.Default is STANDARD.'
            tags: '- (Optional) Tos Bucket Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_tos_bucket_inventory:
        subCategory: TOS(BETA)
        description: Provides a resource to manage tos bucket inventory
        name: volcengine_tos_bucket_inventory
        title: volcengine_tos_bucket_inventory
        examples:
            - name: foo
              manifest: |-
                {
                  "bucket_name": "terraform-demo",
                  "destination": [
                    {
                      "tos_bucket_destination": [
                        {
                          "account_id": "21000*****",
                          "bucket": "terraform-demo",
                          "format": "CSV",
                          "prefix": "tf-test-prefix",
                          "role": "TosArchiveTOSInventory"
                        }
                      ]
                    }
                  ],
                  "filter": [
                    {
                      "prefix": "test-tf"
                    }
                  ],
                  "included_object_versions": "All",
                  "inventory_id": "acc-test-inventory",
                  "is_enabled": true,
                  "optional_fields": [
                    {
                      "field": [
                        "Size",
                        "StorageClass",
                        "CRC64"
                      ]
                    }
                  ],
                  "schedule": [
                    {
                      "frequency": "Weekly"
                    }
                  ]
                }
        argumentDocs:
            account_id: '- (Required) The account id of the destination tos bucket.'
            bucket: '- (Required) The name of the destination tos bucket.'
            bucket_name: '- (Required, ForceNew) The name of the bucket.'
            destination: '- (Required) The destination information of the bucket inventory.'
            field: '- (Optional) The information exported from the bucket inventory. Valid values: Size, LastModifiedDate, ETag, StorageClass, IsMultipartUploaded, EncryptionStatus, CRC64, ReplicationStatus.'
            filter: '- (Optional) The filter of the bucket inventory.'
            format: '- (Required) The format of the bucket inventory. Valid values: CSV.'
            frequency: '- (Required) The export schedule of the bucket inventory. Valid values: Daily, Weekly.'
            id: '- ID of the resource.'
            included_object_versions: '- (Required) The export version of object. Valid values: All, Current.'
            inventory_id: '- (Required, ForceNew) The name of the bucket inventory.'
            is_enabled: '- (Required) Whether to enable the bucket inventory.'
            optional_fields: '- (Optional) The information exported from the bucket inventory.'
            prefix: '- (Optional) The prefix matching information of the exported object. If not set, a list of all objects in the bucket will be generated by default.'
            role: '- (Required) The role name used to grant TOS access to read all files from the source bucket and write files to the destination bucket. You can use the default TOS role TosArchiveTOSInventory.'
            schedule: '- (Required) The export schedule of the bucket inventory.'
            tos_bucket_destination: '- (Required) The destination tos bucket information of the bucket inventory.'
        importStatements: []
    volcengine_tos_bucket_policy:
        subCategory: TOS(BETA)
        description: Provides a resource to manage tos bucket policy
        name: volcengine_tos_bucket_policy
        title: volcengine_tos_bucket_policy
        examples:
            - name: default
              manifest: |-
                {
                  "bucket_name": "tf-acc-test-bucket",
                  "policy": "${jsonencode({\n    Statement = [\n      {\n        Sid    = \"test\"\n        Effect = \"Allow\"\n        Principal = [\n          \"AccountId/subUserName\"\n        ]\n        Action = [\n          \"tos:List*\"\n        ]\n        Resource = [\n          \"trn:tos:::tf-acc-test-bucket\"\n        ]\n      }\n    ]\n  })}"
                }
        argumentDocs:
            bucket_name: '- (Required, ForceNew) The name of the bucket.'
            id: '- ID of the resource.'
            policy: '- (Required) The policy document. This is a JSON formatted string. For more information about building Volcengine IAM policy documents with Terraform, see the  Volcengine IAM Policy Document Guide.'
        importStatements: []
    volcengine_tos_bucket_realtime_log:
        subCategory: TOS(BETA)
        description: Provides a resource to manage tos bucket realtime log
        name: volcengine_tos_bucket_realtime_log
        title: volcengine_tos_bucket_realtime_log
        examples:
            - name: foo
              manifest: |-
                {
                  "access_log_configuration": [
                    {
                      "ttl": 6
                    }
                  ],
                  "bucket_name": "terraform-demo",
                  "role": "TOSLogArchiveTLSRole"
                }
        argumentDocs:
            access_log_configuration: '- (Required) The export schedule of the bucket inventory.'
            bucket_name: '- (Required, ForceNew) The name of the bucket.'
            id: '- ID of the resource.'
            role: '- (Required, ForceNew) The role name used to grant TOS access to create resources such as projects and topics, and write logs to the TLS logging service. You can use the default TOS role TOSLogArchiveTLSRole.'
            ttl: '- (Optional) The TLS log retention duration. Unit in days. Valid values range is 1~3650. default is 7.'
        importStatements: []
    volcengine_tos_object:
        subCategory: TOS(BETA)
        description: Provides a resource to manage tos object
        name: volcengine_tos_object
        title: volcengine_tos_object
        examples:
            - name: default
              manifest: |-
                {
                  "account_acl": [
                    {
                      "account_id": "1",
                      "permission": "READ"
                    },
                    {
                      "account_id": "2001",
                      "permission": "WRITE_ACP"
                    }
                  ],
                  "bucket_name": "tf-acc-test-bucket",
                  "encryption": "AES256",
                  "file_path": "/Users/bytedance/Work/Go/build/test.txt",
                  "object_name": "tf-acc-test-object",
                  "public_acl": "private",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
        argumentDocs:
            account_acl: '- (Optional) The user set of grant full control.'
            account_id: '- (Required) The accountId to control.'
            acl_type: '- (Optional) The acl type to control.Valid value is CanonicalUser.'
            bucket_name: '- (Required, ForceNew) The name of the bucket.'
            content: '- (Optional) The content of the TOS Object when content type is json or text and xml. Only one of file_path,content can be specified.'
            content_md5: '- (Optional) The file md5 sum (32-bit hexadecimal string) for upload.'
            content_type: '- (Optional, ForceNew) The content type of the object.'
            enable_version: '- The flag of enable tos version.'
            encryption: '- (Optional, ForceNew) The encryption of the object.Valid value is AES256.'
            file_path: '- (Optional) The file path for upload. Only one of file_path,content can be specified.'
            id: '- ID of the resource.'
            is_default: '- Whether to enable the default inheritance bucket ACL function for the object.'
            key: '- (Required) The Key of Tags.'
            object_name: '- (Required, ForceNew) The name of the object.'
            permission: '- (Required) The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.'
            public_acl: '- (Optional) The public acl control of object. Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read|default. default means to enable the default inheritance bucket ACL function for the object.'
            storage_class: '- (Optional, ForceNew) The storage type of the object.Valid value is STANDARD|IA.'
            tags: '- (Optional) Tos Bucket Tags.'
            value: '- (Required) The Value of Tags.'
            version_ids: '- The version ids of the object if exist.'
        importStatements: []
    volcengine_transit_router:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router
        name: volcengine_transit_router
        title: volcengine_transit_router
        examples:
            - name: foo
              manifest: |-
                {
                  "asn": 4294967294,
                  "description": "acc-test",
                  "project_name": "default",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_name": "acc-test-tr"
                }
        argumentDocs:
            account_id: '- The ID of account.'
            asn: '- (Optional, ForceNew) The asn of the transit router. Valid value range in 64512-65534 and 4200000000-4294967294. Default is 64512.'
            business_status: '- The business status of the transit router.'
            creation_time: '- The create time.'
            description: '- (Optional) The description of the transit router.'
            grant_status: '- The grant status of the transit router.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            overdue_time: '- The overdue time.'
            project_name: '- (Optional) The ProjectName of the transit router.'
            resource_id: '- The id of resource.'
            resource_type: '- The type of resource.'
            status: '- The status of the transit router.'
            tags: '- (Optional) Tags.'
            transit_router_attachment_id: '- The id of transit router attachment.'
            transit_router_attachment_name: '- The name of transit router attachment.'
            transit_router_attachments: '- The attachments of transit router.'
            transit_router_id: '- The ID of the transit router.'
            transit_router_name: '- (Optional) The name of the transit router.'
            transit_router_route_table_id: '- The id of transit router route table.'
            update_time: '- The update time.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_transit_router_bandwidth_package:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router bandwidth package
        name: volcengine_transit_router_bandwidth_package
        title: volcengine_transit_router_bandwidth_package
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 2,
                  "description": "acc-test",
                  "local_geographic_region_set_id": "China",
                  "peer_geographic_region_set_id": "China",
                  "period": 1,
                  "project_name": "default",
                  "renew_type": "Manual",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_bandwidth_package_name": "acc-tf-test"
                }
        argumentDocs:
            allocate_time: '- The delete time of the transit router bandwidth package.'
            allocations: '- The detailed information on cross regional connections associated with bandwidth packets.'
            bandwidth: '- (Optional) The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.'
            business_status: '- The business status of the transit router bandwidth package.'
            creation_time: '- The create time of the transit router bandwidth package.'
            delete_time: '- The peer region id of the transit router.'
            description: '- (Optional) The description of the transit router bandwidth package.'
            expired_time: '- The expired time of the transit router bandwidth package.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            local_geographic_region_set_id: '- (Optional) The local geographic region set ID. Valid values: China, Asia. Default is China.'
            local_region_id: '- The local region id of the transit router.'
            peer_geographic_region_set_id: '- (Optional) The peer geographic region set ID. Valid values: China, Asia. Default is China.'
            period: '- (Optional) The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to Month.The modification of this field only takes effect when the value of the renew_type is Manual.'
            project_name: '- (Optional) The ProjectName of the transit router bandwidth package.'
            remain_renew_times: '- (Optional) The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the renew_type is Auto.'
            remaining_bandwidth: '- The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.'
            renew_period: '- (Optional) The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the renew_type is Auto. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            renew_type: '- (Optional) The renewal type of the transit router bandwidth package. Valid values: Manual, Auto, NoRenew. Default is Manual.This field is only effective when modifying the bandwidth package.'
            status: '- The status of the transit router bandwidth package.'
            tags: '- (Optional) Tags.'
            transit_router_bandwidth_package_name: '- (Optional) The name of the transit router bandwidth package.'
            transit_router_peer_attachment_id: '- The ID of the peer attachment.'
            update_time: '- The update time of the transit router bandwidth package.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_transit_router_direct_connect_gateway_attachment:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router direct connect gateway attachment
        name: volcengine_transit_router_direct_connect_gateway_attachment
        title: volcengine_transit_router_direct_connect_gateway_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test-tf",
                  "direct_connect_gateway_id": "${volcengine_direct_connect_gateway.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_attachment_name": "acc-test-tf",
                  "transit_router_id": "${volcengine_transit_router.foo.id}"
                }
              references:
                direct_connect_gateway_id: volcengine_direct_connect_gateway.foo.id
                transit_router_id: volcengine_transit_router.foo.id
              dependencies:
                volcengine_direct_connect_gateway.foo: |-
                    {
                      "description": "acc-test-acc",
                      "direct_connect_gateway_name": "acc-test-gateway-acc",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_transit_router.foo: |-
                    {
                      "description": "acc-test-tf-acc",
                      "transit_router_name": "acc-test-tf-acc"
                    }
        argumentDocs:
            description: '- (Optional) The description.'
            direct_connect_gateway_id: '- (Required, ForceNew) The id of the direct connect gateway.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            tags: '- (Optional) Tags.'
            transit_router_attachment_id: '- The id of the transit router direct connect gateway attachment.'
            transit_router_attachment_name: '- (Optional) The name of the transit router direct connect gateway attachment.'
            transit_router_id: '- (Required, ForceNew) The id of the transit router.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_transit_router_grant_rule:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router grant rule
        name: volcengine_transit_router_grant_rule
        title: volcengine_transit_router_grant_rule
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc-test-tf",
                  "grant_account_id": "2000xxxxx",
                  "transit_router_id": "${volcengine_transit_router.foo.id}"
                }
              references:
                transit_router_id: volcengine_transit_router.foo.id
              dependencies:
                volcengine_transit_router.foo: |-
                    {
                      "description": "acc-test-tf",
                      "transit_router_name": "acc-test-tf"
                    }
        argumentDocs:
            description: '- (Optional) The description of the rule.'
            grant_account_id: '- (Required, ForceNew) Account ID awaiting authorization for intermediate router instance.'
            id: '- ID of the resource.'
            transit_router_id: '- (Required, ForceNew) The id of the transit router.'
        importStatements: []
    volcengine_transit_router_peer_attachment:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router peer attachment
        name: volcengine_transit_router_peer_attachment
        title: volcengine_transit_router_peer_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 2,
                  "description": "tf-test",
                  "peer_transit_router_id": "tr-xxx",
                  "peer_transit_router_region_id": "cn-xx",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_attachment_name": "acc-test-tf",
                  "transit_router_bandwidth_package_id": "${volcengine_transit_router_bandwidth_package.foo.id}",
                  "transit_router_id": "${volcengine_transit_router.foo.id}"
                }
              references:
                transit_router_bandwidth_package_id: volcengine_transit_router_bandwidth_package.foo.id
                transit_router_id: volcengine_transit_router.foo.id
              dependencies:
                volcengine_transit_router.foo: |-
                    {
                      "description": "acc-test-tf",
                      "transit_router_name": "acc-test-tf"
                    }
                volcengine_transit_router_bandwidth_package.foo: |-
                    {
                      "bandwidth": 2,
                      "description": "acc-test",
                      "period": 1,
                      "remain_renew_times": -1,
                      "renew_period": 1,
                      "renew_type": "Manual",
                      "transit_router_bandwidth_package_name": "acc-tf-test"
                    }
        argumentDocs:
            bandwidth: '- (Optional) The bandwidth of the transit router peer attachment. Unit: Mbps.'
            creation_time: '- The creation time of the transit router peer attachment.'
            description: '- (Optional) The description of the transit router peer attachment.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            peer_transit_router_id: '- (Required, ForceNew) The id of the peer transit router.'
            peer_transit_router_region_id: '- (Required, ForceNew) The region id of the peer transit router.'
            status: '- The status of the transit router peer attachment.'
            tags: '- (Optional) Tags.'
            transit_router_attachment_name: '- (Optional) The name of the transit router peer attachment.'
            transit_router_bandwidth_package_id: '- (Optional) The bandwidth package id of the transit router peer attachment. When specifying this field, the field bandwidth must also be specified.'
            transit_router_id: '- (Required, ForceNew) The id of the local transit router.'
            transit_router_route_table_id: '- The route table id of the transit router peer attachment.'
            update_time: '- The update time of the transit router peer attachment.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_transit_router_route_entry:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router route entry
        name: volcengine_transit_router_route_entry
        title: volcengine_transit_router_route_entry
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test-acc-description-entry",
                  "destination_cidr_block": "192.168.0.0/24",
                  "transit_router_route_entry_name": "tf-acc-test-entry",
                  "transit_router_route_entry_next_hop_id": "${volcengine_transit_router_vpn_attachment.foo.transit_router_attachment_id}",
                  "transit_router_route_entry_next_hop_type": "Attachment",
                  "transit_router_route_table_id": "${volcengine_transit_router_route_table.foo.transit_router_route_table_id}"
                }
              references:
                transit_router_route_entry_next_hop_id: volcengine_transit_router_vpn_attachment.foo.transit_router_attachment_id
                transit_router_route_table_id: volcengine_transit_router_route_table.foo.transit_router_route_table_id
              dependencies:
                volcengine_customer_gateway.foo: |-
                    {
                      "customer_gateway_name": "acc-test",
                      "description": "acc-test",
                      "ip_address": "192.0.1.3"
                    }
                volcengine_transit_router.foo: |-
                    {
                      "description": "test-tf-acc",
                      "transit_router_name": "test-tf-acc"
                    }
                volcengine_transit_router_route_table.foo: |-
                    {
                      "description": "tf-test-acc-description-route-route-table",
                      "transit_router_id": "${volcengine_transit_router.foo.id}",
                      "transit_router_route_table_name": "tf-table-test-acc"
                    }
                volcengine_transit_router_vpn_attachment.foo: |-
                    {
                      "description": "tf-test-acc-desc",
                      "transit_router_attachment_name": "tf-test-acc",
                      "transit_router_id": "${volcengine_transit_router.foo.id}",
                      "vpn_connection_id": "${volcengine_vpn_connection.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpn_connection.foo: |-
                    {
                      "attach_type": "TransitRouter",
                      "customer_gateway_id": "${volcengine_customer_gateway.foo.id}",
                      "description": "acc-tf-test",
                      "dpd_action": "none",
                      "ike_config_auth_alg": "md5",
                      "ike_config_dh_group": "group2",
                      "ike_config_enc_alg": "aes",
                      "ike_config_lifetime": 9000,
                      "ike_config_local_id": "acc_test",
                      "ike_config_mode": "main",
                      "ike_config_psk": "acctest@!3",
                      "ike_config_remote_id": "acc_test",
                      "ike_config_version": "ikev1",
                      "ipsec_config_auth_alg": "sha256",
                      "ipsec_config_dh_group": "group2",
                      "ipsec_config_enc_alg": "aes",
                      "ipsec_config_lifetime": 9000,
                      "local_subnet": [
                        "192.168.0.0/22"
                      ],
                      "log_enabled": false,
                      "nat_traversal": true,
                      "remote_subnet": [
                        "192.161.0.0/20"
                      ],
                      "vpn_connection_name": "acc-tf-test"
                    }
        argumentDocs:
            as_path: '- The as path of the route entry.'
            creation_time: '- The creation time of the route entry.'
            description: '- (Optional) Description of the transit router route entry.'
            destination_cidr_block: '- (Required, ForceNew) The target network segment of the route entry.'
            id: '- ID of the resource.'
            status: '- The status of the route entry.'
            transit_router_route_entry_id: '- The id of the route entry.'
            transit_router_route_entry_name: '- (Optional) The name of the route entry.'
            transit_router_route_entry_next_hop_id: '- (Optional, ForceNew) The next hot id of the routing entry. When the parameter TransitRouterRouteEntryNextHopType is Attachment, this parameter must be filled.'
            transit_router_route_entry_next_hop_type: '- (Required, ForceNew) The next hop type of the routing entry. The value can be Attachment or BlackHole.'
            transit_router_route_entry_type: '- The type of the route entry.'
            transit_router_route_table_id: '- (Required, ForceNew) The id of the route table.'
            update_time: '- The update time of the route entry.'
        importStatements: []
    volcengine_transit_router_route_table:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router route table
        name: volcengine_transit_router_route_table
        title: volcengine_transit_router_route_table
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test-acc-description",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_id": "${volcengine_transit_router.foo.id}",
                  "transit_router_route_table_name": "tf-table-test-acc"
                }
              references:
                transit_router_id: volcengine_transit_router.foo.id
              dependencies:
                volcengine_transit_router.foo: |-
                    {
                      "description": "test-tf-acc",
                      "transit_router_name": "test-tf-acc"
                    }
        argumentDocs:
            creation_time: '- The creation time of the route table.'
            description: '- (Optional) Description of the transit router route table.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            status: '- The status of the route table.'
            tags: '- (Optional) Tags.'
            transit_router_id: '- (Required, ForceNew) Id of the transit router.'
            transit_router_route_table_id: '- The id of the route table.'
            transit_router_route_table_name: '- (Optional) The name of the route table.'
            transit_router_route_table_type: '- The type of route table.'
            update_time: '- The update time of the route table.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_transit_router_route_table_association:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router route table association
        name: volcengine_transit_router_route_table_association
        title: volcengine_transit_router_route_table_association
        examples:
            - name: foo
              manifest: |-
                {
                  "transit_router_attachment_id": "${volcengine_transit_router_vpn_attachment.foo.transit_router_attachment_id}",
                  "transit_router_route_table_id": "${volcengine_transit_router_route_table.foo.transit_router_route_table_id}"
                }
              references:
                transit_router_attachment_id: volcengine_transit_router_vpn_attachment.foo.transit_router_attachment_id
                transit_router_route_table_id: volcengine_transit_router_route_table.foo.transit_router_route_table_id
              dependencies:
                volcengine_customer_gateway.foo: |-
                    {
                      "customer_gateway_name": "acc-test",
                      "description": "acc-test",
                      "ip_address": "192.0.1.3"
                    }
                volcengine_transit_router.foo: |-
                    {
                      "description": "test-tf-acc",
                      "transit_router_name": "test-tf-acc"
                    }
                volcengine_transit_router_route_table.foo: |-
                    {
                      "description": "tf-test-acc-description",
                      "transit_router_id": "${volcengine_transit_router.foo.id}",
                      "transit_router_route_table_name": "tf-table-test-acc"
                    }
                volcengine_transit_router_vpn_attachment.foo: |-
                    {
                      "description": "tf-test-acc-desc",
                      "transit_router_attachment_name": "tf-test-acc",
                      "transit_router_id": "${volcengine_transit_router.foo.id}",
                      "vpn_connection_id": "${volcengine_vpn_connection.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpn_connection.foo: |-
                    {
                      "attach_type": "TransitRouter",
                      "customer_gateway_id": "${volcengine_customer_gateway.foo.id}",
                      "description": "acc-tf-test",
                      "dpd_action": "none",
                      "ike_config_auth_alg": "md5",
                      "ike_config_dh_group": "group2",
                      "ike_config_enc_alg": "aes",
                      "ike_config_lifetime": 9000,
                      "ike_config_local_id": "acc_test",
                      "ike_config_mode": "main",
                      "ike_config_psk": "acctest@!3",
                      "ike_config_remote_id": "acc_test",
                      "ike_config_version": "ikev1",
                      "ipsec_config_auth_alg": "sha256",
                      "ipsec_config_dh_group": "group2",
                      "ipsec_config_enc_alg": "aes",
                      "ipsec_config_lifetime": 9000,
                      "local_subnet": [
                        "192.168.0.0/22"
                      ],
                      "log_enabled": false,
                      "nat_traversal": true,
                      "remote_subnet": [
                        "192.161.0.0/20"
                      ],
                      "vpn_connection_name": "acc-tf-test"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            transit_router_attachment_id: '- (Required, ForceNew) The ID of the network instance connection.'
            transit_router_route_table_id: '- (Required, ForceNew) The ID of the routing table associated with the transit router instance.'
        importStatements: []
    volcengine_transit_router_route_table_propagation:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router route table propagation
        name: volcengine_transit_router_route_table_propagation
        title: volcengine_transit_router_route_table_propagation
        examples:
            - name: foo
              manifest: |-
                {
                  "transit_router_attachment_id": "${volcengine_transit_router_vpc_attachment.foo.transit_router_attachment_id}",
                  "transit_router_route_table_id": "${volcengine_transit_router_route_table.foo.transit_router_route_table_id}"
                }
              references:
                transit_router_attachment_id: volcengine_transit_router_vpc_attachment.foo.transit_router_attachment_id
                transit_router_route_table_id: volcengine_transit_router_route_table.foo.transit_router_route_table_id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo2: |-
                    {
                      "cidr_block": "172.16.255.0/24",
                      "subnet_name": "acc-test-subnet2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[1].id}"
                    }
                volcengine_transit_router.foo: |-
                    {
                      "description": "test-tf-acc",
                      "transit_router_name": "test-tf-acc"
                    }
                volcengine_transit_router_route_table.foo: |-
                    {
                      "description": "tf-test-acc-description",
                      "transit_router_id": "${volcengine_transit_router.foo.id}",
                      "transit_router_route_table_name": "tf-table-test-acc"
                    }
                volcengine_transit_router_vpc_attachment.foo: |-
                    {
                      "attach_points": [
                        {
                          "subnet_id": "${volcengine_subnet.foo.id}",
                          "zone_id": "cn-beijing-a"
                        },
                        {
                          "subnet_id": "${volcengine_subnet.foo2.id}",
                          "zone_id": "cn-beijing-b"
                        }
                      ],
                      "description": "tf-test-acc-description",
                      "transit_router_attachment_name": "tf-test-acc-name1",
                      "transit_router_id": "${volcengine_transit_router.foo.id}",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc-acc"
                    }
        argumentDocs:
            id: '- ID of the resource.'
            transit_router_attachment_id: '- (Required, ForceNew) The ID of the network instance connection.'
            transit_router_route_table_id: '- (Required, ForceNew) The ID of the routing table associated with the transit router instance.'
        importStatements: []
    volcengine_transit_router_shared_transit_router_state:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router shared transit router state
        name: volcengine_transit_router_shared_transit_router_state
        title: volcengine_transit_router_shared_transit_router_state
        examples:
            - name: foo
              manifest: |-
                {
                  "action": "Accept",
                  "provider": "${volcengine.second_account}",
                  "transit_router_id": "${volcengine_transit_router.foo.id}"
                }
              references:
                provider: volcengine.second_account
                transit_router_id: volcengine_transit_router.foo.id
              dependencies:
                volcengine_transit_router.foo: |-
                    {
                      "description": "acc-test",
                      "transit_router_name": "acc-test-tr"
                    }
                volcengine_transit_router_grant_rule.foo: |-
                    {
                      "description": "acc-test-tf",
                      "grant_account_id": "2000xxxxx",
                      "transit_router_id": "${volcengine_transit_router.foo.id}"
                    }
        argumentDocs:
            action: '- (Required) Accept or Reject the shared transit router. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            id: '- ID of the resource.'
            transit_router_id: '- (Required, ForceNew) The id of the transit router.'
        importStatements: []
    volcengine_transit_router_vpc_attachment:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router vpc attachment
        name: volcengine_transit_router_vpc_attachment
        title: volcengine_transit_router_vpc_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "attach_points": [
                    {
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "zone_id": "cn-beijing-a"
                    },
                    {
                      "subnet_id": "${volcengine_subnet.foo2.id}",
                      "zone_id": "cn-beijing-b"
                    }
                  ],
                  "auto_publish_route_enabled": true,
                  "description": "tf-test-acc-description",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_attachment_name": "tf-test-acc-vpc-attach",
                  "transit_router_id": "${volcengine_transit_router.foo.id}",
                  "vpc_id": "${volcengine_vpc.foo.id}"
                }
              references:
                attach_points.subnet_id: volcengine_subnet.foo2.id
                transit_router_id: volcengine_transit_router.foo.id
                vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_subnet.foo2: |-
                    {
                      "cidr_block": "172.16.255.0/24",
                      "subnet_name": "acc-test-subnet2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[1].id}"
                    }
                volcengine_transit_router.foo: |-
                    {
                      "asn": 4294967293,
                      "description": "test-tf-acc",
                      "transit_router_name": "test-tf-acc"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc-acc"
                    }
        argumentDocs:
            attach_points: '- (Required) The attach points of transit router vpc attachment.'
            auto_publish_route_enabled: '- (Optional) Whether to auto publish route of the transit router to vpc instance. Default is false.'
            creation_time: '- The create time.'
            description: '- (Optional) The description of the transit router vpc attachment.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            status: '- The status of the transit router.'
            subnet_id: '- (Required) The id of subnet.'
            tags: '- (Optional) Tags.'
            transit_router_attachment_id: '- The id of the transit router attachment.'
            transit_router_attachment_name: '- (Optional) The name of the transit router vpc attachment.'
            transit_router_id: '- (Required, ForceNew) The id of the transit router.'
            update_time: '- The update time.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Required, ForceNew) The ID of vpc.'
            zone_id: '- (Required) The id of zone.'
        importStatements: []
    volcengine_transit_router_vpn_attachment:
        subCategory: TRANSIT_ROUTER
        description: Provides a resource to manage transit router vpn attachment
        name: volcengine_transit_router_vpn_attachment
        title: volcengine_transit_router_vpn_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "tf-test-acc-desc",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "transit_router_attachment_name": "tf-test-acc",
                  "transit_router_id": "${volcengine_transit_router.foo.id}",
                  "vpn_connection_id": "${volcengine_vpn_connection.foo.id}",
                  "zone_id": "cn-beijing-a"
                }
              references:
                transit_router_id: volcengine_transit_router.foo.id
                vpn_connection_id: volcengine_vpn_connection.foo.id
              dependencies:
                volcengine_customer_gateway.foo: |-
                    {
                      "customer_gateway_name": "acc-test",
                      "description": "acc-test",
                      "ip_address": "192.0.1.3"
                    }
                volcengine_transit_router.foo: |-
                    {
                      "description": "test-tf-acc",
                      "transit_router_name": "test-tf-acc"
                    }
                volcengine_vpn_connection.foo: |-
                    {
                      "attach_type": "TransitRouter",
                      "customer_gateway_id": "${volcengine_customer_gateway.foo.id}",
                      "description": "acc-tf-test",
                      "dpd_action": "none",
                      "ike_config_auth_alg": "md5",
                      "ike_config_dh_group": "group2",
                      "ike_config_enc_alg": "aes",
                      "ike_config_lifetime": 9000,
                      "ike_config_local_id": "acc_test",
                      "ike_config_mode": "main",
                      "ike_config_psk": "acctest@!3",
                      "ike_config_remote_id": "acc_test",
                      "ike_config_version": "ikev1",
                      "ipsec_config_auth_alg": "sha256",
                      "ipsec_config_dh_group": "group2",
                      "ipsec_config_enc_alg": "aes",
                      "ipsec_config_lifetime": 9000,
                      "local_subnet": [
                        "192.168.0.0/22"
                      ],
                      "log_enabled": false,
                      "nat_traversal": true,
                      "remote_subnet": [
                        "192.161.0.0/20"
                      ],
                      "vpn_connection_name": "acc-tf-test"
                    }
        argumentDocs:
            creation_time: '- The create time.'
            description: '- (Optional) The description of the transit router vpn attachment.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            status: '- The status of the transit router.'
            tags: '- (Optional) Tags.'
            transit_router_attachment_id: '- The id of the transit router vpn attachment.'
            transit_router_attachment_name: '- (Optional) The name of the transit router vpn attachment.'
            transit_router_id: '- (Required, ForceNew) The id of the transit router.'
            update_time: '- The update time.'
            value: '- (Required) The Value of Tags.'
            vpn_connection_id: '- (Required, ForceNew) The ID of the IPSec connection.'
            zone_id: '- (Required, ForceNew) The ID of the availability zone.'
        importStatements: []
    volcengine_vedb_mysql_account:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql account
        name: volcengine_vedb_mysql_account
        title: volcengine_vedb_mysql_account
        examples:
            - name: foo
              manifest: |-
                {
                  "account_name": "tftest",
                  "account_password": "93f0cb0614Aab12",
                  "account_privileges": [
                    {
                      "account_privilege": "Custom",
                      "account_privilege_detail": "SELECT,INSERT,DELETE",
                      "db_name": "${volcengine_vedb_mysql_database.foo.db_name}"
                    }
                  ],
                  "account_type": "Normal",
                  "instance_id": "${volcengine_vedb_mysql_instance.foo.id}"
                }
              references:
                account_privileges.db_name: volcengine_vedb_mysql_database.foo.db_name
                instance_id: volcengine_vedb_mysql_instance.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vedb_mysql_database.foo: |-
                    {
                      "db_name": "tf-table",
                      "instance_id": "${volcengine_vedb_mysql_instance.foo.id}"
                    }
                volcengine_vedb_mysql_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MySQL_8_0",
                      "db_minor_version": "3.0",
                      "instance_name": "tf-test",
                      "node_number": 2,
                      "node_spec": "vedb.mysql.x4.large",
                      "project_name": "testA",
                      "storage_charge_type": "PostPaid",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tftest",
                          "value": "tftest"
                        },
                        {
                          "key": "tftest2",
                          "value": "tftest2"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_name: |-
                - (Required, ForceNew) Database account name. The account name must meet the following requirements:
                The name is unique and within 2 to 32 characters in length.
                Consists of lowercase letters, numbers, or underscores (_).
                Starts with a lowercase letter and ends with a letter or number.
                The name cannot contain certain prohibited words. For detailed information, please refer to prohibited keywords. And certain reserved words such as root, admin, etc. cannot be used.
            account_password: |-
                - (Required) Password of database account. The account password must meet the following requirements:
                It can only contain upper and lower case letters, numbers and the following special characters _#!@$%^&*()+=-.
                It must be within 8 to 32 characters in length.
                It must contain at least three of upper case letters, lower case letters, numbers or special characters.
            account_privilege: |-
                - (Required) Authorization database privilege types:
                ReadWrite: Read and write privilege.
                ReadOnly: Read-only privilege.
                DDLOnly: Only DDL privilege.
                DMLOnly: Only DML privilege.
                Custom: Custom privilege.
            account_privilege_detail: |-
                - (Optional) The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
                When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
            account_privileges: '- (Optional) Database permission information. When the value of AccountType is Super, this parameter does not need to be passed. High-privilege accounts by default have all permissions for all databases under this instance. When the value of AccountType is Normal, it is recommended to pass this parameter to grant specified permissions for specified databases to ordinary accounts. If not set, this account does not have any permissions for any database.'
            account_type: |-
                - (Required, ForceNew) Database account type. Values:
                Super: High-privilege account. Only one high-privilege account can be created for an instance. It has all permissions for all databases under this instance and can manage all ordinary accounts and databases.
                Normal: Multiple ordinary accounts can be created for an instance. Specific database permissions need to be manually granted to ordinary accounts.
            db_name: '- (Required) Database name requiring authorization.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
        importStatements: []
    volcengine_vedb_mysql_allowlist:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql allowlist
        name: volcengine_vedb_mysql_allowlist
        title: volcengine_vedb_mysql_allowlist
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list": [
                    "192.168.0.0/24",
                    "192.168.1.0/24",
                    "192.168.2.0/24"
                  ],
                  "allow_list_desc": "acc-test",
                  "allow_list_name": "acc-test-allowlist",
                  "allow_list_type": "IPv4"
                }
        argumentDocs:
            allow_list: '- (Required) Enter an IP address or a range of IP addresses in CIDR format.'
            allow_list_desc: '- (Optional) The description of the allow list.'
            allow_list_id: '- The id of the allow list.'
            allow_list_name: '- (Required) The name of the allow list.'
            allow_list_type: '- (Optional) The type of IP address in the whitelist. Currently only IPv4 addresses are supported.'
            id: '- ID of the resource.'
        importStatements: []
    volcengine_vedb_mysql_allowlist_associate:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql allowlist associate
        name: volcengine_vedb_mysql_allowlist_associate
        title: volcengine_vedb_mysql_allowlist_associate
        examples:
            - name: foo
              manifest: |-
                {
                  "allow_list_id": "${volcengine_vedb_mysql_allowlist.foo.id}",
                  "instance_id": "${volcengine_vedb_mysql_instance.foo.id}"
                }
              references:
                allow_list_id: volcengine_vedb_mysql_allowlist.foo.id
                instance_id: volcengine_vedb_mysql_instance.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vedb_mysql_allowlist.foo: |-
                    {
                      "allow_list": [
                        "192.168.0.0/24",
                        "192.168.1.0/24",
                        "192.168.2.0/24"
                      ],
                      "allow_list_desc": "acc-test",
                      "allow_list_name": "acc-test-allowlist",
                      "allow_list_type": "IPv4"
                    }
                volcengine_vedb_mysql_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MySQL_8_0",
                      "db_minor_version": "3.0",
                      "instance_name": "tf-test",
                      "node_number": 2,
                      "node_spec": "vedb.mysql.x4.large",
                      "project_name": "testA",
                      "storage_charge_type": "PostPaid",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tftest",
                          "value": "tftest"
                        },
                        {
                          "key": "tftest2",
                          "value": "tftest2"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            allow_list_id: '- (Required, ForceNew) The id of the allow list.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the mysql instance.'
        importStatements: []
    volcengine_vedb_mysql_backup:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql backup
        name: volcengine_vedb_mysql_backup
        title: volcengine_vedb_mysql_backup
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_policy": [
                    {
                      "backup_retention_period": 8,
                      "backup_time": "18:00Z-20:00Z",
                      "full_backup_period": "Monday,Tuesday,Wednesday"
                    }
                  ],
                  "instance_id": "${volcengine_vedb_mysql_instance.foo.id}"
                }
              references:
                instance_id: volcengine_vedb_mysql_instance.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vedb_mysql_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MySQL_8_0",
                      "db_minor_version": "3.0",
                      "instance_name": "tf-test",
                      "node_number": 2,
                      "node_spec": "vedb.mysql.x4.large",
                      "project_name": "testA",
                      "storage_charge_type": "PostPaid",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tftest",
                          "value": "tftest"
                        },
                        {
                          "key": "tftest2",
                          "value": "tftest2"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            backup_id: '- The id of the backup.'
            backup_method: '- (Optional, ForceNew) Backup method. Currently, only physical backup is supported. The value is Physical.'
            backup_policy: '- (Optional) Data backup strategy for instances.'
            backup_retention_period: '- (Required) Data backup retention period, value: 7 to 30 days.'
            backup_time: '- (Required) The time for executing the backup task has an interval window of 2 hours and must be an even-hour time. Format: HH:mmZ-HH:mmZ (UTC time).'
            backup_type: '- (Optional, ForceNew) Backup type. Currently, only full backup is supported. The value is Full.'
            full_backup_period: '- (Required) Full backup period. It is recommended to select at least 2 days per week for full backup. Multiple values are separated by English commas (,). Values: Monday: Monday. Tuesday: Tuesday. Wednesday: Wednesday. Thursday: Thursday. Friday: Friday. Saturday: Saturday. Sunday: Sunday.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
        importStatements: []
    volcengine_vedb_mysql_database:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql database
        name: volcengine_vedb_mysql_database
        title: volcengine_vedb_mysql_database
        examples:
            - name: foo
              manifest: |-
                {
                  "db_name": "tf-table",
                  "instance_id": "${volcengine_vedb_mysql_instance.foo.id}"
                }
              references:
                instance_id: volcengine_vedb_mysql_instance.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vedb_mysql_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MySQL_8_0",
                      "db_minor_version": "3.0",
                      "instance_name": "tf-test",
                      "node_number": 2,
                      "node_spec": "vedb.mysql.x4.large",
                      "project_name": "testA",
                      "storage_charge_type": "PostPaid",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tftest",
                          "value": "tftest"
                        },
                        {
                          "key": "tftest2",
                          "value": "tftest2"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            character_set_name: '- (Optional, ForceNew) Database character set: utf8mb4 (default), utf8, latin1, ascii.'
            db_name: |-
                - (Required, ForceNew) The name of the database. Naming rules:
                Unique name. Start with a lowercase letter and end with a letter or number. The length is within 2 to 64 characters.
                Consist of lowercase letters, numbers, underscores (_), or hyphens (-).
                The name cannot contain certain reserved words.
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
        importStatements: []
    volcengine_vedb_mysql_endpoint:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql endpoint
        name: volcengine_vedb_mysql_endpoint
        title: volcengine_vedb_mysql_endpoint
        examples:
            - name: foo
              manifest: |-
                {
                  "consist_level": "Session",
                  "consist_timeout": 100000,
                  "consist_timeout_action": "ReadMaster",
                  "description": "tf test",
                  "distributed_transaction": true,
                  "endpoint_name": "tf-test",
                  "endpoint_type": "Custom",
                  "instance_id": "${volcengine_vedb_mysql_instance.foo.id}",
                  "master_accept_read_requests": true,
                  "node_ids": [
                    "${data.volcengine_vedb_mysql_instances.foo.instances[0].nodes[0].node_id}",
                    "${data.volcengine_vedb_mysql_instances.foo.instances[0].nodes[1].node_id}"
                  ],
                  "read_write_mode": "ReadWrite"
                }
              references:
                instance_id: volcengine_vedb_mysql_instance.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vedb_mysql_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MySQL_8_0",
                      "db_minor_version": "3.0",
                      "instance_name": "tf-test",
                      "node_number": 2,
                      "node_spec": "vedb.mysql.x4.large",
                      "project_name": "testA",
                      "storage_charge_type": "PostPaid",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tftest",
                          "value": "tftest"
                        },
                        {
                          "key": "tftest2",
                          "value": "tftest2"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            consist_level: |-
                - (Optional) Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
                Eventual: eventual consistency.
                Session: session consistency.
                Global: global consistency.
                Description
                When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
                When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
            consist_timeout: |-
                - (Optional) When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
                Explanation
                This parameter takes effect only when the value of ConsistLevel is Global or Session.
            consist_timeout_action: |-
                - (Optional) Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
                ReturnError: Return SQL error (wait replication complete timeout, please retry).
                ReadMaster: Send a request to the master node (default).
                Description
                This parameter takes effect only when the value of ConsistLevel is Global or Session.
            description: '- (Optional) Description information for connecting endpoint. The length cannot exceed 200 characters.'
            distributed_transaction: |-
                - (Optional) Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
                true: Enabled (default).
                false: Disabled.
                Description
                Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
            endpoint_id: '- The id of the endpoint.'
            endpoint_name: |-
                - (Optional) Connect the endpoint name. The setting rules are as follows:
                It cannot start with a number or a hyphen (-).
                It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
                The length is 1 to 64 characters.
            endpoint_type: '- (Required, ForceNew) Connect endpoint type. The value is fixed as Custom, indicating a custom endpoint.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The id of the instance.'
            master_accept_read_requests: |-
                - (Optional) The master node accepts read requests. Value range:
                true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
                false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
                Description
                Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
            node_ids: |-
                - (Required) Connect the node IDs associated with the endpoint.The filling rules are as follows:
                When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
                When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
            read_write_mode: |-
                - (Optional) Endpoint read-write mode. Values:
                ReadWrite: Read and write endpoint.
                ReadOnly: Read-only endpoint (default).
        importStatements: []
    volcengine_vedb_mysql_endpoint_public_address:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql endpoint public address
        name: volcengine_vedb_mysql_endpoint_public_address
        title: volcengine_vedb_mysql_endpoint_public_address
        examples:
            - name: foo
              manifest: |-
                {
                  "eip_id": "${volcengine_eip_address.foo.id}",
                  "endpoint_id": "${volcengine_vedb_mysql_endpoint.foo.endpoint_id}",
                  "instance_id": "${volcengine_vedb_mysql_instance.foo.id}"
                }
              references:
                eip_id: volcengine_eip_address.foo.id
                endpoint_id: volcengine_vedb_mysql_endpoint.foo.endpoint_id
                instance_id: volcengine_vedb_mysql_instance.foo.id
              dependencies:
                volcengine_eip_address.foo: |-
                    {
                      "bandwidth": 1,
                      "billing_type": "PostPaidByBandwidth",
                      "description": "acc-test",
                      "isp": "ChinaUnicom",
                      "name": "acc-eip",
                      "project_name": "default"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vedb_mysql_endpoint.foo: |-
                    {
                      "consist_level": "Session",
                      "consist_timeout": 100000,
                      "consist_timeout_action": "ReadMaster",
                      "description": "tf test",
                      "distributed_transaction": true,
                      "endpoint_name": "tf-test",
                      "endpoint_type": "Custom",
                      "instance_id": "${volcengine_vedb_mysql_instance.foo.id}",
                      "master_accept_read_requests": true,
                      "node_ids": [
                        "${data.volcengine_vedb_mysql_instances.foo.instances[0].nodes[0].node_id}",
                        "${data.volcengine_vedb_mysql_instances.foo.instances[0].nodes[1].node_id}"
                      ],
                      "read_write_mode": "ReadWrite"
                    }
                volcengine_vedb_mysql_instance.foo: |-
                    {
                      "charge_type": "PostPaid",
                      "db_engine_version": "MySQL_8_0",
                      "db_minor_version": "3.0",
                      "instance_name": "tf-test",
                      "node_number": 2,
                      "node_spec": "vedb.mysql.x4.large",
                      "project_name": "default",
                      "storage_charge_type": "PostPaid",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "tftest",
                          "value": "tftest"
                        },
                        {
                          "key": "tftest2",
                          "value": "tftest2"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            eip_id: '- (Required, ForceNew) EIP ID that needs to be bound to the instance.'
            endpoint_id: '- (Required, ForceNew) The endpoint id.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The instance id.'
        importStatements: []
    volcengine_vedb_mysql_instance:
        subCategory: VEDB_MYSQL
        description: Provides a resource to manage vedb mysql instance
        name: volcengine_vedb_mysql_instance
        title: volcengine_vedb_mysql_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "charge_type": "PostPaid",
                  "db_engine_version": "MySQL_8_0",
                  "db_minor_version": "3.0",
                  "instance_name": "tf-test",
                  "node_number": 2,
                  "node_spec": "vedb.mysql.x4.large",
                  "project_name": "default",
                  "storage_charge_type": "PostPaid",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "tftest",
                      "value": "tftest"
                    }
                  ]
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[2].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            auto_renew: |-
                - (Optional) Whether to automatically renew under the prepaid scenario. Values:
                true: Automatically renew.
                false: Do not automatically renew.
                Description:
                When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
            charge_type: |-
                - (Required) Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
                PostPaid: Pay-as-you-go (postpaid).
                PrePaid: Monthly or yearly subscription (prepaid).
            db_engine_version: '- (Required, ForceNew) Database engine version, with a fixed value of MySQL_8_0.'
            db_minor_version: |-
                - (Optional, ForceNew) veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
                3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
                3.1: Natively supports HTAP application scenarios and accelerates complex queries.
                3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
            db_time_zone: '- (Optional, ForceNew) Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            id: '- ID of the resource.'
            instance_name: |-
                - (Optional) Instance name. Naming rules:
                It cannot start with a number or a hyphen (-).
                It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
                The length must be within 1 to 128 characters.
                Description
                If the instance name is not filled in, the instance ID will be used as the instance name.
                When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
            key: '- (Required) The Key of Tags.'
            lower_case_table_names: |-
                - (Optional, ForceNew) Whether table names are case-sensitive. The default value is 1. Value range:
                0: Table names are case-sensitive. The backend stores them according to the actual table name.
                1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
                Description:
                This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
            node_number: '- (Required) Number of instance nodes. The value range is from 2 to 16.'
            node_spec: '- (Required) Node specification code of an instance.'
            period: |-
                - (Optional) Purchase duration in prepaid scenarios.
                Description:
                When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
            period_unit: |-
                - (Optional) Purchase cycle in prepaid scenarios.
                Month: Monthly package.
                Year: Annual package.
                Description:
                When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
            port: |-
                - (Optional, ForceNew) Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
                Note:
                This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
                After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
            pre_paid_storage_in_gb: |-
                - (Optional) Storage size in prepaid scenarios.
                Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
            project_name: '- (Optional) Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.'
            storage_charge_type: |-
                - (Optional) Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
                PostPaid: Pay-as-you-go (postpaid).
                PrePaid: Monthly or yearly subscription (prepaid).
                Note
                When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
                When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
            subnet_id: '- (Required, ForceNew) Subnet ID of the veDB Mysql instance.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_veenedge_cloud_server:
        subCategory: VEENEDGE
        description: Provides a resource to manage veenedge cloud server
        name: volcengine_veenedge_cloud_server
        title: volcengine_veenedge_cloud_server
        examples:
            - name: foo
              manifest: |-
                {
                  "billing_config": [
                    {
                      "bandwidth_billing_method": "MonthlyP95",
                      "computing_billing_method": "MonthlyPeak"
                    }
                  ],
                  "cloudserver_name": "tf-test",
                  "default_area_name": "C******na",
                  "default_isp": "CMCC",
                  "image_id": "image*****viqm",
                  "network_config": [
                    {
                      "bandwidth_peak": 5
                    }
                  ],
                  "schedule_strategy": [
                    {
                      "network_strategy": "region",
                      "price_strategy": "high_priority",
                      "schedule_strategy": "dispersion"
                    }
                  ],
                  "secret_data": "sshkey-47*****wgc",
                  "secret_type": "KeyPair",
                  "server_area_level": "region",
                  "spec_name": "veEN****rge",
                  "storage_config": [
                    {
                      "data_disk_list": [
                        {
                          "capacity": 20,
                          "storage_type": "CloudBlockSSD"
                        }
                      ],
                      "system_disk": [
                        {
                          "capacity": 40,
                          "storage_type": "CloudBlockSSD"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            bandwidth_billing_method: '- (Required, ForceNew) The method of bandwidth billing. The value can be MonthlyP95 or DailyPeak.'
            bandwidth_peak: '- (Required, ForceNew) The peak of bandwidth.'
            billing_config: '- (Optional, ForceNew) The config of the billing.'
            capacity: '- (Required, ForceNew) The capacity of storage.'
            cloudserver_name: '- (Required, ForceNew) The name of cloud server.'
            computing_billing_method: '- (Required, ForceNew) The method of computing billing. The value can be MonthlyPeak or DailyPeak.'
            custom_data: '- (Optional, ForceNew) The custom data.'
            custom_external_interface_name: '- (Optional, ForceNew) The name of custom external interface.'
            custom_internal_interface_name: '- (Optional, ForceNew) The name of custom internal interface.'
            data: '- (Required, ForceNew) The custom data info.'
            data_disk_list: '- (Optional, ForceNew) The disk list info of data.'
            default_area_name: '- (Required) The name of default area.'
            default_cluster_name: '- (Optional) The name of default cluster.'
            default_instance_id: '- The default instance id generate by cloud server.'
            default_isp: '- (Required) The default isp info.'
            enable_ipv6: '- (Optional, ForceNew) Whether enable ipv6.'
            id: '- ID of the resource.'
            image_id: '- (Required, ForceNew) The image id of cloud server.'
            internal_bandwidth_peak: '- (Optional, ForceNew) The internal peak of bandwidth.'
            network_config: '- (Required, ForceNew) The config of the network.'
            network_strategy: '- (Required, ForceNew) The network strategy.'
            price_strategy: '- (Required, ForceNew) The price strategy. The value can be high_priority or low_priority.'
            schedule_strategy: '- (Required, ForceNew) The schedule strategy.'
            secret_data: '- (Optional, ForceNew) The data of secret. The value can be Password or KeyPair ID.'
            secret_type: '- (Required, ForceNew) The type of secret. The value can be KeyPair or Password.'
            server_area_level: '- (Required, ForceNew) The server area level. The value can be region or city.'
            spec_name: '- (Required, ForceNew) The spec name of cloud server.'
            storage_config: '- (Required, ForceNew) The config of the storage.'
            storage_type: '- (Required, ForceNew) The type of storage. The value can be CloudBlockHDD or CloudBlockSSD.'
            system_disk: '- (Required, ForceNew) The disk info of system.'
        importStatements: []
    volcengine_veenedge_instance:
        subCategory: VEENEDGE
        description: Provides a resource to manage veenedge instance
        name: volcengine_veenedge_instance
        title: volcengine_veenedge_instance
        examples:
            - name: foo
              manifest: |-
                {
                  "area_name": "*****",
                  "cloudserver_id": "cloudserver-x92*****jcc8f",
                  "isp": "CMCC"
                }
            - name: foo1
              manifest: |-
                {
                  "instance_id": "veen0*****0111112"
                }
        argumentDocs:
            area_name: '- (Optional, ForceNew) The area name.'
            cloudserver_id: '- (Optional, ForceNew) The id of cloud server.'
            cluster_name: '- (Optional, ForceNew) The name of cluster.'
            default_isp: '- (Optional, ForceNew) The default isp for multi line node.'
            id: '- ID of the resource.'
            instance_id: '- (Optional, ForceNew) Import an exist instance, usually for import a default instance generated with cloud server creating.'
            isp: '- (Optional, ForceNew) The isp info.'
            name: '- (Optional) The name of instance, only effected in update scene.'
            secret_data: '- (Optional) The data of secret, only effected in update scene.'
            secret_type: '- (Optional) The type of secret, only effected in update scene. The value can be KeyPair or Password.'
        importStatements: []
    volcengine_veenedge_vpc:
        subCategory: VEENEDGE
        description: Provides a resource to manage veenedge vpc
        name: volcengine_veenedge_vpc
        title: volcengine_veenedge_vpc
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_name": "b****t02",
                  "vpc_name": "tf-test-2"
                }
        argumentDocs:
            cidr: '- (Optional, ForceNew) The cidr info.'
            cluster_name: '- (Required, ForceNew) The name of the cluster.'
            desc: '- (Required) The description of the VPC.'
            id: '- ID of the resource.'
            vpc_name: '- (Required, ForceNew) The name of the VPC.'
        importStatements: []
    volcengine_vepfs_file_system:
        subCategory: VEPFS
        description: Provides a resource to manage vepfs file system
        name: volcengine_vepfs_file_system
        title: volcengine_vepfs_file_system
        examples:
            - name: foo
              manifest: |-
                {
                  "capacity": 12,
                  "description": "tf-test",
                  "enable_restripe": false,
                  "file_system_name": "acc-test-file-system",
                  "project": "default",
                  "store_type": "Advance_100",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ]
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- The id of the account.'
            bandwidth: '- The bandwidth info of the vepfs file system.'
            capacity: '- (Required) The capacity of the vepfs file system.'
            charge_status: '- The charge status of the vepfs file system.'
            charge_type: '- The charge type of the vepfs file system.'
            create_time: '- The create time of the vepfs file system.'
            description: '- (Optional) The description info of the vepfs file system.'
            enable_restripe: '- (Optional) Whether to enable data balance after capacity expansion. This filed is valid only when expanding capacity.'
            expire_time: '- The expire time of the vepfs file system.'
            file_system_name: '- (Required) The name of the vepfs file system.'
            file_system_type: '- The type of the vepfs file system.'
            free_time: '- The free time of the vepfs file system.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            last_modify_time: '- The last modify time of the vepfs file system.'
            project: '- (Optional, ForceNew) The project of the vepfs file system.'
            protocol_type: '- The protocol type of the vepfs file system.'
            region_id: '- The id of the region.'
            status: '- The status of the vepfs file system.'
            stop_service_time: '- The stop service time of the vepfs file system.'
            store_type: '- (Required, ForceNew) The store type of the vepfs file system. Valid values: Advance_100, Performance, Intelligent_Computing.'
            store_type_cn: '- The store type cn name of the vepfs file system.'
            subnet_id: '- (Required, ForceNew) The subnet id of the vepfs file system.'
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            version: '- The version info of the vepfs file system.'
            zone_id: '- The id of the zone.'
            zone_name: '- The name of the zone.'
        importStatements: []
    volcengine_vepfs_fileset:
        subCategory: VEPFS
        description: Provides a resource to manage vepfs fileset
        name: volcengine_vepfs_fileset
        title: volcengine_vepfs_fileset
        examples:
            - name: foo
              manifest: |-
                {
                  "capacity_limit": 30,
                  "file_limit": 20,
                  "file_system_id": "${volcengine_vepfs_file_system.foo.id}",
                  "fileset_name": "acc-test-fileset",
                  "fileset_path": "/tf-test/",
                  "max_bandwidth": 10,
                  "max_iops": 100
                }
              references:
                file_system_id: volcengine_vepfs_file_system.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vepfs_file_system.foo: |-
                    {
                      "capacity": 12,
                      "description": "tf-test",
                      "enable_restripe": false,
                      "file_system_name": "acc-test-file-system",
                      "project": "default",
                      "store_type": "Advance_100",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            capacity_limit: '- (Optional) The capacity limit of the vepfs fileset. Unit: Gib.'
            capacity_used: '- The used capacity of the vepfs fileset. Unit: GiB.'
            create_time: '- The create time of the vepfs fileset.'
            file_limit: '- (Optional) The file number limit of the vepfs fileset.'
            file_system_id: '- (Required, ForceNew) The id of the vepfs file system.'
            file_used: '- The used file number of the vepfs fileset.'
            fileset_name: '- (Required) The name of the vepfs fileset.'
            fileset_path: '- (Required, ForceNew) The path of the vepfs fileset.'
            id: '- ID of the resource.'
            max_bandwidth: '- (Optional) The max bandwidth qos limit of the vepfs fileset. Unit: MB/s.'
            max_inode_num: '- The max number of inode in the vepfs fileset.'
            max_iops: '- (Optional) The max IOPS qos limit of the vepfs fileset.'
            status: '- The status of the vepfs fileset.'
        importStatements: []
    volcengine_vepfs_mount_service:
        subCategory: VEPFS
        description: Provides a resource to manage vepfs mount service
        name: volcengine_vepfs_mount_service
        title: volcengine_vepfs_mount_service
        examples:
            - name: foo
              manifest: |-
                {
                  "mount_service_name": "acc-test-mount-service",
                  "node_type": "ecs.g1ie.large",
                  "project": "default",
                  "subnet_id": "${volcengine_subnet.foo.id}"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- The account id of the mount service.'
            attach_file_systems: '- The attached file system info of the mount service.'
            create_time: '- The created time of the mount service.'
            customer_path: '- The id of the vepfs file system.'
            default_password: '- The default password of ecs instance.'
            file_system_id: '- The id of the vepfs file system.'
            file_system_name: '- The name of the vepfs file system.'
            id: '- ID of the resource.'
            mount_service_name: '- (Required) The name of the mount service.'
            node_id: '- The id of ecs instance.'
            node_type: '- (Required, ForceNew) The node type of the mount service. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.'
            nodes: '- The nodes info of the mount service.'
            project: '- (Optional, ForceNew) The node type of the mount service.'
            region_id: '- The region id of the mount service.'
            status: '- The status of the vepfs file system.'
            subnet_id: '- (Required, ForceNew) The subnet id of the mount service.'
            vpc_id: '- The vpc id of the mount service.'
            zone_id: '- The zone id of the mount service.'
            zone_name: '- The zone name of the mount service.'
        importStatements: []
    volcengine_vepfs_mount_service_attachment:
        subCategory: VEPFS
        description: Provides a resource to manage vepfs mount service attachment
        name: volcengine_vepfs_mount_service_attachment
        title: volcengine_vepfs_mount_service_attachment
        examples:
            - name: foo
              manifest: |-
                {
                  "file_system_id": "${volcengine_vepfs_file_system.foo.id}",
                  "mount_service_id": "${volcengine_vepfs_mount_service.foo.id}"
                }
              references:
                file_system_id: volcengine_vepfs_file_system.foo.id
                mount_service_id: volcengine_vepfs_mount_service.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vepfs_file_system.foo: |-
                    {
                      "capacity": 12,
                      "description": "tf-test",
                      "enable_restripe": false,
                      "file_system_name": "acc-test-file-system",
                      "project": "default",
                      "store_type": "Advance_100",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_vepfs_mount_service.foo: |-
                    {
                      "mount_service_name": "acc-test-mount-service",
                      "node_type": "ecs.g1ie.large",
                      "project": "default",
                      "subnet_id": "${volcengine_subnet.foo.id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            attach_status: '- The attach status of the vepfs file system.'
            customer_path: '- (Optional, ForceNew) The custom mount directory, the default value is file system id.'
            file_system_id: '- (Required, ForceNew) The id of the vepfs file system.'
            id: '- ID of the resource.'
            mount_service_id: '- (Required, ForceNew) The id of the mount service.'
        importStatements: []
    volcengine_vke_addon:
        subCategory: VKE
        description: Provides a resource to manage vke addon
        name: volcengine_vke_addon
        title: volcengine_vke_addon
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "cccctv1vqtofp49d96ujg",
                  "config": "{\"xxx\":\"true\"}",
                  "deploy_mode": "Unmanaged",
                  "deploy_node_type": "Node",
                  "name": "csi-nas",
                  "version": "v0.1.3"
                }
        argumentDocs:
            cluster_id: '- (Required, ForceNew) The cluster id of the addon.'
            config: '- (Optional) The config info of addon. Please notice that ingress-nginx component prohibits updating config, can only works on the web console.'
            deploy_mode: '- (Optional, ForceNew) The deploy mode.'
            deploy_node_type: '- (Optional, ForceNew) The deploy node type.'
            id: '- ID of the resource.'
            name: '- (Required, ForceNew) The name of the addon.'
            version: '- (Optional) The version info of the cluster.'
        importStatements: []
    volcengine_vke_cluster:
        subCategory: VKE
        description: Provides a resource to manage vke cluster
        name: volcengine_vke_cluster
        title: volcengine_vke_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_config": [
                    {
                      "api_server_public_access_config": [
                        {
                          "public_access_network_config": [
                            {
                              "bandwidth": 1,
                              "billing_type": "PostPaidByBandwidth"
                            }
                          ]
                        }
                      ],
                      "api_server_public_access_enabled": true,
                      "resource_public_access_default_enabled": true,
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ]
                    }
                  ],
                  "delete_protection_enabled": false,
                  "description": "created by terraform",
                  "name": "acc-test-1",
                  "pods_config": [
                    {
                      "pod_network_mode": "VpcCniShared",
                      "vpc_cni_config": [
                        {
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ]
                    }
                  ],
                  "services_config": [
                    {
                      "service_cidrsv4": [
                        "172.30.0.0/18"
                      ]
                    }
                  ],
                  "tags": [
                    {
                      "key": "tf-k1",
                      "value": "tf-v1"
                    }
                  ]
                }
              dependencies:
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group2",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            api_server_public_access_config: '- (Optional) Cluster API Server public network access configuration.'
            api_server_public_access_enabled: '- (Optional) Cluster API Server public network access configuration, the value is true or false.'
            bandwidth: '- (Optional) The peak bandwidth of the public IP, unit: Mbps.'
            billing_type: '- (Optional) Billing type of public IP, the value is PostPaidByBandwidth or PostPaidByTraffic.'
            client_token: '- (Optional) ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.'
            cluster_config: '- (Required) The config of the cluster.'
            delete_protection_enabled: '- (Optional) The delete protection of the cluster, the value is true or false.'
            description: '- (Optional) The description of the cluster.'
            eip_allocation_id: '- Eip allocation Id.'
            enabled: '- (Optional) Whether to enable the log option, true means enable, false means not enable, the default is false. When Enabled is changed from false to true, a new Topic will be created.'
            flannel_config: '- (Optional, ForceNew) Flannel network configuration.'
            id: '- ID of the resource.'
            key: '- (Required) The Key of Tags.'
            kubeconfig_private: '- Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vke_kubeconfig instead.'
            kubeconfig_public: '- Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vke_kubeconfig instead.'
            kubernetes_version: '- (Optional, ForceNew) The version of Kubernetes specified when creating a VKE cluster (specified to patch version), with an example value of 1.24. If not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.'
            log_project_id: '- (Optional) The TLS log item ID of the collection target.'
            log_setups: '- (Optional) Cluster logging options. This structure can only be modified and added, and cannot be deleted. When encountering a cannot be deleted error, please query the log setups of the current cluster and fill in the current tf file.'
            log_ttl: '- (Optional) The storage time of logs in Log Service. After the specified log storage time is exceeded, the expired logs in this log topic will be automatically cleared. The unit is days, and the default is 30 days. The value range is 1 to 3650, specifying 3650 days means permanent storage.'
            log_type: |-
                - (Required) The current types of logs that can be enabled are:
                Audit: Cluster audit logs.
                KubeApiServer: kube-apiserver component logs.
                KubeScheduler: kube-scheduler component logs.
                KubeControllerManager: kube-controller-manager component logs.
            logging_config: '- (Optional) Cluster log configuration information.'
            max_pods_per_node: '- (Optional, ForceNew) The maximum number of single-node Pod instances for a Flannel container network, the value can be 16 or 32 or 64 or 128 or 256.'
            name: '- (Required) The name of the cluster.'
            pod_cidrs: '- (Optional, ForceNew) Pod CIDR for the Flannel container network.'
            pod_network_mode: '- (Required, ForceNew) The container network model of the cluster, the value is Flannel or VpcCniShared. Flannel: Flannel network model, an independent Underlay container network solution, combined with the global routing capability of VPC, to achieve a high-performance network experience for the cluster. VpcCniShared: VPC-CNI network model, an Underlay container network solution based on the ENI of the private network elastic network card, with high network communication performance.'
            pods_config: '- (Required) The config of the pods.'
            public_access_network_config: '- (Optional, ForceNew) Public network access network configuration.'
            resource_public_access_default_enabled: '- (Optional, ForceNew) Node public network access configuration, the value is true or false.'
            service_cidrsv4: '- (Required, ForceNew) The IPv4 private network address exposed by the service.'
            services_config: '- (Required, ForceNew) The config of the services.'
            subnet_ids: |-
                - (Required) The subnet ID for the cluster control plane to communicate within the private network.
                Up to 3 subnets can be selected from each available zone, and a maximum of 2 subnets can be added to each available zone.
                Cannot support deleting configured subnets.
            tags: '- (Optional) Tags.'
            value: '- (Required) The Value of Tags.'
            vpc_cni_config: '- (Optional) VPC-CNI network configuration.'
            vpc_id: '- (Optional, ForceNew) The private network where the cluster control plane network resides.'
        importStatements: []
    volcengine_vke_default_node_pool:
        subCategory: VKE
        description: Provides a resource to manage vke default node pool
        name: volcengine_vke_default_node_pool
        title: volcengine_vke_default_node_pool
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${volcengine_vke_cluster.foo.id}",
                  "kubernetes_config": [
                    {
                      "cordon": true,
                      "labels": [
                        {
                          "key": "tf-key1",
                          "value": "tf-value1"
                        },
                        {
                          "key": "tf-key2",
                          "value": "tf-value2"
                        }
                      ],
                      "taints": [
                        {
                          "effect": "NoSchedule",
                          "key": "tf-key3",
                          "value": "tf-value3"
                        },
                        {
                          "effect": "NoSchedule",
                          "key": "tf-key4",
                          "value": "tf-value4"
                        }
                      ]
                    }
                  ],
                  "node_config": [
                    {
                      "initialize_script": "ISMvYmluL2Jhc2gKZWNobyAx",
                      "security": [
                        {
                          "login": [
                            {
                              "password": "amw4WTdVcTRJVVFsUXpVTw=="
                            }
                          ],
                          "security_group_ids": [
                            "${volcengine_security_group.foo.id}"
                          ],
                          "security_strategies": [
                            "Hids"
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": [
                    {
                      "key": "tf-k1",
                      "value": "tf-v1"
                    }
                  ]
                }
              references:
                cluster_id: volcengine_vke_cluster.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "image-ybqi99s7yq8rx7mnk44b",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name2",
                      "instance_type": "ecs.g1ie.large",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}",
                            "${instance_name}"
                          ]
                        }
                      ],
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group2",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vke_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "api_server_public_access_config": [
                            {
                              "public_access_network_config": [
                                {
                                  "bandwidth": 1,
                                  "billing_type": "PostPaidByBandwidth"
                                }
                              ]
                            }
                          ],
                          "api_server_public_access_enabled": true,
                          "resource_public_access_default_enabled": true,
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ],
                      "delete_protection_enabled": false,
                      "description": "created by terraform",
                      "name": "acc-test-1",
                      "pods_config": [
                        {
                          "pod_network_mode": "VpcCniShared",
                          "vpc_cni_config": [
                            {
                              "subnet_ids": [
                                "${volcengine_subnet.foo.id}"
                              ]
                            }
                          ]
                        }
                      ],
                      "services_config": [
                        {
                          "service_cidrsv4": [
                            "172.30.0.0/18"
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            additional_container_storage_enabled: '- (Optional) The flag of additional container storage enable, the value is true or false..Default is false.'
            cluster_id: '- (Required, ForceNew) The ClusterId of NodePool.'
            container_storage_path: '- (Optional) The container storage path.When additional_container_storage_enabled is false will ignore.'
            cordon: '- (Required) The Cordon of KubernetesConfig.'
            ecs_tags: '- (Optional) Tags for Ecs.'
            effect: '- (Optional) The Effect of Taints.'
            id: '- ID of the resource.'
            image_id: '- (Optional) The Image Id to the ECS Instance.'
            initialize_script: '- (Optional) The initializeScript of NodeConfig.'
            instance_id: '- (Required) The instance id.'
            instances: '- (Optional) The ECS InstanceIds add to NodePool.'
            is_import: '- Is import of the DefaultNodePool. It only works when imported, set to true.'
            keep_instance_name: '- (Optional) The flag of keep instance name, the value is true or false.Default is false.'
            key: '- (Required) The Key of Tags.'
            kubernetes_config: '- (Required) The KubernetesConfig of NodeConfig.'
            labels: '- (Optional) The Labels of KubernetesConfig.'
            login: '- (Required) The Login of Security.'
            name_prefix: '- (Optional) The NamePrefix of node metadata.'
            node_config: '- (Required) The Config of NodePool.'
            password: '- (Optional) The Password of Security.'
            security: '- (Required) The Security of NodeConfig.'
            security_group_ids: '- (Optional) The SecurityGroupIds of Security.'
            security_strategies: '- (Optional) The SecurityStrategies of Security.'
            ssh_key_pair_name: '- (Optional) The SshKeyPairName of Security.'
            tags: '- (Optional) Tags.'
            taints: '- (Optional) The Taints of KubernetesConfig.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_vke_default_node_pool_batch_attach:
        subCategory: VKE
        description: Provides a resource to manage vke default node pool batch attach
        name: volcengine_vke_default_node_pool_batch_attach
        title: volcengine_vke_default_node_pool_batch_attach
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${volcengine_vke_cluster.foo.id}",
                  "default_node_pool_id": "${volcengine_vke_default_node_pool.foo.id}",
                  "instances": [
                    {
                      "additional_container_storage_enabled": false,
                      "instance_id": "${volcengine_ecs_instance.foo.id}",
                      "keep_instance_name": true
                    },
                    {
                      "additional_container_storage_enabled": false,
                      "instance_id": "${volcengine_ecs_instance.foo2.id}",
                      "keep_instance_name": true
                    }
                  ],
                  "kubernetes_config": [
                    {
                      "cordon": true,
                      "labels": [
                        {
                          "key": "tf-key1",
                          "value": "tf-value1"
                        },
                        {
                          "key": "tf-key2",
                          "value": "tf-value2"
                        }
                      ],
                      "taints": [
                        {
                          "effect": "NoSchedule",
                          "key": "tf-key3",
                          "value": "tf-value3"
                        },
                        {
                          "effect": "NoSchedule",
                          "key": "tf-key4",
                          "value": "tf-value4"
                        }
                      ]
                    }
                  ]
                }
              references:
                cluster_id: volcengine_vke_cluster.foo.id
                default_node_pool_id: volcengine_vke_default_node_pool.foo.id
                instances.instance_id: volcengine_ecs_instance.foo2.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "image_id": "image-ybqi99s7yq8rx7mnk44b",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name2",
                      "instance_type": "ecs.g1ie.large",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}",
                            "${instance_name}"
                          ]
                        }
                      ],
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_ecs_instance.foo2: |-
                    {
                      "image_id": "image-ybqi99s7yq8rx7mnk44b",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-name2",
                      "instance_type": "ecs.g1ie.large",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}",
                            "${instance_name}"
                          ]
                        }
                      ],
                      "password": "93f0cb0614Aab12",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0"
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group2",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-subnet-test-2",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vke_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "api_server_public_access_config": [
                            {
                              "public_access_network_config": [
                                {
                                  "bandwidth": 1,
                                  "billing_type": "PostPaidByBandwidth"
                                }
                              ]
                            }
                          ],
                          "api_server_public_access_enabled": true,
                          "resource_public_access_default_enabled": true,
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ],
                      "delete_protection_enabled": false,
                      "description": "created by terraform",
                      "name": "acc-test-1",
                      "pods_config": [
                        {
                          "pod_network_mode": "VpcCniShared",
                          "vpc_cni_config": [
                            {
                              "subnet_ids": [
                                "${volcengine_subnet.foo.id}"
                              ]
                            }
                          ]
                        }
                      ],
                      "services_config": [
                        {
                          "service_cidrsv4": [
                            "172.30.0.0/18"
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vke_default_node_pool.foo: |-
                    {
                      "cluster_id": "${volcengine_vke_cluster.foo.id}",
                      "kubernetes_config": [
                        {
                          "cordon": true,
                          "labels": [
                            {
                              "key": "tf-key1",
                              "value": "tf-value1"
                            },
                            {
                              "key": "tf-key2",
                              "value": "tf-value2"
                            }
                          ],
                          "taints": [
                            {
                              "effect": "NoSchedule",
                              "key": "tf-key3",
                              "value": "tf-value3"
                            },
                            {
                              "effect": "NoSchedule",
                              "key": "tf-key4",
                              "value": "tf-value4"
                            }
                          ]
                        }
                      ],
                      "node_config": [
                        {
                          "initialize_script": "ISMvYmluL2Jhc2gKZWNobyAx",
                          "security": [
                            {
                              "login": [
                                {
                                  "password": "amw4WTdVcTRJVVFsUXpVTw=="
                                }
                              ],
                              "security_group_ids": [
                                "${volcengine_security_group.foo.id}"
                              ],
                              "security_strategies": [
                                "Hids"
                              ]
                            }
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-project1"
                    }
        argumentDocs:
            additional_container_storage_enabled: '- (Optional) The flag of additional container storage enable, the value is true or false..Default is false.'
            cluster_id: '- (Required, ForceNew) The ClusterId of NodePool.'
            container_storage_path: '- (Optional) The container storage path.When additional_container_storage_enabled is false will ignore.'
            cordon: '- (Optional, ForceNew) The Cordon of KubernetesConfig.'
            default_node_pool_id: '- (Required, ForceNew) The default NodePool ID.'
            ecs_tags: '- Tags for Ecs.'
            effect: '- (Optional, ForceNew) The Effect of Taints. The value can be one of the following: NoSchedule, NoExecute, PreferNoSchedule, default value is NoSchedule.'
            id: '- ID of the resource.'
            image_id: '- (Optional) The Image Id to the ECS Instance.'
            initialize_script: '- The initializeScript of NodeConfig.'
            instance_id: '- (Required) The instance id.'
            instances: '- (Optional) The ECS InstanceIds add to NodePool.'
            is_import: '- Is import of the DefaultNodePool. It only works when imported, set to true.'
            keep_instance_name: '- (Optional) The flag of keep instance name, the value is true or false.Default is false.'
            key: '- (Required, ForceNew) The Key of Labels.'
            kubernetes_config: '- (Optional, ForceNew) The KubernetesConfig of NodeConfig. Please note that this field is the configuration of the node. The same key is subject to the config of the node pool. Different keys take effect together.'
            labels: '- (Optional, ForceNew) The Labels of KubernetesConfig.'
            login: '- The Login of Security.'
            name_prefix: '- The NamePrefix of NodeConfig.'
            node_config: '- The Config of NodePool.'
            password: '- The Password of Security.'
            security: '- The Security of NodeConfig.'
            security_group_ids: '- The SecurityGroupIds of Security.'
            security_strategies: '- The SecurityStrategies of Security.'
            ssh_key_pair_name: '- The SshKeyPairName of Security.'
            tags: '- Tags.'
            taints: '- (Optional, ForceNew) The Taints of KubernetesConfig.'
            value: '- (Optional, ForceNew) The Value of Labels.'
        importStatements: []
    volcengine_vke_kubeconfig:
        subCategory: VKE
        description: Provides a resource to manage vke kubeconfig
        name: volcengine_vke_kubeconfig
        title: volcengine_vke_kubeconfig
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${volcengine_vke_cluster.foo.id}",
                  "type": "Private",
                  "valid_duration": 2
                }
              references:
                cluster_id: volcengine_vke_cluster.foo.id
              dependencies:
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vke_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "api_server_public_access_config": [
                            {
                              "public_access_network_config": [
                                {
                                  "bandwidth": 1,
                                  "billing_type": "PostPaidByBandwidth"
                                }
                              ]
                            }
                          ],
                          "api_server_public_access_enabled": true,
                          "resource_public_access_default_enabled": true,
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ],
                      "delete_protection_enabled": false,
                      "description": "created by terraform",
                      "name": "acc-test-cluster",
                      "pods_config": [
                        {
                          "pod_network_mode": "VpcCniShared",
                          "vpc_cni_config": [
                            {
                              "subnet_ids": [
                                "${volcengine_subnet.foo.id}"
                              ]
                            }
                          ]
                        }
                      ],
                      "services_config": [
                        {
                          "service_cidrsv4": [
                            "172.30.0.0/18"
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            cluster_id: '- (Required, ForceNew) The cluster id of the Kubeconfig.'
            id: '- ID of the resource.'
            type: '- (Required, ForceNew) The type of the Kubeconfig, the value of type should be Public or Private.'
            valid_duration: '- (Optional, ForceNew) The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.'
        importStatements: []
    volcengine_vke_node:
        subCategory: VKE
        description: Provides a resource to manage vke node
        name: volcengine_vke_node
        title: volcengine_vke_node
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${volcengine_vke_cluster.foo.id}",
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "node_pool_id": "${volcengine_vke_node_pool.foo.id}"
                }
              references:
                cluster_id: volcengine_vke_cluster.foo.id
                instance_id: volcengine_ecs_instance.foo.id
                node_pool_id: volcengine_vke_node_pool.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "data_volumes": [
                        {
                          "delete_with_instance": true,
                          "size": 50,
                          "volume_type": "ESSD_PL0"
                        }
                      ],
                      "host_name": "tf-acc-test",
                      "image_id": "${[for image in data.volcengine_images.foo.images : image.image_id if image.image_name == \"veLinux 1.0 CentOS兼容版 64位\"][0]}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1ie.xlarge",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}",
                            "${tags}",
                            "${instance_name}"
                          ]
                        }
                      ],
                      "password": "93f0cb0614Aab12",
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 50,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vke_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "api_server_public_access_config": [
                            {
                              "public_access_network_config": [
                                {
                                  "bandwidth": 1,
                                  "billing_type": "PostPaidByBandwidth"
                                }
                              ]
                            }
                          ],
                          "api_server_public_access_enabled": true,
                          "resource_public_access_default_enabled": true,
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ],
                      "delete_protection_enabled": false,
                      "description": "created by terraform",
                      "name": "acc-test-cluster",
                      "pods_config": [
                        {
                          "pod_network_mode": "VpcCniShared",
                          "vpc_cni_config": [
                            {
                              "subnet_ids": [
                                "${volcengine_subnet.foo.id}"
                              ]
                            }
                          ]
                        }
                      ],
                      "services_config": [
                        {
                          "service_cidrsv4": [
                            "172.30.0.0/18"
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vke_node_pool.foo: |-
                    {
                      "auto_scaling": [
                        {
                          "enabled": false
                        }
                      ],
                      "cluster_id": "${volcengine_vke_cluster.foo.id}",
                      "kubernetes_config": [
                        {
                          "cordon": true,
                          "labels": [
                            {
                              "key": "label1",
                              "value": "value1"
                            }
                          ],
                          "taints": [
                            {
                              "effect": "NoSchedule",
                              "key": "taint-key/node-type",
                              "value": "taint-value"
                            }
                          ]
                        }
                      ],
                      "name": "acc-test-node-pool",
                      "node_config": [
                        {
                          "additional_container_storage_enabled": true,
                          "data_volumes": [
                            {
                              "mount_point": "/tf",
                              "size": "50",
                              "type": "ESSD_PL0"
                            }
                          ],
                          "ecs_tags": [
                            {
                              "key": "ecs_k1",
                              "value": "ecs_v1"
                            }
                          ],
                          "image_id": "${[for image in data.volcengine_images.foo.images : image.image_id if image.image_name == \"veLinux 1.0 CentOS兼容版 64位\"][0]}",
                          "initialize_script": "ZWNobyBoZWxsbyB0ZXJyYWZvcm0h",
                          "instance_charge_type": "PostPaid",
                          "instance_type_ids": [
                            "ecs.g1ie.xlarge"
                          ],
                          "name_prefix": "acc-test",
                          "security": [
                            {
                              "login": [
                                {
                                  "password": "UHdkMTIzNDU2"
                                }
                              ],
                              "security_group_ids": [
                                "${volcengine_security_group.foo.id}"
                              ],
                              "security_strategies": [
                                "Hids"
                              ]
                            }
                          ],
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ],
                          "system_volume": [
                            {
                              "size": "50",
                              "type": "ESSD_PL0"
                            }
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "node-pool-k1",
                          "value": "node-pool-v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            additional_container_storage_enabled: '- (Optional, ForceNew) The flag of additional container storage enable, the value is true or false. This field is valid only when adding an existing instance to the default node pool.'
            client_token: '- (Optional, ForceNew) The client token.'
            cluster_id: '- (Required, ForceNew) The cluster id.'
            container_storage_path: '- (Optional, ForceNew) The container storage path. This field is valid only when adding an existing instance to the default node pool.'
            cordon: '- (Optional, ForceNew) The Cordon of KubernetesConfig.'
            effect: '- (Optional, ForceNew) The Effect of Taints, the value can be NoSchedule or NoExecute or PreferNoSchedule.'
            id: '- ID of the resource.'
            image_id: '- (Optional, ForceNew) The ImageId of NodeConfig. This field is valid only when adding an existing instance to the default node pool.'
            initialize_script: '- (Optional, ForceNew) The initializeScript of Node. This field is valid only when adding an existing instance to the default node pool.'
            instance_id: '- (Required, ForceNew) The instance id.'
            keep_instance_name: '- (Optional) The flag of keep instance name, the value is true or false.'
            key: '- (Optional, ForceNew) The Key of Labels.'
            kubernetes_config: '- (Optional, ForceNew) The KubernetesConfig of Node. This field is valid only when adding an existing instance to the default node pool.'
            labels: '- (Optional, ForceNew) The Labels of KubernetesConfig.'
            node_pool_id: '- (Optional, ForceNew) The node pool id. This field is used to specify the custom node pool to which you want to add nodes. If not filled in, it means added to the default node pool.'
            taints: '- (Optional, ForceNew) The Taints of KubernetesConfig.'
            value: '- (Optional, ForceNew) The Value of Labels.'
        importStatements: []
    volcengine_vke_node_pool:
        subCategory: VKE
        description: Provides a resource to manage vke node pool
        name: volcengine_vke_node_pool
        title: volcengine_vke_node_pool
        examples:
            - name: foo
              manifest: |-
                {
                  "auto_scaling": [
                    {
                      "desired_replicas": 0,
                      "enabled": true,
                      "max_replicas": 5,
                      "min_replicas": 0,
                      "priority": 5,
                      "subnet_policy": "ZoneBalance"
                    }
                  ],
                  "cluster_id": "${volcengine_vke_cluster.foo.id}",
                  "kubernetes_config": [
                    {
                      "auto_sync_disabled": false,
                      "cordon": true,
                      "labels": [
                        {
                          "key": "label1",
                          "value": "value1"
                        }
                      ],
                      "taints": [
                        {
                          "effect": "NoSchedule",
                          "key": "taint-key/node-type",
                          "value": "taint-value"
                        }
                      ]
                    }
                  ],
                  "name": "acc-test-node-pool",
                  "node_config": [
                    {
                      "additional_container_storage_enabled": false,
                      "data_volumes": [
                        {
                          "mount_point": "/tf1",
                          "size": 80,
                          "type": "ESSD_PL0"
                        },
                        {
                          "mount_point": "/tf2",
                          "size": 60,
                          "type": "ESSD_PL0"
                        }
                      ],
                      "ecs_tags": [
                        {
                          "key": "ecs_k1",
                          "value": "ecs_v1"
                        }
                      ],
                      "image_id": "${[for image in data.volcengine_images.foo.images : image.image_id if image.image_name == \"veLinux 1.0 CentOS兼容版 64位\"][0]}",
                      "initialize_script": "ZWNobyBoZWxsbyB0ZXJyYWZvcm0h",
                      "instance_charge_type": "PostPaid",
                      "instance_type_ids": [
                        "ecs.g1ie.xlarge"
                      ],
                      "name_prefix": "acc-test",
                      "security": [
                        {
                          "login": [
                            {
                              "password": "UHdkMTIzNDU2"
                            }
                          ],
                          "security_group_ids": [
                            "${volcengine_security_group.foo.id}"
                          ],
                          "security_strategies": [
                            "Hids"
                          ]
                        }
                      ],
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ],
                      "system_volume": [
                        {
                          "size": 80,
                          "type": "ESSD_PL0"
                        }
                      ]
                    }
                  ],
                  "tags": [
                    {
                      "key": "node-pool-k1",
                      "value": "node-pool-v1"
                    }
                  ]
                }
              references:
                cluster_id: volcengine_vke_cluster.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "count": 2,
                      "data_volumes": [
                        {
                          "delete_with_instance": true,
                          "size": 50,
                          "volume_type": "ESSD_PL0"
                        }
                      ],
                      "host_name": "tf-acc-test",
                      "image_id": "${[for image in data.volcengine_images.foo.images : image.image_id if image.image_name == \"veLinux 1.0 CentOS兼容版 64位\"][0]}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-${count.index}",
                      "instance_type": "ecs.g1ie.xlarge",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}",
                            "${tags}"
                          ]
                        }
                      ],
                      "password": "93f0cb0614Aab12",
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 50,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vke_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "api_server_public_access_config": [
                            {
                              "public_access_network_config": [
                                {
                                  "bandwidth": 1,
                                  "billing_type": "PostPaidByBandwidth"
                                }
                              ]
                            }
                          ],
                          "api_server_public_access_enabled": true,
                          "resource_public_access_default_enabled": true,
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ],
                      "delete_protection_enabled": false,
                      "description": "created by terraform",
                      "name": "acc-test-cluster",
                      "pods_config": [
                        {
                          "pod_network_mode": "VpcCniShared",
                          "vpc_cni_config": [
                            {
                              "subnet_ids": [
                                "${volcengine_subnet.foo.id}"
                              ]
                            }
                          ]
                        }
                      ],
                      "services_config": [
                        {
                          "service_cidrsv4": [
                            "172.30.0.0/18"
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
            - name: foo1
              manifest: |-
                {
                  "cluster_id": "${volcengine_vke_cluster.foo.id}",
                  "instance_ids": "${volcengine_ecs_instance.foo[*].id}",
                  "keep_instance_name": true,
                  "kubernetes_config": [
                    {
                      "cordon": true,
                      "labels": [
                        {
                          "key": "label1",
                          "value": "value1"
                        }
                      ],
                      "taints": [
                        {
                          "effect": "NoSchedule",
                          "key": "taint-key/node-type",
                          "value": "taint-value"
                        }
                      ]
                    }
                  ],
                  "name": "acc-test-node-pool",
                  "node_config": [
                    {
                      "additional_container_storage_enabled": false,
                      "data_volumes": [
                        {
                          "mount_point": "/tf1",
                          "size": 50,
                          "type": "ESSD_PL0"
                        }
                      ],
                      "ecs_tags": [
                        {
                          "key": "ecs_k1",
                          "value": "ecs_v1"
                        }
                      ],
                      "image_id": "${[for image in data.volcengine_images.foo.images : image.image_id if image.image_name == \"veLinux 1.0 CentOS兼容版 64位\"][0]}",
                      "initialize_script": "ZWNobyBoZWxsbyB0ZXJyYWZvcm0h",
                      "instance_charge_type": "PostPaid",
                      "instance_type_ids": [
                        "ecs.g1ie.xlarge"
                      ],
                      "name_prefix": "acc-test",
                      "security": [
                        {
                          "login": [
                            {
                              "password": "UHdkMTIzNDU2"
                            }
                          ],
                          "security_group_ids": [
                            "${volcengine_security_group.foo.id}"
                          ],
                          "security_strategies": [
                            "Hids"
                          ]
                        }
                      ],
                      "subnet_ids": [
                        "${volcengine_subnet.foo.id}"
                      ],
                      "system_volume": [
                        {
                          "size": 50,
                          "type": "ESSD_PL0"
                        }
                      ]
                    }
                  ],
                  "tags": [
                    {
                      "key": "node-pool-k1",
                      "value": "node-pool-v1"
                    }
                  ]
                }
              references:
                cluster_id: volcengine_vke_cluster.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "count": 2,
                      "data_volumes": [
                        {
                          "delete_with_instance": true,
                          "size": 50,
                          "volume_type": "ESSD_PL0"
                        }
                      ],
                      "host_name": "tf-acc-test",
                      "image_id": "${[for image in data.volcengine_images.foo.images : image.image_id if image.image_name == \"veLinux 1.0 CentOS兼容版 64位\"][0]}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs-${count.index}",
                      "instance_type": "ecs.g1ie.xlarge",
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${security_group_ids}",
                            "${tags}"
                          ]
                        }
                      ],
                      "password": "93f0cb0614Aab12",
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 50,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vke_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "api_server_public_access_config": [
                            {
                              "public_access_network_config": [
                                {
                                  "bandwidth": 1,
                                  "billing_type": "PostPaidByBandwidth"
                                }
                              ]
                            }
                          ],
                          "api_server_public_access_enabled": true,
                          "resource_public_access_default_enabled": true,
                          "subnet_ids": [
                            "${volcengine_subnet.foo.id}"
                          ]
                        }
                      ],
                      "delete_protection_enabled": false,
                      "description": "created by terraform",
                      "name": "acc-test-cluster",
                      "pods_config": [
                        {
                          "pod_network_mode": "VpcCniShared",
                          "vpc_cni_config": [
                            {
                              "subnet_ids": [
                                "${volcengine_subnet.foo.id}"
                              ]
                            }
                          ]
                        }
                      ],
                      "services_config": [
                        {
                          "service_cidrsv4": [
                            "172.30.0.0/18"
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "key": "tf-k1",
                          "value": "tf-v1"
                        }
                      ]
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            additional_container_storage_enabled: '- (Optional) The AdditionalContainerStorageEnabled of NodeConfig.'
            auto_renew: '- (Optional) Is AutoRenew of PrePaid instance of NodeConfig. Valid values: true, false. when InstanceChargeType is PrePaid, default value is true.'
            auto_renew_period: '- (Optional) The AutoRenewPeriod of PrePaid instance of NodeConfig. Valid values: 1, 2, 3, 6, 12. Unit: month. when InstanceChargeType is PrePaid and AutoRenew enable, default value is 1.'
            auto_scaling: '- (Optional) The node pool elastic scaling configuration information.'
            auto_sync_disabled: '- (Optional) Whether to disable the function of automatically synchronizing labels and taints to existing nodes. Default is false.'
            client_token: '- (Optional) The ClientToken of NodePool.'
            cluster_id: '- (Optional, ForceNew) The ClusterId of NodePool.'
            cordon: '- (Required) The Cordon of KubernetesConfig.'
            creating_count: '- The CreatingCount of Node.'
            data_volumes: '- (Optional) The DataVolumes of NodeConfig.'
            deleting_count: '- The DeletingCount of Node.'
            desired_replicas: '- (Optional) The DesiredReplicas of AutoScaling, default 0, range in min_replicas to max_replicas.'
            ecs_tags: '- (Optional) Tags for Ecs.'
            effect: '- (Optional) The Effect of Taints, the value can be NoSchedule or NoExecute or PreferNoSchedule.'
            enabled: '- (Optional) Whether to enable the auto scaling function of the node pool. When a node needs to be manually added to the node pool, the value of this field must be false.'
            failed_count: '- The FailedCount of Node.'
            feature_gates: '- (Optional) The FeatureGates of KubeletConfig.'
            hpc_cluster_ids: '- (Optional) The IDs of HpcCluster, only one ID is supported currently.'
            id: '- ID of the resource.'
            image_id: '- (Optional) The ImageId of NodeConfig.'
            initialize_script: '- (Optional) The initializeScript of NodeConfig.'
            instance_charge_type: '- (Optional, ForceNew) The InstanceChargeType of PrePaid instance of NodeConfig. Valid values: PostPaid, PrePaid. Default value: PostPaid.'
            instance_ids: |-
                - (Optional) The list of existing ECS instance ids. Add existing instances with same type of security group under the same cluster VPC to the custom node pool.
                Note that removing instance ids from the list will only remove the nodes from cluster and not release the ECS instances. But deleting node pool will release the ECS instances in it.
                It is not recommended to use this field, it is recommended to use volcengine_vke_node resource to add an existing instance to a custom node pool.
            instance_type_ids: '- (Required) The InstanceTypeIds of NodeConfig. The value can get from volcengine_vke_support_resource_types datasource.'
            keep_instance_name: |-
                - (Optional) Whether to keep instance name when adding an existing instance to a custom node pool, the value is true or false.
                This field is valid only when adding new instances to the custom node pool.
            key: '- (Required) The Key of Tags.'
            kubelet_config: '- (Optional) The KubeletConfig of KubernetesConfig. After adding parameters, deleting parameters does not take effect.'
            kubernetes_config: '- (Required) The KubernetesConfig of NodeConfig.'
            labels: '- (Optional) The Labels of KubernetesConfig.'
            login: '- (Optional) The Login of Security.'
            max_replicas: '- (Optional) The MaxReplicas of AutoScaling, default 10, range in 1~2000. This field is valid when the value of enabled is true.'
            min_replicas: '- (Optional) The MinReplicas of AutoScaling, default 0. This field is valid when the value of enabled is true.'
            mount_point: '- (Optional) The target mount directory of the disk. Must start with /.'
            name: '- (Optional) The Name of NodePool.'
            name_prefix: '- (Optional) The NamePrefix of node metadata.'
            node_config: '- (Required) The Config of NodePool.'
            node_statistics: '- The NodeStatistics of NodeConfig.'
            password: '- (Optional) The Password of Security, this field must be encoded with base64.'
            period: '- (Optional) The Period of PrePaid instance of NodeConfig. Valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36. Unit: month. when InstanceChargeType is PrePaid, default value is 12.'
            priority: '- (Optional) The Priority of AutoScaling, default 10, rang in 0~100. This field is valid when the value of enabled is true and the value of subnet_policy is Priority.'
            qos_resource_manager: '- (Optional) Whether to enable QoSResourceManager. Default is false.'
            running_count: '- The RunningCount of Node.'
            security: '- (Required) The Security of NodeConfig.'
            security_group_ids: '- (Optional) The SecurityGroupIds of Security.'
            security_strategies: '- (Optional) The SecurityStrategies of Security, the value can be empty or Hids.'
            size: '- (Optional) The Size of DataVolumes, the value range in 20~32768. Default value is 20.'
            ssh_key_pair_name: '- (Optional) The SshKeyPairName of Security.'
            starting_count: '- (Deprecated) This field has been deprecated and is not recommended for use. The StartingCount of Node.'
            stopped_count: '- (Deprecated) This field has been deprecated and is not recommended for use. The StoppedCount of Node.'
            stopping_count: '- (Deprecated) This field has been deprecated and is not recommended for use. The StoppingCount of Node.'
            subnet_ids: '- (Required) The SubnetIds of NodeConfig.'
            subnet_policy: '- (Optional) Multi-subnet scheduling strategy for nodes. The value can be ZoneBalance or Priority.'
            system_volume: '- (Optional) The SystemVolume of NodeConfig.'
            tags: '- (Optional) Tags.'
            taints: '- (Optional) The Taints of KubernetesConfig.'
            topology_manager_policy: '- (Optional) The TopologyManagerPolicy of KubeletConfig. Valid values: none, restricted, best-effort, single-numa-node. Default is none.'
            topology_manager_scope: '- (Optional) The TopologyManagerScope of KubeletConfig. Valid values: container.'
            total_count: '- The TotalCount of Node.'
            type: '- (Optional) The Type of DataVolumes, the value can be PTSSD or ESSD_PL0 or ESSD_FlexPL. Default value is ESSD_PL0.'
            updating_count: '- The UpdatingCount of Node.'
            value: '- (Required) The Value of Tags.'
        importStatements: []
    volcengine_volume:
        subCategory: EBS
        description: Provides a resource to manage volume
        name: volcengine_volume
        title: volcengine_volume
        examples:
            - name: PreVolume
              manifest: |-
                {
                  "delete_with_instance": true,
                  "description": "acc-test",
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "kind": "data",
                  "project_name": "default",
                  "size": 40,
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "volume_charge_type": "PrePaid",
                  "volume_name": "acc-test-volume",
                  "volume_type": "ESSD_PL0",
                  "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
                zone_id: data.volcengine_zones.foo.zones[0].id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "description": "acc-test",
                      "host_name": "tf-acc-test",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PrePaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "period": 1,
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
            - name: PostVolume
              manifest: |-
                {
                  "description": "acc-test",
                  "kind": "data",
                  "project_name": "default",
                  "size": 40,
                  "tags": [
                    {
                      "key": "k1",
                      "value": "v1"
                    }
                  ],
                  "volume_charge_type": "PostPaid",
                  "volume_name": "acc-test-volume",
                  "volume_type": "ESSD_PL0",
                  "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                }
              references:
                zone_id: data.volcengine_zones.foo.zones[0].id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "description": "acc-test",
                      "host_name": "tf-acc-test",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PrePaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "period": 1,
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            created_at: '- Creation time of Volume.'
            delete_with_instance: '- (Optional) Delete Volume with Attached Instance.'
            description: '- (Optional) The description of the Volume.'
            extra_performance_iops: '- (Optional) The extra IOPS performance size for volume. Unit: times per second. The valid values for Balance and IOPS is 0~50000.'
            extra_performance_throughput_mb: '- (Optional) The extra Throughput performance size for volume. Unit: MB/s. The valid values for ESSD FlexPL volume is 0~650.'
            extra_performance_type_id: '- (Optional) The type of extra performance for volume. The valid values for ESSD FlexPL volume are Throughput, Balance, IOPS. The valid value for TSSD_TL0 volume is Throughput.'
            id: '- ID of the resource.'
            instance_id: '- (Optional, ForceNew) The ID of the instance to which the created volume is automatically attached. When use this field to attach ecs instance, the attached volume cannot be deleted by terraform, please use terraform state rm volcengine_volume.resource_name command to remove it from terraform state file and management.'
            key: '- (Required) The Key of Tags.'
            kind: '- (Required, ForceNew) The kind of Volume, the value is data.'
            project_name: '- (Optional) The ProjectName of the Volume.'
            size: '- (Required) The size of Volume.'
            snapshot_id: |-
                - (Optional, ForceNew) The id of the snapshot. When creating a volume using snapshots, this field is required.
                When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            status: '- Status of Volume.'
            tags: '- (Optional) Tags.'
            trade_status: '- Status of Trade.'
            value: '- (Required) The Value of Tags.'
            volume_charge_type: '- (Optional) The charge type of the Volume, the value is PostPaid or PrePaid. The PrePaid volume cannot be detached.'
            volume_name: '- (Required) The name of Volume.'
            volume_type: '- (Required) The type of Volume, the value is PTSSD or ESSD_PL0 or ESSD_PL1 or ESSD_PL2 or ESSD_FlexPL.'
            zone_id: '- (Required, ForceNew) The id of the Zone.'
        importStatements: []
    volcengine_volume_attach:
        subCategory: EBS
        description: Provides a resource to manage volume attach
        name: volcengine_volume_attach
        title: volcengine_volume_attach
        examples:
            - name: foo
              manifest: |-
                {
                  "instance_id": "${volcengine_ecs_instance.foo.id}",
                  "volume_id": "${volcengine_volume.foo.id}"
                }
              references:
                instance_id: volcengine_ecs_instance.foo.id
                volume_id: volcengine_volume.foo.id
              dependencies:
                volcengine_ecs_instance.foo: |-
                    {
                      "description": "acc-test",
                      "host_name": "tf-acc-test",
                      "image_id": "${data.volcengine_images.foo.images[0].image_id}",
                      "instance_charge_type": "PostPaid",
                      "instance_name": "acc-test-ecs",
                      "instance_type": "ecs.g1.large",
                      "password": "93f0cb0614Aab12",
                      "project_name": "default",
                      "security_group_ids": [
                        "${volcengine_security_group.foo.id}"
                      ],
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "system_volume_size": 40,
                      "system_volume_type": "ESSD_PL0",
                      "tags": [
                        {
                          "key": "k1",
                          "value": "v1"
                        }
                      ]
                    }
                volcengine_security_group.foo: |-
                    {
                      "security_group_name": "acc-test-security-group",
                      "vpc_id": "${volcengine_vpc.foo.id}"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_volume.foo: |-
                    {
                      "description": "acc-test",
                      "kind": "data",
                      "project_name": "default",
                      "size": 40,
                      "volume_charge_type": "PostPaid",
                      "volume_name": "acc-test-volume",
                      "volume_type": "ESSD_PL0",
                      "zone_id": "${data.volcengine_zones.foo.zones[0].id}"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            created_at: '- Creation time of Volume.'
            delete_with_instance: '- (Optional) Delete Volume with Attached Instance.It is not recommended to use this field. If used, please ensure that the value of this field is consistent with the value of delete_with_instance in volcengine_volume.'
            id: '- ID of the resource.'
            instance_id: '- (Required, ForceNew) The Id of Instance.'
            status: '- Status of Volume.'
            updated_at: '- Update time of Volume.'
            volume_id: '- (Required, ForceNew) The Id of Volume.'
        importStatements: []
    volcengine_vpc:
        subCategory: VPC
        description: Provides a resource to manage vpc
        name: volcengine_vpc
        title: volcengine_vpc
        examples:
            - name: foo
              manifest: |-
                {
                  "cidr_block": "172.16.0.0/16",
                  "dns_servers": [
                    "8.8.8.8",
                    "114.114.114.114"
                  ],
                  "project_name": "AS_test",
                  "vpc_name": "tf-project-1"
                }
        argumentDocs:
            account_id: '- The account ID of VPC.'
            associate_cens: '- The associate cen list of VPC.'
            auxiliary_cidr_blocks: '- The auxiliary cidr block list of VPC.'
            cen_id: '- The ID of CEN.'
            cen_owner_id: '- The owner ID of CEN.'
            cen_status: '- The status of CEN.'
            cidr_block: '- (Required, ForceNew) A network address block which should be a subnet of the three internal network segments (10.0.0.0/16, 172.16.0.0/12 and 192.168.0.0/16).'
            creation_time: '- Creation time of VPC.'
            description: '- (Optional) The description of the VPC.'
            dns_servers: '- (Optional) The DNS server list of the VPC. And you can specify 0 to 5 servers to this list.'
            enable_ipv6: '- (Optional) Specifies whether to enable the IPv6 CIDR block of the VPC.'
            id: '- ID of the resource.'
            ipv6_cidr_block: '- (Optional) The IPv6 CIDR block of the VPC.'
            key: '- (Required) The Key of Tags.'
            nat_gateway_ids: '- The nat gateway ID list of VPC.'
            project_name: '- (Optional) The ProjectName of the VPC.'
            route_table_ids: '- The route table ID list of VPC.'
            security_group_ids: '- The security group ID list of VPC.'
            status: '- Status of VPC.'
            subnet_ids: '- The subnet ID list of VPC.'
            tags: '- (Optional) Tags.'
            update_time: '- The update time of VPC.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- The ID of VPC.'
            vpc_name: '- (Optional) The name of the VPC.'
        importStatements: []
    volcengine_vpc_ipv6_address_bandwidth:
        subCategory: VPC
        description: Provides a resource to manage vpc ipv6 address bandwidth
        name: volcengine_vpc_ipv6_address_bandwidth
        title: volcengine_vpc_ipv6_address_bandwidth
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 5,
                  "billing_type": "PostPaidByBandwidth",
                  "ipv6_address": "${data.volcengine_vpc_ipv6_addresses.dataIpv6.ipv6_addresses.0.ipv6_address}"
                }
              references:
                ipv6_address: data.volcengine_vpc_ipv6_addresses.dataIpv6.ipv6_addresses.0.ipv6_address
        argumentDocs:
            allocation_id: '- The ID of the Ipv6AddressBandwidth.'
            bandwidth: '- (Optional) Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.'
            billing_type: '- (Required, ForceNew) BillingType of the Ipv6 bandwidth. Valid values: PostPaidByBandwidth; PostPaidByTraffic.'
            business_status: '- The BusinessStatus of the Ipv6AddressBandwidth.'
            creation_time: '- Creation time of the Ipv6AddressBandwidth.'
            delete_time: '- Delete time of the Ipv6AddressBandwidth.'
            id: '- ID of the resource.'
            instance_id: '- The ID of the associated instance.'
            instance_type: '- The type of the associated instance.'
            ipv6_address: '- (Required, ForceNew) Ipv6 address.'
            isp: '- The ISP of the Ipv6AddressBandwidth.'
            lock_reason: '- The BusinessStatus of the Ipv6AddressBandwidth.'
            network_type: '- The network type of the Ipv6AddressBandwidth.'
            overdue_time: '- Overdue time of the Ipv6AddressBandwidth.'
            status: '- The status of the Ipv6AddressBandwidth.'
            update_time: '- Update time of the Ipv6AddressBandwidth.'
        importStatements: []
    volcengine_vpc_ipv6_gateway:
        subCategory: VPC
        description: Provides a resource to manage vpc ipv6 gateway
        name: volcengine_vpc_ipv6_gateway
        title: volcengine_vpc_ipv6_gateway
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "test",
                  "name": "tf-test-1",
                  "vpc_id": "vpc-12afxho4sxyio17q7y2kkp8ej"
                }
        argumentDocs:
            creation_time: '- Creation time of the Ipv6Gateway.'
            description: '- (Optional) The description of the Ipv6Gateway.'
            id: '- ID of the resource.'
            ipv6_gateway_id: '- The ID of the Ipv6Gateway.'
            name: '- (Optional) The name of the Ipv6Gateway.'
            status: '- The Status of the Ipv6Gateway.'
            update_time: '- Update time of the Ipv6Gateway.'
            vpc_id: '- (Required, ForceNew) The ID of the VPC which the Ipv6Gateway belongs to.'
        importStatements: []
    volcengine_vpc_prefix_list:
        subCategory: VPC
        description: Provides a resource to manage vpc prefix list
        name: volcengine_vpc_prefix_list
        title: volcengine_vpc_prefix_list
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "acc test description",
                  "ip_version": "IPv4",
                  "max_entries": 7,
                  "prefix_list_entries": [
                    {
                      "cidr": "192.168.4.0/28",
                      "description": "acc-test-1"
                    },
                    {
                      "cidr": "192.168.9.0/28",
                      "description": "acc-test-4"
                    },
                    {
                      "cidr": "192.168.8.0/28",
                      "description": "acc-test-5"
                    }
                  ],
                  "prefix_list_name": "acc-test-prefix",
                  "tags": [
                    {
                      "key": "tf-key1",
                      "value": "tf-value1"
                    }
                  ]
                }
        argumentDocs:
            cidr: '- (Optional) CIDR of prefix list entries.'
            description: '- (Optional) The description of the prefix list.'
            id: '- ID of the resource.'
            ip_version: |-
                - (Optional, ForceNew) IP version type. Possible values:
                IPv4 (default): IPv4 type.
                IPv6: IPv6 type.
            key: '- (Required, ForceNew) The Key of Tags.'
            max_entries: '- (Required) Maximum number of entries, which is the maximum number of entries that can be added to the prefix list. The value range is 1 to 200.'
            prefix_list_associations: '- Collection of resources associated with VPC prefix list.'
            prefix_list_entries: '- (Optional) Prefix list entry list.'
            prefix_list_name: '- (Optional) The name of the prefix list.'
            resource_id: '- Associated resource ID.'
            resource_type: '- Related resource types.'
            tags: '- (Optional, ForceNew) Tags.'
            value: '- (Required, ForceNew) The Value of Tags.'
        importStatements: []
    volcengine_vpn_connection:
        subCategory: VPN
        description: Provides a resource to manage vpn connection
        name: volcengine_vpn_connection
        title: volcengine_vpn_connection
        examples:
            - name: foo
              manifest: |-
                {
                  "customer_gateway_id": "${volcengine_customer_gateway.foo.id}",
                  "description": "acc-tf-test",
                  "dpd_action": "none",
                  "ike_config_auth_alg": "md5",
                  "ike_config_dh_group": "group2",
                  "ike_config_enc_alg": "aes",
                  "ike_config_lifetime": 9000,
                  "ike_config_local_id": "acc_test",
                  "ike_config_mode": "main",
                  "ike_config_psk": "acctest@!3",
                  "ike_config_remote_id": "acc_test",
                  "ike_config_version": "ikev1",
                  "ipsec_config_auth_alg": "sha256",
                  "ipsec_config_dh_group": "group2",
                  "ipsec_config_enc_alg": "aes",
                  "ipsec_config_lifetime": 9000,
                  "local_subnet": [
                    "192.168.0.0/22"
                  ],
                  "nat_traversal": true,
                  "project_name": "default",
                  "remote_subnet": [
                    "192.161.0.0/20"
                  ],
                  "vpn_connection_name": "acc-tf-test",
                  "vpn_gateway_id": "${volcengine_vpn_gateway.foo.id}"
                }
              references:
                customer_gateway_id: volcengine_customer_gateway.foo.id
                vpn_gateway_id: volcengine_vpn_gateway.foo.id
              dependencies:
                volcengine_customer_gateway.foo: |-
                    {
                      "customer_gateway_name": "acc-test",
                      "description": "acc-test",
                      "ip_address": "192.0.1.3",
                      "project_name": "default"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpn_gateway.foo: |-
                    {
                      "bandwidth": 20,
                      "description": "acc-test",
                      "period": 2,
                      "project_name": "default",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "vpn_gateway_name": "acc-test"
                    }
        argumentDocs:
            account_id: '- The account ID of the VPN connection.'
            attach_status: '- The IPsec attach status.'
            attach_type: '- (Optional, ForceNew) The attach type of the VPN connection, the value can be VpnGateway or TransitRouter.'
            business_status: '- The business status of IPsec connection, valid when the attach type is ''TransitRouter''.'
            connect_status: '- The connect status of the VPN connection.'
            creation_time: '- The create time of VPN connection.'
            customer_gateway_id: '- (Required, ForceNew) The ID of the customer gateway.'
            deleted_time: '- The delete time of resource, valid when the attach type is ''TransitRouter''.'
            description: '- (Optional) The description of the VPN connection.'
            dpd_action: '- (Optional) The dpd action of the VPN connection.'
            id: '- ID of the resource.'
            ike_config_auth_alg: '- (Optional) The auth alg of the ike config of the VPN connection. Valid value are sha1, md5, sha256, sha384, sha512, sm3. The default value is sha1.'
            ike_config_dh_group: '- (Optional) The dk group of the ike config of the VPN connection. Valid value are group1, group2, group5, group14. The default value is group2.'
            ike_config_enc_alg: '- (Optional) The enc alg of the ike config of the VPN connection. Valid value are aes, aes192, aes256, des, 3des, sm4. The default value is aes.'
            ike_config_lifetime: '- (Optional) The lifetime of the ike config of the VPN connection. Value: 900~86400.'
            ike_config_local_id: '- (Optional) The local_id of the ike config of the VPN connection.'
            ike_config_mode: '- (Optional) The mode of the ike config of the VPN connection. Valid values are main, aggressive, and default value is main.'
            ike_config_psk: '- (Required) The psk of the ike config of the VPN connection. The length does not exceed 100 characters, and only uppercase and lowercase letters, special symbols and numbers are allowed.'
            ike_config_remote_id: '- (Optional) The remote id of the ike config of the VPN connection.'
            ike_config_version: '- (Optional) The version of the ike config of the VPN connection. The value can be ikev1 or ikev2. The default value is ikev1.'
            ip_address: '- The ip address of transit router, valid when the attach type is ''TransitRouter''.'
            ipsec_config_auth_alg: '- (Optional) The auth alg of the ipsec config of the VPN connection. Valid value are sha1, md5, sha256, sha384, sha512, sm3. The default value is sha1.'
            ipsec_config_dh_group: '- (Optional) The dh group of the ipsec config of the VPN connection. Valid value are group1, group2, group5, group14 and disable. The default value is group2.'
            ipsec_config_enc_alg: '- (Optional) The enc alg of the ipsec config of the VPN connection. Valid value are aes, aes192, aes256, des, 3des, sm4. The default value is aes.'
            ipsec_config_lifetime: '- (Optional) The ipsec config of the ike config of the VPN connection. Value: 900~86400.'
            local_subnet: '- (Required) The local subnet of the VPN connection. Up to 5 network segments are supported.'
            log_enabled: '- (Optional) Whether to enable connection logging. After enabling Connection Day, you can view and download IPsec connection logs, and use the log information to troubleshoot IPsec connection problems yourself.'
            nat_traversal: '- (Optional) The nat traversal of the VPN connection.'
            negotiate_instantly: '- (Optional) Whether to initiate negotiation mode immediately.'
            overdue_time: '- The overdue time of resource, valid when the attach type is ''TransitRouter''.'
            project_name: '- (Optional) The project name of the VPN connection.'
            remote_subnet: '- (Required) The remote subnet of the VPN connection. Up to 5 network segments are supported.'
            status: '- The status of the VPN connection.'
            transit_router_id: '- The id of transit router, valid when the attach type is ''TransitRouter''.'
            update_time: '- The update time of VPN connection.'
            vpn_connection_id: '- The ID of the VPN connection.'
            vpn_connection_name: '- (Optional) The name of the VPN connection.'
            vpn_gateway_id: '- (Optional, ForceNew) The ID of the vpn gateway. If the AttachType is not passed or the passed value is VpnGateway, this parameter must be filled. If the value of AttachType is TransitRouter, this parameter does not need to be filled.'
            zone_id: '- The zone id of transit router, valid when the attach type is ''TransitRouter''.'
        importStatements: []
    volcengine_vpn_gateway:
        subCategory: VPN
        description: Provides a resource to manage vpn gateway
        name: volcengine_vpn_gateway
        title: volcengine_vpn_gateway
        examples:
            - name: foo
              manifest: |-
                {
                  "bandwidth": 50,
                  "description": "acc-test1",
                  "period": 7,
                  "project_name": "default",
                  "subnet_id": "${volcengine_subnet.foo.id}",
                  "vpc_id": "${volcengine_vpc.foo.id}",
                  "vpn_gateway_name": "acc-test1"
                }
              references:
                subnet_id: volcengine_subnet.foo.id
                vpc_id: volcengine_vpc.foo.id
              dependencies:
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
        argumentDocs:
            account_id: '- The account ID of the VPN gateway.'
            bandwidth: '- (Required) The bandwidth of the VPN gateway. Unit: Mbps. Values: 5, 10, 20, 50, 100, 200, 500.'
            billing_type: '- (Optional, ForceNew) The BillingType of the VPN gateway. Valid values: PrePaid, PostPaid.'
            business_status: '- The business status of the VPN gateway.'
            connection_count: '- The connection count of the VPN gateway.'
            creation_time: '- The create time of VPN gateway.'
            deleted_time: '- The deleted time of the VPN gateway.'
            description: '- (Optional) The description of the VPN gateway.'
            expired_time: '- The expired time of the VPN gateway.'
            id: '- ID of the resource.'
            ip_address: '- The IP address of the VPN gateway.'
            ipsec_enabled: '- (Optional) Whether ipsec is enabled. Default is true.'
            key: '- (Required) The Key of Tags.'
            lock_reason: '- The lock reason of the VPN gateway.'
            period: |-
                - (Optional) The Period of the VPN gateway. Default value is 12. This parameter is only useful when creating vpn gateway. Default period unit is Month.
                Value range: 1~9, 12, 24, 36. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
            project_name: '- (Optional) The project name of the VPN gateway.'
            renew_type: '- The renew type of the VPN gateway.'
            route_count: '- The route count of the VPN gateway.'
            ssl_enabled: '- (Optional) Whether ssl is enabled. Default is false.'
            ssl_max_connections: '- (Optional) The max connections of ssl. This parameter can only be passed in when ssl_enabled is true. Default is 5.'
            status: '- The status of the VPN gateway.'
            subnet_id: '- (Required, ForceNew) The ID of the subnet where you want to create the VPN gateway.'
            tags: '- (Optional) Tags.'
            update_time: '- The update time of VPN gateway.'
            value: '- (Required) The Value of Tags.'
            vpc_id: '- (Required, ForceNew) The ID of the VPC where you want to create the VPN gateway.'
            vpn_gateway_id: '- The ID of the VPN gateway.'
            vpn_gateway_name: '- (Optional) The name of the VPN gateway.'
        importStatements: []
    volcengine_vpn_gateway_route:
        subCategory: VPN
        description: Provides a resource to manage vpn gateway route
        name: volcengine_vpn_gateway_route
        title: volcengine_vpn_gateway_route
        examples:
            - name: foo
              manifest: |-
                {
                  "destination_cidr_block": "192.168.0.0/20",
                  "next_hop_id": "${volcengine_vpn_connection.foo.id}",
                  "vpn_gateway_id": "${volcengine_vpn_gateway.foo.id}"
                }
              references:
                next_hop_id: volcengine_vpn_connection.foo.id
                vpn_gateway_id: volcengine_vpn_gateway.foo.id
              dependencies:
                volcengine_customer_gateway.foo: |-
                    {
                      "customer_gateway_name": "acc-test",
                      "description": "acc-test",
                      "ip_address": "192.0.1.3",
                      "project_name": "default"
                    }
                volcengine_subnet.foo: |-
                    {
                      "cidr_block": "172.16.0.0/24",
                      "subnet_name": "acc-test-subnet",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "zone_id": "cn-beijing-a"
                    }
                volcengine_vpc.foo: |-
                    {
                      "cidr_block": "172.16.0.0/16",
                      "vpc_name": "acc-test-vpc"
                    }
                volcengine_vpn_connection.foo: |-
                    {
                      "customer_gateway_id": "${volcengine_customer_gateway.foo.id}",
                      "description": "acc-tf-test",
                      "dpd_action": "none",
                      "ike_config_auth_alg": "md5",
                      "ike_config_dh_group": "group2",
                      "ike_config_enc_alg": "aes",
                      "ike_config_lifetime": 9000,
                      "ike_config_local_id": "acc_test",
                      "ike_config_mode": "main",
                      "ike_config_psk": "acctest@!3",
                      "ike_config_remote_id": "acc_test",
                      "ike_config_version": "ikev1",
                      "ipsec_config_auth_alg": "sha256",
                      "ipsec_config_dh_group": "group2",
                      "ipsec_config_enc_alg": "aes",
                      "ipsec_config_lifetime": 9000,
                      "local_subnet": [
                        "192.168.0.0/22"
                      ],
                      "log_enabled": false,
                      "nat_traversal": true,
                      "project_name": "default",
                      "remote_subnet": [
                        "192.161.0.0/20"
                      ],
                      "vpn_connection_name": "acc-tf-test",
                      "vpn_gateway_id": "${volcengine_vpn_gateway.foo.id}"
                    }
                volcengine_vpn_gateway.foo: |-
                    {
                      "bandwidth": 20,
                      "description": "acc-test",
                      "period": 2,
                      "project_name": "default",
                      "subnet_id": "${volcengine_subnet.foo.id}",
                      "vpc_id": "${volcengine_vpc.foo.id}",
                      "vpn_gateway_name": "acc-test"
                    }
        argumentDocs:
            creation_time: '- The create time of VPN gateway route.'
            destination_cidr_block: '- (Required, ForceNew) The destination cidr block of the VPN gateway route.'
            id: '- ID of the resource.'
            next_hop_id: '- (Required, ForceNew) The next hop id of the VPN gateway route.'
            status: '- The status of the VPN gateway route.'
            update_time: '- The update time of VPN gateway route.'
            vpn_gateway_id: '- (Required, ForceNew) The ID of the VPN gateway of the VPN gateway route.'
            vpn_gateway_route_id: '- The ID of the VPN gateway route.'
        importStatements: []
